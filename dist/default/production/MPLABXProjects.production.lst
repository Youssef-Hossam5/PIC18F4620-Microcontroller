

Microchip MPLAB XC8 Assembler V2.40 build 20220703182018 
                                                                                               Tue Mar 12 16:26:40 2024

Microchip MPLAB XC8 C Compiler v2.40 (Free license) build 20220703182018 Og1 
     1                           	processor	18F4620
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1,noexec
     6                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     7                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     8                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     9                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    10                           	psect	text0,global,reloc=2,class=CODE,delta=1
    11                           	psect	text1,global,reloc=2,class=CODE,delta=1
    12                           	psect	text2,global,reloc=2,class=CODE,delta=1
    13                           	psect	text3,global,reloc=2,class=CODE,delta=1
    14                           	psect	text4,global,reloc=2,class=CODE,delta=1
    15                           	psect	text5,global,reloc=2,class=CODE,delta=1
    16                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    17                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    18                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=1,noexec
    19                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    20   000000                     
    21                           ; Version 2.40
    22                           ; Generated 17/11/2021 GMT
    23                           ; 
    24                           ; Copyright Â© 2021, Microchip Technology Inc. and its subsidiaries ("Microchip")
    25                           ; All rights reserved.
    26                           ; 
    27                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    28                           ; 
    29                           ; Redistribution and use in source and binary forms, with or without modification, are
    30                           ; permitted provided that the following conditions are met:
    31                           ; 
    32                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    33                           ;        conditions and the following disclaimer.
    34                           ; 
    35                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    36                           ;        of conditions and the following disclaimer in the documentation and/or other
    37                           ;        materials provided with the distribution. Publication is not required when
    38                           ;        this file is used in an embedded application.
    39                           ; 
    40                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    41                           ;        software without specific prior written permission.
    42                           ; 
    43                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    44                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    45                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    46                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    47                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    48                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    49                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    50                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    51                           ; 
    52                           ; 
    53                           ; Code-generator required, PIC18F4620 Definitions
    54                           ; 
    55                           ; SFR Addresses
    56   000000                     
    57                           	psect	idataCOMRAM
    58   00FD9A                     __pidataCOMRAM:
    59                           	callstack 0
    60                           
    61                           ;initializer for _port_registers
    62   00FD9A  80                 	db	128
    63   00FD9B  0F                 	db	15
    64   00FD9C  81                 	db	129
    65   00FD9D  0F                 	db	15
    66   00FD9E  82                 	db	130
    67   00FD9F  0F                 	db	15
    68   00FDA0  83                 	db	131
    69   00FDA1  0F                 	db	15
    70   00FDA2  84                 	db	132
    71   00FDA3  0F                 	db	15
    72                           
    73                           ;initializer for _lat_registers
    74   00FDA4  89                 	db	137
    75   00FDA5  0F                 	db	15
    76   00FDA6  8A                 	db	138
    77   00FDA7  0F                 	db	15
    78   00FDA8  8B                 	db	139
    79   00FDA9  0F                 	db	15
    80   00FDAA  8C                 	db	140
    81   00FDAB  0F                 	db	15
    82   00FDAC  8D                 	db	141
    83   00FDAD  0F                 	db	15
    84                           
    85                           ;initializer for _tris_registers
    86   00FDAE  92                 	db	146
    87   00FDAF  0F                 	db	15
    88   00FDB0  93                 	db	147
    89   00FDB1  0F                 	db	15
    90   00FDB2  94                 	db	148
    91   00FDB3  0F                 	db	15
    92   00FDB4  95                 	db	149
    93   00FDB5  0F                 	db	15
    94   00FDB6  96                 	db	150
    95   00FDB7  0F                 	db	15
    96                           
    97                           ;initializer for _dc_motor_2
    98   00FDB8  12                 	db	18
    99   00FDB9  1A                 	db	26
   100                           
   101                           ;initializer for _dc_motor_1
   102   00FDBA  02                 	db	2
   103   00FDBB  0A                 	db	10
   104   000000                     _PORTE	set	3972
   105   000000                     _PORTD	set	3971
   106   000000                     _PORTC	set	3970
   107   000000                     _PORTB	set	3969
   108   000000                     _PORTA	set	3968
   109   000000                     _LATA	set	3977
   110   000000                     _TRISA	set	3986
   111   000000                     _TRISE	set	3990
   112   000000                     _TRISD	set	3989
   113   000000                     _TRISC	set	3988
   114   000000                     _TRISB	set	3987
   115   000000                     _LATE	set	3981
   116   000000                     _LATD	set	3980
   117   000000                     _LATC	set	3979
   118   000000                     _LATB	set	3978
   119                           
   120                           ; #config settings
   121                           
   122                           	psect	cinit
   123   00FDBC                     __pcinit:
   124                           	callstack 0
   125   00FDBC                     start_initialization:
   126                           	callstack 0
   127   00FDBC                     __initialization:
   128                           	callstack 0
   129                           
   130                           ; Initialize objects allocated to COMRAM (34 bytes)
   131                           ; load TBLPTR registers with __pidataCOMRAM
   132   00FDBC  0E9A               	movlw	low __pidataCOMRAM
   133   00FDBE  6EF6               	movwf	tblptrl,c
   134   00FDC0  0EFD               	movlw	high __pidataCOMRAM
   135   00FDC2  6EF7               	movwf	tblptrh,c
   136   00FDC4  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
   137   00FDC6  6EF8               	movwf	tblptru,c
   138   00FDC8  EE00  F001         	lfsr	0,__pdataCOMRAM
   139   00FDCC  EE10 F022          	lfsr	1,34
   140   00FDD0                     copy_data0:
   141   00FDD0  0009               	tblrd		*+
   142   00FDD2  CFF5 FFEE          	movff	tablat,postinc0
   143   00FDD6  50E5               	movf	postdec1,w,c
   144   00FDD8  50E1               	movf	fsr1l,w,c
   145   00FDDA  E1FA               	bnz	copy_data0
   146                           
   147                           ; Clear objects allocated to COMRAM (7 bytes)
   148   00FDDC  EE00  F02F         	lfsr	0,__pbssCOMRAM
   149   00FDE0  0E07               	movlw	7
   150   00FDE2                     clear_0:
   151   00FDE2  6AEE               	clrf	postinc0,c
   152   00FDE4  06E8               	decf	wreg,f,c
   153   00FDE6  E1FD               	bnz	clear_0
   154   00FDE8                     end_of_initialization:
   155                           	callstack 0
   156   00FDE8                     __end_of__initialization:
   157                           	callstack 0
   158   00FDE8  0E00               	movlw	low (__Lmediumconst shr (0+16))
   159   00FDEA  6EF8               	movwf	tblptru,c
   160   00FDEC  0100               	movlb	0
   161   00FDEE  EFB6  F07E         	goto	_main	;jump to C main() function
   162                           
   163                           	psect	bssCOMRAM
   164   00002F                     __pbssCOMRAM:
   165                           	callstack 0
   166   00002F                     relay_off@F2882:
   167                           	callstack 0
   168   00002F                     	ds	1
   169   000030                     relay_on@F2877:
   170                           	callstack 0
   171   000030                     	ds	1
   172   000031                     relay_initialize@F2872:
   173                           	callstack 0
   174   000031                     	ds	1
   175   000032                     led_turn_toggle@F2893:
   176                           	callstack 0
   177   000032                     	ds	1
   178   000033                     led_turn_off@F2888:
   179                           	callstack 0
   180   000033                     	ds	1
   181   000034                     led_turn_on@F2883:
   182                           	callstack 0
   183   000034                     	ds	1
   184   000035                     led_initialize@F2878:
   185                           	callstack 0
   186   000035                     	ds	1
   187                           
   188                           	psect	dataCOMRAM
   189   000001                     __pdataCOMRAM:
   190                           	callstack 0
   191   000001                     _port_registers:
   192                           	callstack 0
   193   000001                     	ds	10
   194   00000B                     _lat_registers:
   195                           	callstack 0
   196   00000B                     	ds	10
   197   000015                     _tris_registers:
   198                           	callstack 0
   199   000015                     	ds	10
   200   00001F                     _dc_motor_2:
   201                           	callstack 0
   202   00001F                     	ds	2
   203   000021                     _dc_motor_1:
   204                           	callstack 0
   205   000021                     	ds	2
   206                           
   207                           	psect	cstackCOMRAM
   208   000023                     __pcstackCOMRAM:
   209                           	callstack 0
   210   000023                     gpio_port_direction_initialize@direction:
   211                           	callstack 0
   212   000023                     gpio_port_write_logic@logic:
   213                           	callstack 0
   214   000023                     gpio_pin_direction_initialize@_pin_config:
   215                           	callstack 0
   216                           
   217                           ; 2 bytes @ 0x0
   218   000023                     	ds	1
   219   000024                     ??_gpio_port_direction_initialize:
   220   000024                     ??_gpio_port_write_logic:
   221                           
   222                           ; 1 bytes @ 0x1
   223   000024                     	ds	1
   224   000025                     ??_gpio_pin_direction_initialize:
   225                           
   226                           ; 1 bytes @ 0x2
   227   000025                     	ds	1
   228   000026                     gpio_port_direction_initialize@ret:
   229                           	callstack 0
   230   000026                     gpio_port_write_logic@ret:
   231                           	callstack 0
   232                           
   233                           ; 1 bytes @ 0x3
   234   000026                     	ds	1
   235   000027                     gpio_port_direction_initialize@port:
   236                           	callstack 0
   237   000027                     gpio_port_write_logic@port:
   238                           	callstack 0
   239                           
   240                           ; 1 bytes @ 0x4
   241   000027                     	ds	4
   242   00002B                     gpio_pin_direction_initialize@ret:
   243                           	callstack 0
   244                           
   245                           ; 1 bytes @ 0x8
   246   00002B                     	ds	1
   247   00002C                     dc_motor_initialize@_dc_motor:
   248                           	callstack 0
   249                           
   250                           ; 2 bytes @ 0x9
   251   00002C                     	ds	2
   252   00002E                     dc_motor_initialize@ret:
   253                           	callstack 0
   254                           
   255                           ; 1 bytes @ 0xB
   256   00002E                     	ds	1
   257   00002F                     
   258                           ; 1 bytes @ 0xC
   259 ;;
   260 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   261 ;;
   262 ;; *************** function _main *****************
   263 ;; Defined at:
   264 ;;		line 41 in file "application.c"
   265 ;; Parameters:    Size  Location     Type
   266 ;;		None
   267 ;; Auto vars:     Size  Location     Type
   268 ;;  ret             1    0        unsigned char 
   269 ;; Return value:  Size  Location     Type
   270 ;;                  2  196[None  ] int 
   271 ;; Registers used:
   272 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
   273 ;; Tracked objects:
   274 ;;		On entry : 0/0
   275 ;;		On exit  : 0/0
   276 ;;		Unchanged: 0/0
   277 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   278 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   279 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   280 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   281 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   282 ;;Total ram usage:        0 bytes
   283 ;; Hardware stack levels required when called: 3
   284 ;; This function calls:
   285 ;;		_application_intialize
   286 ;;		_gpio_port_write_logic
   287 ;; This function is called by:
   288 ;;		Startup code after reset
   289 ;; This function uses a non-reentrant model
   290 ;;
   291                           
   292                           	psect	text0
   293   00FD6C                     __ptext0:
   294                           	callstack 0
   295   00FD6C                     _main:
   296                           	callstack 28
   297   00FD6C                     
   298                           ;application.c: 43:      application_intialize();
   299   00FD6C  ECC1  F07E         	call	_application_intialize	;wreg free
   300   00FD70                     l1409:
   301   00FD70  0EC0               	movlw	192
   302   00FD72  6E23               	movwf	gpio_port_write_logic@logic^0,c
   303   00FD74  0E02               	movlw	2
   304   00FD76  EC3B  F07F         	call	_gpio_port_write_logic
   305   00FD7A  EFB8  F07E         	goto	l1409
   306   00FD7E  EF00  F000         	goto	start
   307   00FD82                     __end_of_main:
   308                           	callstack 0
   309                           
   310 ;; *************** function _gpio_port_write_logic *****************
   311 ;; Defined at:
   312 ;;		line 195 in file "MCAL_layer/GPIO/hal_gpio.c"
   313 ;; Parameters:    Size  Location     Type
   314 ;;  port            1    wreg     enum E2816
   315 ;;  logic           1    0[COMRAM] unsigned char 
   316 ;; Auto vars:     Size  Location     Type
   317 ;;  port            1    4[COMRAM] enum E2816
   318 ;;  ret             1    3[COMRAM] unsigned char 
   319 ;; Return value:  Size  Location     Type
   320 ;;                  1    wreg      unsigned char 
   321 ;; Registers used:
   322 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
   323 ;; Tracked objects:
   324 ;;		On entry : 0/0
   325 ;;		On exit  : 0/0
   326 ;;		Unchanged: 0/0
   327 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   328 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   329 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   330 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   331 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   332 ;;Total ram usage:        5 bytes
   333 ;; Hardware stack levels used: 1
   334 ;; This function calls:
   335 ;;		Nothing
   336 ;; This function is called by:
   337 ;;		_main
   338 ;; This function uses a non-reentrant model
   339 ;;
   340                           
   341                           	psect	text1
   342   00FE76                     __ptext1:
   343                           	callstack 0
   344   00FE76                     _gpio_port_write_logic:
   345                           	callstack 30
   346                           
   347                           ;incstack = 0
   348                           ;gpio_port_write_logic@port stored from wreg
   349   00FE76  6E27               	movwf	gpio_port_write_logic@port^0,c
   350   00FE78                     
   351                           ;MCAL_layer/GPIO/hal_gpio.c: 196:     Std_ReturnType ret= (Std_ReturnType)0x01 ;
   352   00FE78  0E01               	movlw	1
   353   00FE7A  6E26               	movwf	gpio_port_write_logic@ret^0,c
   354   00FE7C                     
   355                           ;MCAL_layer/GPIO/hal_gpio.c: 197: if( port > (5 -1) ){
   356   00FE7C  0E04               	movlw	4
   357   00FE7E  6427               	cpfsgt	gpio_port_write_logic@port^0,c
   358   00FE80  EF44  F07F         	goto	u621
   359   00FE84  EF46  F07F         	goto	u620
   360   00FE88                     u621:
   361   00FE88  EF4A  F07F         	goto	l1361
   362   00FE8C                     u620:
   363   00FE8C                     
   364                           ;MCAL_layer/GPIO/hal_gpio.c: 198:      ret= (Std_ReturnType)0x00 ;
   365   00FE8C  0E00               	movlw	0
   366   00FE8E  6E26               	movwf	gpio_port_write_logic@ret^0,c
   367                           
   368                           ;MCAL_layer/GPIO/hal_gpio.c: 199:     }
   369   00FE90  EF5C  F07F         	goto	l1363
   370   00FE94                     l1361:
   371                           
   372                           ;MCAL_layer/GPIO/hal_gpio.c: 201:     *lat_registers[port] = logic ;
   373   00FE94  5027               	movf	gpio_port_write_logic@port^0,w,c
   374   00FE96  0D02               	mullw	2
   375   00FE98  0E0B               	movlw	low _lat_registers
   376   00FE9A  24F3               	addwf	243,w,c
   377   00FE9C  6ED9               	movwf	fsr2l,c
   378   00FE9E  0E00               	movlw	high _lat_registers
   379   00FEA0  20F4               	addwfc	prodh,w,c
   380   00FEA2  6EDA               	movwf	fsr2h,c
   381   00FEA4  CFDE F024          	movff	postinc2,??_gpio_port_write_logic
   382   00FEA8  CFDD F025          	movff	postdec2,??_gpio_port_write_logic+1
   383   00FEAC  C024  FFD9         	movff	??_gpio_port_write_logic,fsr2l
   384   00FEB0  C025  FFDA         	movff	??_gpio_port_write_logic+1,fsr2h
   385   00FEB4  C023  FFDF         	movff	gpio_port_write_logic@logic,indf2
   386   00FEB8                     l1363:
   387                           
   388                           ;MCAL_layer/GPIO/hal_gpio.c: 203:  return ret ;
   389   00FEB8  5026               	movf	gpio_port_write_logic@ret^0,w,c
   390   00FEBA  0012               	return		;funcret
   391   00FEBC                     __end_of_gpio_port_write_logic:
   392                           	callstack 0
   393                           
   394 ;; *************** function _application_intialize *****************
   395 ;; Defined at:
   396 ;;		line 33 in file "application.c"
   397 ;; Parameters:    Size  Location     Type
   398 ;;		None
   399 ;; Auto vars:     Size  Location     Type
   400 ;;  ret             1    0        unsigned char 
   401 ;; Return value:  Size  Location     Type
   402 ;;                  1    wreg      void 
   403 ;; Registers used:
   404 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
   405 ;; Tracked objects:
   406 ;;		On entry : 0/0
   407 ;;		On exit  : 0/0
   408 ;;		Unchanged: 0/0
   409 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   410 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   411 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   412 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   413 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   414 ;;Total ram usage:        0 bytes
   415 ;; Hardware stack levels used: 1
   416 ;; Hardware stack levels required when called: 2
   417 ;; This function calls:
   418 ;;		_dc_motor_initialize
   419 ;;		_gpio_port_direction_initialize
   420 ;; This function is called by:
   421 ;;		_main
   422 ;; This function uses a non-reentrant model
   423 ;;
   424                           
   425                           	psect	text2
   426   00FD82                     __ptext2:
   427                           	callstack 0
   428   00FD82                     _application_intialize:
   429                           	callstack 28
   430   00FD82  0E21               	movlw	low _dc_motor_1
   431   00FD84  6E2C               	movwf	dc_motor_initialize@_dc_motor^0,c
   432   00FD86  0E00               	movlw	high _dc_motor_1
   433   00FD88  6E2D               	movwf	(dc_motor_initialize@_dc_motor+1)^0,c
   434   00FD8A  ECF9  F07E         	call	_dc_motor_initialize	;wreg free
   435   00FD8E  0E80               	movlw	128
   436   00FD90  6E23               	movwf	gpio_port_direction_initialize@direction^0,c
   437   00FD92  0E02               	movlw	2
   438   00FD94  EC18  F07F         	call	_gpio_port_direction_initialize
   439   00FD98  0012               	return		;funcret
   440   00FD9A                     __end_of_application_intialize:
   441                           	callstack 0
   442                           
   443 ;; *************** function _gpio_port_direction_initialize *****************
   444 ;; Defined at:
   445 ;;		line 157 in file "MCAL_layer/GPIO/hal_gpio.c"
   446 ;; Parameters:    Size  Location     Type
   447 ;;  port            1    wreg     enum E2816
   448 ;;  direction       1    0[COMRAM] unsigned char 
   449 ;; Auto vars:     Size  Location     Type
   450 ;;  port            1    4[COMRAM] enum E2816
   451 ;;  ret             1    3[COMRAM] unsigned char 
   452 ;; Return value:  Size  Location     Type
   453 ;;                  1    wreg      unsigned char 
   454 ;; Registers used:
   455 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
   456 ;; Tracked objects:
   457 ;;		On entry : 0/0
   458 ;;		On exit  : 0/0
   459 ;;		Unchanged: 0/0
   460 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   461 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   462 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   463 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   464 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   465 ;;Total ram usage:        5 bytes
   466 ;; Hardware stack levels used: 1
   467 ;; This function calls:
   468 ;;		Nothing
   469 ;; This function is called by:
   470 ;;		_application_intialize
   471 ;; This function uses a non-reentrant model
   472 ;;
   473                           
   474                           	psect	text3
   475   00FE30                     __ptext3:
   476                           	callstack 0
   477   00FE30                     _gpio_port_direction_initialize:
   478                           	callstack 29
   479                           
   480                           ;incstack = 0
   481                           ;gpio_port_direction_initialize@port stored from wreg
   482   00FE30  6E27               	movwf	gpio_port_direction_initialize@port^0,c
   483   00FE32                     
   484                           ;MCAL_layer/GPIO/hal_gpio.c: 158:     Std_ReturnType ret= (Std_ReturnType)0x01 ;
   485   00FE32  0E01               	movlw	1
   486   00FE34  6E26               	movwf	gpio_port_direction_initialize@ret^0,c
   487   00FE36                     
   488                           ;MCAL_layer/GPIO/hal_gpio.c: 159:     if (port > (5 -1) ) {
   489   00FE36  0E04               	movlw	4
   490   00FE38  6427               	cpfsgt	gpio_port_direction_initialize@port^0,c
   491   00FE3A  EF21  F07F         	goto	u581
   492   00FE3E  EF23  F07F         	goto	u580
   493   00FE42                     u581:
   494   00FE42  EF27  F07F         	goto	l1325
   495   00FE46                     u580:
   496   00FE46                     
   497                           ;MCAL_layer/GPIO/hal_gpio.c: 160:         ret= (Std_ReturnType)0x00 ;
   498   00FE46  0E00               	movlw	0
   499   00FE48  6E26               	movwf	gpio_port_direction_initialize@ret^0,c
   500                           
   501                           ;MCAL_layer/GPIO/hal_gpio.c: 161:     }
   502   00FE4A  EF39  F07F         	goto	l1327
   503   00FE4E                     l1325:
   504                           
   505                           ;MCAL_layer/GPIO/hal_gpio.c: 163:         *tris_registers[port] = direction ;
   506   00FE4E  5027               	movf	gpio_port_direction_initialize@port^0,w,c
   507   00FE50  0D02               	mullw	2
   508   00FE52  0E15               	movlw	low _tris_registers
   509   00FE54  24F3               	addwf	243,w,c
   510   00FE56  6ED9               	movwf	fsr2l,c
   511   00FE58  0E00               	movlw	high _tris_registers
   512   00FE5A  20F4               	addwfc	prodh,w,c
   513   00FE5C  6EDA               	movwf	fsr2h,c
   514   00FE5E  CFDE F024          	movff	postinc2,??_gpio_port_direction_initialize
   515   00FE62  CFDD F025          	movff	postdec2,??_gpio_port_direction_initialize+1
   516   00FE66  C024  FFD9         	movff	??_gpio_port_direction_initialize,fsr2l
   517   00FE6A  C025  FFDA         	movff	??_gpio_port_direction_initialize+1,fsr2h
   518   00FE6E  C023  FFDF         	movff	gpio_port_direction_initialize@direction,indf2
   519   00FE72                     l1327:
   520                           
   521                           ;MCAL_layer/GPIO/hal_gpio.c: 165:  return ret ;
   522   00FE72  5026               	movf	gpio_port_direction_initialize@ret^0,w,c
   523   00FE74  0012               	return		;funcret
   524   00FE76                     __end_of_gpio_port_direction_initialize:
   525                           	callstack 0
   526                           
   527 ;; *************** function _dc_motor_initialize *****************
   528 ;; Defined at:
   529 ;;		line 17 in file "ECU_layer/DC_Motor/ecu_dc_motor.c"
   530 ;; Parameters:    Size  Location     Type
   531 ;;  _dc_motor       2    9[COMRAM] PTR const struct .
   532 ;;		 -> dc_motor_1(2), 
   533 ;; Auto vars:     Size  Location     Type
   534 ;;  ret             1   11[COMRAM] unsigned char 
   535 ;; Return value:  Size  Location     Type
   536 ;;                  1    wreg      unsigned char 
   537 ;; Registers used:
   538 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
   539 ;; Tracked objects:
   540 ;;		On entry : 0/0
   541 ;;		On exit  : 0/0
   542 ;;		Unchanged: 0/0
   543 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   544 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   545 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   546 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   547 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   548 ;;Total ram usage:        3 bytes
   549 ;; Hardware stack levels used: 1
   550 ;; Hardware stack levels required when called: 1
   551 ;; This function calls:
   552 ;;		_gpio_pin_direction_initialize
   553 ;; This function is called by:
   554 ;;		_application_intialize
   555 ;; This function uses a non-reentrant model
   556 ;;
   557                           
   558                           	psect	text4
   559   00FDF2                     __ptext4:
   560                           	callstack 0
   561   00FDF2                     _dc_motor_initialize:
   562                           	callstack 28
   563   00FDF2                     
   564                           ;ECU_layer/DC_Motor/ecu_dc_motor.c: 18:     Std_ReturnType ret = (Std_ReturnType)0x01;
   565   00FDF2  0E01               	movlw	1
   566   00FDF4  6E2E               	movwf	dc_motor_initialize@ret^0,c
   567   00FDF6                     
   568                           ;ECU_layer/DC_Motor/ecu_dc_motor.c: 19:     if(((void*)0) == _dc_motor){
   569   00FDF6  502C               	movf	dc_motor_initialize@_dc_motor^0,w,c
   570   00FDF8  102D               	iorwf	(dc_motor_initialize@_dc_motor+1)^0,w,c
   571   00FDFA  A4D8               	btfss	status,2,c
   572   00FDFC  EF02  F07F         	goto	u591
   573   00FE00  EF04  F07F         	goto	u590
   574   00FE04                     u591:
   575   00FE04  EF08  F07F         	goto	l1337
   576   00FE08                     u590:
   577   00FE08                     
   578                           ;ECU_layer/DC_Motor/ecu_dc_motor.c: 20:         ret = (Std_ReturnType)0x00;
   579   00FE08  0E00               	movlw	0
   580   00FE0A  6E2E               	movwf	dc_motor_initialize@ret^0,c
   581                           
   582                           ;ECU_layer/DC_Motor/ecu_dc_motor.c: 21:     }
   583   00FE0C  EF16  F07F         	goto	l1339
   584   00FE10                     l1337:
   585                           
   586                           ;ECU_layer/DC_Motor/ecu_dc_motor.c: 23:         gpio_pin_direction_initialize(&(_dc_moto
      +                          r->dc_motor_pin[0x00U]));
   587   00FE10  C02C  F023         	movff	dc_motor_initialize@_dc_motor,gpio_pin_direction_initialize@_pin_config
   588   00FE14  C02D  F024         	movff	dc_motor_initialize@_dc_motor+1,gpio_pin_direction_initialize@_pin_config+1
   589   00FE18  EC5E  F07F         	call	_gpio_pin_direction_initialize	;wreg free
   590                           
   591                           ;ECU_layer/DC_Motor/ecu_dc_motor.c: 24:         gpio_pin_direction_initialize(&(_dc_moto
      +                          r->dc_motor_pin[0x01U]));
   592   00FE1C  0E01               	movlw	1
   593   00FE1E  242C               	addwf	dc_motor_initialize@_dc_motor^0,w,c
   594   00FE20  6E23               	movwf	gpio_pin_direction_initialize@_pin_config^0,c
   595   00FE22  0E00               	movlw	0
   596   00FE24  202D               	addwfc	(dc_motor_initialize@_dc_motor+1)^0,w,c
   597   00FE26  6E24               	movwf	(gpio_pin_direction_initialize@_pin_config+1)^0,c
   598   00FE28  EC5E  F07F         	call	_gpio_pin_direction_initialize	;wreg free
   599   00FE2C                     l1339:
   600                           
   601                           ;ECU_layer/DC_Motor/ecu_dc_motor.c: 26:     return ret;
   602   00FE2C  502E               	movf	dc_motor_initialize@ret^0,w,c
   603   00FE2E  0012               	return		;funcret
   604   00FE30                     __end_of_dc_motor_initialize:
   605                           	callstack 0
   606                           
   607 ;; *************** function _gpio_pin_direction_initialize *****************
   608 ;; Defined at:
   609 ;;		line 47 in file "MCAL_layer/GPIO/hal_gpio.c"
   610 ;; Parameters:    Size  Location     Type
   611 ;;  _pin_config     2    0[COMRAM] PTR const struct .
   612 ;;		 -> relay_initialize@pin_0bj(1), dc_motor_1.dc_motor_pin(2), dc_motor_1(2), led_initialize@pin_0bj(1), 
   613 ;; Auto vars:     Size  Location     Type
   614 ;;  ret             1    8[COMRAM] unsigned char 
   615 ;; Return value:  Size  Location     Type
   616 ;;                  1    wreg      unsigned char 
   617 ;; Registers used:
   618 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
   619 ;; Tracked objects:
   620 ;;		On entry : 0/0
   621 ;;		On exit  : 0/0
   622 ;;		Unchanged: 0/0
   623 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   624 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   625 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   626 ;;      Temps:          6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   627 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   628 ;;Total ram usage:        9 bytes
   629 ;; Hardware stack levels used: 1
   630 ;; This function calls:
   631 ;;		Nothing
   632 ;; This function is called by:
   633 ;;		_dc_motor_initialize
   634 ;;		_button_initialize
   635 ;;		_gpio_pin_initialize
   636 ;; This function uses a non-reentrant model
   637 ;;
   638                           
   639                           	psect	text5
   640   00FEBC                     __ptext5:
   641                           	callstack 0
   642   00FEBC                     _gpio_pin_direction_initialize:
   643                           	callstack 28
   644   00FEBC                     
   645                           ;MCAL_layer/GPIO/hal_gpio.c: 48:     Std_ReturnType ret= (Std_ReturnType)0x01 ;
   646   00FEBC  0E01               	movlw	1
   647   00FEBE  6E2B               	movwf	gpio_pin_direction_initialize@ret^0,c
   648   00FEC0                     
   649                           ;MCAL_layer/GPIO/hal_gpio.c: 49:     if(((void*)0) ==_pin_config || _pin_config ->pin > 
      +                          (8 -1) ) {
   650   00FEC0  5023               	movf	gpio_pin_direction_initialize@_pin_config^0,w,c
   651   00FEC2  1024               	iorwf	(gpio_pin_direction_initialize@_pin_config+1)^0,w,c
   652   00FEC4  B4D8               	btfsc	status,2,c
   653   00FEC6  EF67  F07F         	goto	u521
   654   00FECA  EF69  F07F         	goto	u520
   655   00FECE                     u521:
   656   00FECE  EF7A  F07F         	goto	l1301
   657   00FED2                     u520:
   658   00FED2  C023  FFD9         	movff	gpio_pin_direction_initialize@_pin_config,fsr2l
   659   00FED6  C024  FFDA         	movff	gpio_pin_direction_initialize@_pin_config+1,fsr2h
   660   00FEDA  30DF               	rrcf	223,w,c
   661   00FEDC  32E8               	rrcf	wreg,f,c
   662   00FEDE  32E8               	rrcf	wreg,f,c
   663   00FEE0  0B07               	andlw	7
   664   00FEE2  6E25               	movwf	??_gpio_pin_direction_initialize^0,c
   665   00FEE4  0E07               	movlw	7
   666   00FEE6  6425               	cpfsgt	??_gpio_pin_direction_initialize^0,c
   667   00FEE8  EF78  F07F         	goto	u531
   668   00FEEC  EF7A  F07F         	goto	u530
   669   00FEF0                     u531:
   670   00FEF0  EFDD  F07F         	goto	l1309
   671   00FEF4                     u530:
   672   00FEF4                     l1301:
   673                           
   674                           ;MCAL_layer/GPIO/hal_gpio.c: 50:         ret= (Std_ReturnType)0x00 ;
   675   00FEF4  0E00               	movlw	0
   676   00FEF6  6E2B               	movwf	gpio_pin_direction_initialize@ret^0,c
   677                           
   678                           ;MCAL_layer/GPIO/hal_gpio.c: 51:     }
   679   00FEF8  EFFE  F07F         	goto	l1311
   680   00FEFC                     l1303:
   681                           
   682                           ;MCAL_layer/GPIO/hal_gpio.c: 55:             ( *tris_registers[_pin_config->port] &= ~((
      +                          uint8)1<<_pin_config->pin) ) ;
   683   00FEFC  C023  FFD9         	movff	gpio_pin_direction_initialize@_pin_config,fsr2l
   684   00FF00  C024  FFDA         	movff	gpio_pin_direction_initialize@_pin_config+1,fsr2h
   685   00FF04  30DF               	rrcf	223,w,c
   686   00FF06  32E8               	rrcf	wreg,f,c
   687   00FF08  32E8               	rrcf	wreg,f,c
   688   00FF0A  0B07               	andlw	7
   689   00FF0C  6E25               	movwf	??_gpio_pin_direction_initialize^0,c
   690   00FF0E  0E01               	movlw	1
   691   00FF10  6E26               	movwf	(??_gpio_pin_direction_initialize+1)^0,c
   692   00FF12  2A25               	incf	??_gpio_pin_direction_initialize^0,f,c
   693   00FF14  EF8E  F07F         	goto	u544
   694   00FF18                     u545:
   695   00FF18  90D8               	bcf	status,0,c
   696   00FF1A  3626               	rlcf	(??_gpio_pin_direction_initialize+1)^0,f,c
   697   00FF1C                     u544:
   698   00FF1C  2E25               	decfsz	??_gpio_pin_direction_initialize^0,f,c
   699   00FF1E  EF8C  F07F         	goto	u545
   700   00FF22  5026               	movf	(??_gpio_pin_direction_initialize+1)^0,w,c
   701   00FF24  0AFF               	xorlw	255
   702   00FF26  6E27               	movwf	(??_gpio_pin_direction_initialize+2)^0,c
   703   00FF28  C023  FFD9         	movff	gpio_pin_direction_initialize@_pin_config,fsr2l
   704   00FF2C  C024  FFDA         	movff	gpio_pin_direction_initialize@_pin_config+1,fsr2h
   705   00FF30  50DF               	movf	223,w,c
   706   00FF32  0B07               	andlw	7
   707   00FF34  6E28               	movwf	(??_gpio_pin_direction_initialize+3)^0,c
   708   00FF36  5028               	movf	(??_gpio_pin_direction_initialize+3)^0,w,c
   709   00FF38  0D02               	mullw	2
   710   00FF3A  0E15               	movlw	low _tris_registers
   711   00FF3C  24F3               	addwf	243,w,c
   712   00FF3E  6ED9               	movwf	fsr2l,c
   713   00FF40  0E00               	movlw	high _tris_registers
   714   00FF42  20F4               	addwfc	prodh,w,c
   715   00FF44  6EDA               	movwf	fsr2h,c
   716   00FF46  CFDE F029          	movff	postinc2,??_gpio_pin_direction_initialize+4
   717   00FF4A  CFDD F02A          	movff	postdec2,??_gpio_pin_direction_initialize+5
   718   00FF4E  C029  FFD9         	movff	??_gpio_pin_direction_initialize+4,fsr2l
   719   00FF52  C02A  FFDA         	movff	??_gpio_pin_direction_initialize+5,fsr2h
   720   00FF56  5027               	movf	(??_gpio_pin_direction_initialize+2)^0,w,c
   721   00FF58  16DF               	andwf	indf2,f,c
   722                           
   723                           ;MCAL_layer/GPIO/hal_gpio.c: 56:             break;
   724   00FF5A  EFFE  F07F         	goto	l1311
   725   00FF5E                     l1305:
   726                           
   727                           ;MCAL_layer/GPIO/hal_gpio.c: 58:             ( *tris_registers[_pin_config->port] |= ((u
      +                          int8)1<<_pin_config->pin) );
   728   00FF5E  C023  FFD9         	movff	gpio_pin_direction_initialize@_pin_config,fsr2l
   729   00FF62  C024  FFDA         	movff	gpio_pin_direction_initialize@_pin_config+1,fsr2h
   730   00FF66  30DF               	rrcf	223,w,c
   731   00FF68  32E8               	rrcf	wreg,f,c
   732   00FF6A  32E8               	rrcf	wreg,f,c
   733   00FF6C  0B07               	andlw	7
   734   00FF6E  6E25               	movwf	??_gpio_pin_direction_initialize^0,c
   735   00FF70  0E01               	movlw	1
   736   00FF72  6E26               	movwf	(??_gpio_pin_direction_initialize+1)^0,c
   737   00FF74  2A25               	incf	??_gpio_pin_direction_initialize^0,f,c
   738   00FF76  EFBF  F07F         	goto	u554
   739   00FF7A                     u555:
   740   00FF7A  90D8               	bcf	status,0,c
   741   00FF7C  3626               	rlcf	(??_gpio_pin_direction_initialize+1)^0,f,c
   742   00FF7E                     u554:
   743   00FF7E  2E25               	decfsz	??_gpio_pin_direction_initialize^0,f,c
   744   00FF80  EFBD  F07F         	goto	u555
   745   00FF84  C023  FFD9         	movff	gpio_pin_direction_initialize@_pin_config,fsr2l
   746   00FF88  C024  FFDA         	movff	gpio_pin_direction_initialize@_pin_config+1,fsr2h
   747   00FF8C  50DF               	movf	223,w,c
   748   00FF8E  0B07               	andlw	7
   749   00FF90  6E27               	movwf	(??_gpio_pin_direction_initialize+2)^0,c
   750   00FF92  5027               	movf	(??_gpio_pin_direction_initialize+2)^0,w,c
   751   00FF94  0D02               	mullw	2
   752   00FF96  0E15               	movlw	low _tris_registers
   753   00FF98  24F3               	addwf	243,w,c
   754   00FF9A  6ED9               	movwf	fsr2l,c
   755   00FF9C  0E00               	movlw	high _tris_registers
   756   00FF9E  20F4               	addwfc	prodh,w,c
   757   00FFA0  6EDA               	movwf	fsr2h,c
   758   00FFA2  CFDE F028          	movff	postinc2,??_gpio_pin_direction_initialize+3
   759   00FFA6  CFDD F029          	movff	postdec2,??_gpio_pin_direction_initialize+4
   760   00FFAA  C028  FFD9         	movff	??_gpio_pin_direction_initialize+3,fsr2l
   761   00FFAE  C029  FFDA         	movff	??_gpio_pin_direction_initialize+4,fsr2h
   762   00FFB2  5026               	movf	(??_gpio_pin_direction_initialize+1)^0,w,c
   763   00FFB4  12DF               	iorwf	indf2,f,c
   764                           
   765                           ;MCAL_layer/GPIO/hal_gpio.c: 59:             break;
   766   00FFB6  EFFE  F07F         	goto	l1311
   767   00FFBA                     l1309:
   768   00FFBA  C023  FFD9         	movff	gpio_pin_direction_initialize@_pin_config,fsr2l
   769   00FFBE  C024  FFDA         	movff	gpio_pin_direction_initialize@_pin_config+1,fsr2h
   770   00FFC2  BCDF               	btfsc	indf2,6,c
   771   00FFC4  EFE6  F07F         	goto	u561
   772   00FFC8  EFE9  F07F         	goto	u560
   773   00FFCC                     u561:
   774   00FFCC  0E01               	movlw	1
   775   00FFCE  EFEA  F07F         	goto	u570
   776   00FFD2                     u560:
   777   00FFD2  0E00               	movlw	0
   778   00FFD4                     u570:
   779   00FFD4  6E25               	movwf	??_gpio_pin_direction_initialize^0,c
   780   00FFD6  6A26               	clrf	(??_gpio_pin_direction_initialize+1)^0,c
   781                           
   782                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
   783                           ; Switch size 1, requested type "simple"
   784                           ; Number of cases is 1, Range of values is 0 to 0
   785                           ; switch strategies available:
   786                           ; Name         Instructions Cycles
   787                           ; simple_byte            4     3 (average)
   788                           ;	Chosen strategy is simple_byte
   789   00FFD8  5026               	movf	(??_gpio_pin_direction_initialize+1)^0,w,c
   790   00FFDA  0A00               	xorlw	0	; case 0
   791   00FFDC  B4D8               	btfsc	status,2,c
   792   00FFDE  EFF3  F07F         	goto	l1431
   793   00FFE2  EF7A  F07F         	goto	l1301
   794   00FFE6                     l1431:
   795                           
   796                           ; Switch size 1, requested type "simple"
   797                           ; Number of cases is 2, Range of values is 0 to 1
   798                           ; switch strategies available:
   799                           ; Name         Instructions Cycles
   800                           ; simple_byte            7     4 (average)
   801                           ;	Chosen strategy is simple_byte
   802   00FFE6  5025               	movf	??_gpio_pin_direction_initialize^0,w,c
   803   00FFE8  0A00               	xorlw	0	; case 0
   804   00FFEA  B4D8               	btfsc	status,2,c
   805   00FFEC  EF7E  F07F         	goto	l1303
   806   00FFF0  0A01               	xorlw	1	; case 1
   807   00FFF2  B4D8               	btfsc	status,2,c
   808   00FFF4  EFAF  F07F         	goto	l1305
   809   00FFF8  EF7A  F07F         	goto	l1301
   810   00FFFC                     l1311:
   811                           
   812                           ;MCAL_layer/GPIO/hal_gpio.c: 63:    return ret ;
   813   00FFFC  502B               	movf	gpio_pin_direction_initialize@ret^0,w,c
   814   00FFFE  0012               	return		;funcret
   815   010000                     __end_of_gpio_pin_direction_initialize:
   816                           	callstack 0
   817   000000                     
   818                           	psect	rparam
   819   000000                     
   820                           	psect	idloc
   821                           
   822                           ;Config register IDLOC0 @ 0x200000
   823                           ;	unspecified, using default values
   824   200000                     	org	2097152
   825   200000  FF                 	db	255
   826                           
   827                           ;Config register IDLOC1 @ 0x200001
   828                           ;	unspecified, using default values
   829   200001                     	org	2097153
   830   200001  FF                 	db	255
   831                           
   832                           ;Config register IDLOC2 @ 0x200002
   833                           ;	unspecified, using default values
   834   200002                     	org	2097154
   835   200002  FF                 	db	255
   836                           
   837                           ;Config register IDLOC3 @ 0x200003
   838                           ;	unspecified, using default values
   839   200003                     	org	2097155
   840   200003  FF                 	db	255
   841                           
   842                           ;Config register IDLOC4 @ 0x200004
   843                           ;	unspecified, using default values
   844   200004                     	org	2097156
   845   200004  FF                 	db	255
   846                           
   847                           ;Config register IDLOC5 @ 0x200005
   848                           ;	unspecified, using default values
   849   200005                     	org	2097157
   850   200005  FF                 	db	255
   851                           
   852                           ;Config register IDLOC6 @ 0x200006
   853                           ;	unspecified, using default values
   854   200006                     	org	2097158
   855   200006  FF                 	db	255
   856                           
   857                           ;Config register IDLOC7 @ 0x200007
   858                           ;	unspecified, using default values
   859   200007                     	org	2097159
   860   200007  FF                 	db	255
   861                           
   862                           	psect	config
   863                           
   864                           ; Padding undefined space
   865   300000                     	org	3145728
   866   300000  FF                 	db	255
   867                           
   868                           ;Config register CONFIG1H @ 0x300001
   869                           ;	Oscillator Selection bits
   870                           ;	OSC = HS, HS oscillator
   871                           ;	Fail-Safe Clock Monitor Enable bit
   872                           ;	FCMEN = OFF, Fail-Safe Clock Monitor disabled
   873                           ;	Internal/External Oscillator Switchover bit
   874                           ;	IESO = OFF, Oscillator Switchover mode disabled
   875   300001                     	org	3145729
   876   300001  02                 	db	2
   877                           
   878                           ;Config register CONFIG2L @ 0x300002
   879                           ;	Power-up Timer Enable bit
   880                           ;	PWRT = OFF, PWRT disabled
   881                           ;	Brown-out Reset Enable bits
   882                           ;	BOREN = SBORDIS, Brown-out Reset enabled in hardware only (SBOREN is disabled)
   883                           ;	Brown Out Reset Voltage bits
   884                           ;	BORV = 1, 
   885   300002                     	org	3145730
   886   300002  0F                 	db	15
   887                           
   888                           ;Config register CONFIG2H @ 0x300003
   889                           ;	Watchdog Timer Enable bit
   890                           ;	WDT = OFF, WDT disabled (control is placed on the SWDTEN bit)
   891                           ;	Watchdog Timer Postscale Select bits
   892                           ;	WDTPS = 32768, 1:32768
   893   300003                     	org	3145731
   894   300003  1E                 	db	30
   895                           
   896                           ; Padding undefined space
   897   300004                     	org	3145732
   898   300004  FF                 	db	255
   899                           
   900                           ;Config register CONFIG3H @ 0x300005
   901                           ;	CCP2 MUX bit
   902                           ;	CCP2MX = PORTC, CCP2 input/output is multiplexed with RC1
   903                           ;	PORTB A/D Enable bit
   904                           ;	PBADEN = OFF, PORTB<4:0> pins are configured as digital I/O on Reset
   905                           ;	Low-Power Timer1 Oscillator Enable bit
   906                           ;	LPT1OSC = OFF, Timer1 configured for higher power operation
   907                           ;	MCLR Pin Enable bit
   908                           ;	MCLRE = ON, MCLR pin enabled; RE3 input pin disabled
   909   300005                     	org	3145733
   910   300005  81                 	db	129
   911                           
   912                           ;Config register CONFIG4L @ 0x300006
   913                           ;	Stack Full/Underflow Reset Enable bit
   914                           ;	STVREN = ON, Stack full/underflow will cause Reset
   915                           ;	Single-Supply ICSP Enable bit
   916                           ;	LVP = OFF, Single-Supply ICSP disabled
   917                           ;	Extended Instruction Set Enable bit
   918                           ;	XINST = OFF, Instruction set extension and Indexed Addressing mode disabled (Legacy mo
      +                          de)
   919                           ;	Background Debugger Enable bit
   920                           ;	DEBUG = 0x1, unprogrammed default
   921   300006                     	org	3145734
   922   300006  81                 	db	129
   923                           
   924                           ; Padding undefined space
   925   300007                     	org	3145735
   926   300007  FF                 	db	255
   927                           
   928                           ;Config register CONFIG5L @ 0x300008
   929                           ;	Code Protection bit
   930                           ;	CP0 = OFF, Block 0 (000800-003FFFh) not code-protected
   931                           ;	Code Protection bit
   932                           ;	CP1 = OFF, Block 1 (004000-007FFFh) not code-protected
   933                           ;	Code Protection bit
   934                           ;	CP2 = OFF, Block 2 (008000-00BFFFh) not code-protected
   935                           ;	Code Protection bit
   936                           ;	CP3 = OFF, Block 3 (00C000-00FFFFh) not code-protected
   937   300008                     	org	3145736
   938   300008  0F                 	db	15
   939                           
   940                           ;Config register CONFIG5H @ 0x300009
   941                           ;	Boot Block Code Protection bit
   942                           ;	CPB = OFF, Boot block (000000-0007FFh) not code-protected
   943                           ;	Data EEPROM Code Protection bit
   944                           ;	CPD = OFF, Data EEPROM not code-protected
   945   300009                     	org	3145737
   946   300009  C0                 	db	192
   947                           
   948                           ;Config register CONFIG6L @ 0x30000A
   949                           ;	Write Protection bit
   950                           ;	WRT0 = OFF, Block 0 (000800-003FFFh) not write-protected
   951                           ;	Write Protection bit
   952                           ;	WRT1 = OFF, Block 1 (004000-007FFFh) not write-protected
   953                           ;	Write Protection bit
   954                           ;	WRT2 = OFF, Block 2 (008000-00BFFFh) not write-protected
   955                           ;	Write Protection bit
   956                           ;	WRT3 = OFF, Block 3 (00C000-00FFFFh) not write-protected
   957   30000A                     	org	3145738
   958   30000A  0F                 	db	15
   959                           
   960                           ;Config register CONFIG6H @ 0x30000B
   961                           ;	Configuration Register Write Protection bit
   962                           ;	WRTC = OFF, Configuration registers (300000-3000FFh) not write-protected
   963                           ;	Boot Block Write Protection bit
   964                           ;	WRTB = OFF, Boot Block (000000-0007FFh) not write-protected
   965                           ;	Data EEPROM Write Protection bit
   966                           ;	WRTD = OFF, Data EEPROM not write-protected
   967   30000B                     	org	3145739
   968   30000B  E0                 	db	224
   969                           
   970                           ;Config register CONFIG7L @ 0x30000C
   971                           ;	Table Read Protection bit
   972                           ;	EBTR0 = OFF, Block 0 (000800-003FFFh) not protected from table reads executed in other
      +                           blocks
   973                           ;	Table Read Protection bit
   974                           ;	EBTR1 = OFF, Block 1 (004000-007FFFh) not protected from table reads executed in other
      +                           blocks
   975                           ;	Table Read Protection bit
   976                           ;	EBTR2 = OFF, Block 2 (008000-00BFFFh) not protected from table reads executed in other
      +                           blocks
   977                           ;	Table Read Protection bit
   978                           ;	EBTR3 = OFF, Block 3 (00C000-00FFFFh) not protected from table reads executed in other
      +                           blocks
   979   30000C                     	org	3145740
   980   30000C  0F                 	db	15
   981                           
   982                           ;Config register CONFIG7H @ 0x30000D
   983                           ;	Boot Block Table Read Protection bit
   984                           ;	EBTRB = OFF, Boot Block (000000-0007FFh) not protected from table reads executed in ot
      +                          her blocks
   985   30000D                     	org	3145741
   986   30000D  40                 	db	64
   987                           tosu	equ	0xFFF
   988                           tosh	equ	0xFFE
   989                           tosl	equ	0xFFD
   990                           stkptr	equ	0xFFC
   991                           pclatu	equ	0xFFB
   992                           pclath	equ	0xFFA
   993                           pcl	equ	0xFF9
   994                           tblptru	equ	0xFF8
   995                           tblptrh	equ	0xFF7
   996                           tblptrl	equ	0xFF6
   997                           tablat	equ	0xFF5
   998                           prodh	equ	0xFF4
   999                           prodl	equ	0xFF3
  1000                           indf0	equ	0xFEF
  1001                           postinc0	equ	0xFEE
  1002                           postdec0	equ	0xFED
  1003                           preinc0	equ	0xFEC
  1004                           plusw0	equ	0xFEB
  1005                           fsr0h	equ	0xFEA
  1006                           fsr0l	equ	0xFE9
  1007                           wreg	equ	0xFE8
  1008                           indf1	equ	0xFE7
  1009                           postinc1	equ	0xFE6
  1010                           postdec1	equ	0xFE5
  1011                           preinc1	equ	0xFE4
  1012                           plusw1	equ	0xFE3
  1013                           fsr1h	equ	0xFE2
  1014                           fsr1l	equ	0xFE1
  1015                           bsr	equ	0xFE0
  1016                           indf2	equ	0xFDF
  1017                           postinc2	equ	0xFDE
  1018                           postdec2	equ	0xFDD
  1019                           preinc2	equ	0xFDC
  1020                           plusw2	equ	0xFDB
  1021                           fsr2h	equ	0xFDA
  1022                           fsr2l	equ	0xFD9
  1023                           status	equ	0xFD8

Data Sizes:
    Strings     0
    Constant    0
    Data        34
    BSS         7
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM          127     12      53
    BANK0           128      0       0
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14          256      0       0
    BANK15          128      0       0

Pointer List with Targets:

    dc_motor_initialize@_dc_motor	PTR const struct . size(2) Largest target is 2
		 -> dc_motor_1(COMRAM[2]), 

    gpio_pin_direction_initialize@_pin_config	PTR const struct . size(2) Largest target is 2
		 -> relay_initialize@pin_0bj(COMRAM[1]), dc_motor_1.dc_motor_pin(COMRAM[2]), dc_motor_1(COMRAM[2]), led_initialize@pin_0bj(COMRAM[1]), 

    port_registers	PTR volatile unsigned char [5] size(2) Largest target is 1
		 -> PORTE(BITBIGSFRll[1]), PORTD(BITBIGSFRll[1]), PORTC(BITBIGSFRll[1]), PORTB(BITBIGSFRll[1]), 
		 -> PORTA(BITBIGSFRll[1]), 

    lat_registers	PTR volatile unsigned char [5] size(2) Largest target is 1
		 -> LATE(BITBIGSFRlh[1]), LATD(BITBIGSFRlh[1]), LATC(BITBIGSFRlh[1]), LATB(BITBIGSFRlh[1]), 
		 -> LATA(BITBIGSFRll[1]), 

    tris_registers	PTR volatile unsigned char [5] size(2) Largest target is 1
		 -> TRISE(BITBIGSFRh[1]), TRISD(BITBIGSFRh[1]), TRISC(BITBIGSFRh[1]), TRISB(BITBIGSFRh[1]), 
		 -> TRISA(BITBIGSFRll[1]), 


Critical Paths under _main in COMRAM

    _application_intialize->_dc_motor_initialize
    _dc_motor_initialize->_gpio_pin_direction_initialize

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _main in BANK15

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 1     1      0     986
              _application_intialize
              _gpio_port_write_logic
 ---------------------------------------------------------------------------------
 (1) _gpio_port_write_logic                                5     4      1     166
                                              0 COMRAM     5     4      1
 ---------------------------------------------------------------------------------
 (1) _application_intialize                                1     1      0     818
                _dc_motor_initialize
     _gpio_port_direction_initialize
 ---------------------------------------------------------------------------------
 (2) _gpio_port_direction_initialize                       5     4      1     166
                                              0 COMRAM     5     4      1
 ---------------------------------------------------------------------------------
 (2) _dc_motor_initialize                                  3     1      2     649
                                              9 COMRAM     3     1      2
      _gpio_pin_direction_initialize
 ---------------------------------------------------------------------------------
 (3) _gpio_pin_direction_initialize                        9     7      2     483
                                              0 COMRAM     9     7      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _application_intialize
     _dc_motor_initialize
       _gpio_pin_direction_initialize
     _gpio_port_direction_initialize
   _gpio_port_write_logic

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             F7F      0       0      40        0.0%
EEDATA             400      0       0       0        0.0%
BITBANK14          100      0       0      32        0.0%
BANK14             100      0       0      33        0.0%
BITBANK13          100      0       0      30        0.0%
BANK13             100      0       0      31        0.0%
BITBANK12          100      0       0      28        0.0%
BANK12             100      0       0      29        0.0%
BITBANK11          100      0       0      26        0.0%
BANK11             100      0       0      27        0.0%
BITBANK10          100      0       0      24        0.0%
BANK10             100      0       0      25        0.0%
BITBANK9           100      0       0      22        0.0%
BANK9              100      0       0      23        0.0%
BITBANK8           100      0       0      20        0.0%
BANK8              100      0       0      21        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK15           80      0       0      34        0.0%
BANK15              80      0       0      35        0.0%
BITBANK0            80      0       0       4        0.0%
BANK0               80      0       0       5        0.0%
BITCOMRAM           7F      0       0       0        0.0%
COMRAM              7F      C      35       1       41.7%
BITBIGSFRh          69      0       0      36        0.0%
BITBIGSFRlh          4      0       0      37        0.0%
BITBIGSFRll          4      0       0      38        0.0%
BIGSFR               0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      35      39        0.0%
DATA                 0      0      35       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.40 build 20220703182018 
Symbol Table                                                                                   Tue Mar 12 16:26:40 2024

                                     l117 FFFE                                       l234 FE2E  
                                     l155 FE74                                       l167 FEBA  
                                     l192 FD98                                       u520 FED2  
                                     u521 FECE                                       u530 FEF4  
                                     u531 FEF0                                       u620 FE8C  
                                     u621 FE88                                       u560 FFD2  
                                     u544 FF1C                                       u561 FFCC  
                                     u545 FF18                                       u570 FFD4  
                                     u554 FF7E                                       u555 FF7A  
                                     u580 FE46                                       u581 FE42  
                                     u590 FE08                                       u591 FE04  
                                     prod 000FF3                       led_initialize@F2878 0035  
                                     wreg 000FE8                     relay_initialize@F2872 0031  
                                    l1301 FEF4                                      l1303 FEFC  
                                    l1311 FFFC                                      l1305 FF5E  
                                    l1321 FE36                                      l1331 FDF2  
                                    l1323 FE46                                      l1309 FFBA  
                                    l1333 FDF6                                      l1325 FE4E  
                                    l1405 FD6C                                      l1431 FFE6  
                                    l1335 FE08                                      l1327 FE72  
                                    l1319 FE32                                      l1407 FD6C  
                                    l1337 FE10                                      l1361 FE94  
                                    l1409 FD70                                      l1339 FE2C  
                                    l1371 FD8E                                      l1363 FEB8  
                                    l1355 FE78                                      l1357 FE7C  
                                    l1295 FEBC                                      l1367 FD82  
                                    l1359 FE8C                                      l1297 FEC0  
                                    l1369 FD82                                      l1299 FED2  
                                    _LATA 000F89                                      _LATB 000F8A  
                                    _LATC 000F8B                                      _LATD 000F8C  
                                    _LATE 000F8D                   ??_application_intialize 002F  
                                    _main FD6C                                      fsr2h 000FDA  
                                    indf2 000FDF                                      fsr1l 000FE1  
                                    fsr2l 000FD9                                      prodl 000FF3  
                                    start 0000                              ___param_bank 000000  
                   _gpio_port_write_logic FE76                    dc_motor_initialize@ret 002E  
                                   ?_main 0023                                     _PORTA 000F80  
                                   _PORTB 000F81                                     _PORTC 000F82  
                                   _PORTD 000F83                                     _PORTE 000F84  
                                   _TRISA 000F92                                     _TRISB 000F93  
                                   _TRISC 000F94                                     _TRISD 000F95  
                                   _TRISE 000F96                                     tablat 000FF5  
                                   status 000FD8            ?_gpio_pin_direction_initialize 0023  
                         __initialization FDBC                              __end_of_main FD82  
                           _lat_registers 000B               __end_of_dc_motor_initialize FE30  
                                  ??_main 002F                             __activetblptr 000002  
                        led_turn_on@F2883 0034                 gpio_port_write_logic@port 0027  
  __end_of_gpio_port_direction_initialize FE76            _gpio_port_direction_initialize FE30  
                  ?_gpio_port_write_logic 0023                                    clear_0 FDE2  
                                  isa$std 000001                              __pdataCOMRAM 0001  
                                  tblptrh 000FF7                                    tblptrl 000FF6  
                                  tblptru 000FF8                                __accesstop 0080  
                 __end_of__initialization FDE8                             ___rparam_used 000001  
                          __pcstackCOMRAM 0023  gpio_pin_direction_initialize@_pin_config 0023  
                gpio_port_write_logic@ret 0026                                _dc_motor_1 0021  
                              _dc_motor_2 001F             __end_of_application_intialize FD9A  
                       led_turn_off@F2888 0033                      led_turn_toggle@F2893 0032  
                          _tris_registers 0015                                   __Hparam 0000  
                                 __Lparam 0000                                   __pcinit FDBC  
                                 __ramtop 1000                                   __ptext0 FD6C  
                                 __ptext1 FE76                                   __ptext2 FD82  
                                 __ptext3 FE30                                   __ptext4 FDF2  
                                 __ptext5 FEBC                             relay_on@F2877 0030  
         ??_gpio_pin_direction_initialize 0025                      end_of_initialization FDE8  
       gpio_port_direction_initialize@ret 0026                             __Lmediumconst 0000  
                 ??_gpio_port_write_logic 0024                                   postdec1 000FE5  
                                 postdec2 000FDD                                   postinc0 000FEE  
                                 postinc2 000FDE   gpio_port_direction_initialize@direction 0023  
                           __pidataCOMRAM FD9A                       start_initialization FDBC  
   __end_of_gpio_pin_direction_initialize 0000             _gpio_pin_direction_initialize FEBC  
                             __pbssCOMRAM 002F                     _application_intialize FD82  
           __end_of_gpio_port_write_logic FEBC                       _dc_motor_initialize FDF2  
            dc_motor_initialize@_dc_motor 002C          gpio_pin_direction_initialize@ret 002B  
                    ?_dc_motor_initialize 002C                                 copy_data0 FDD0  
                  ?_application_intialize 0023                                  __Hrparam 0000  
                                __Lrparam 0000                     ??_dc_motor_initialize 002E  
                          relay_off@F2882 002F                                  isa$xinst 000000  
        ??_gpio_port_direction_initialize 0024           ?_gpio_port_direction_initialize 0023  
      gpio_port_direction_initialize@port 0027                            _port_registers 0001  
              gpio_port_write_logic@logic 0023  
