

Microchip MPLAB XC8 Assembler V2.40 build 20220703182018 
                                                                                               Tue Mar 12 19:15:23 2024

Microchip MPLAB XC8 C Compiler v2.40 (Free license) build 20220703182018 Og1 
     1                           	processor	18F4620
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1,noexec
     6                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     7                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     8                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     9                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    10                           	psect	text0,global,reloc=2,class=CODE,delta=1
    11                           	psect	text1,global,reloc=2,class=CODE,delta=1
    12                           	psect	text2,global,reloc=2,class=CODE,delta=1
    13                           	psect	text3,global,reloc=2,class=CODE,delta=1
    14                           	psect	text4,global,reloc=2,class=CODE,delta=1
    15                           	psect	text5,global,reloc=2,class=CODE,delta=1
    16                           	psect	text6,global,reloc=2,class=CODE,delta=1
    17                           	psect	text7,global,reloc=2,class=CODE,delta=1
    18                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    19                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    20                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=1,noexec
    21                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    22   000000                     
    23                           ; Version 2.40
    24                           ; Generated 17/11/2021 GMT
    25                           ; 
    26                           ; Copyright Â© 2021, Microchip Technology Inc. and its subsidiaries ("Microchip")
    27                           ; All rights reserved.
    28                           ; 
    29                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    30                           ; 
    31                           ; Redistribution and use in source and binary forms, with or without modification, are
    32                           ; permitted provided that the following conditions are met:
    33                           ; 
    34                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    35                           ;        conditions and the following disclaimer.
    36                           ; 
    37                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    38                           ;        of conditions and the following disclaimer in the documentation and/or other
    39                           ;        materials provided with the distribution. Publication is not required when
    40                           ;        this file is used in an embedded application.
    41                           ; 
    42                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    43                           ;        software without specific prior written permission.
    44                           ; 
    45                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    46                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    47                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    48                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    49                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    50                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    51                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    52                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    53                           ; 
    54                           ; 
    55                           ; Code-generator required, PIC18F4620 Definitions
    56                           ; 
    57                           ; SFR Addresses
    58   000000                     
    59                           	psect	idataCOMRAM
    60   00FAD6                     __pidataCOMRAM:
    61                           	callstack 0
    62                           
    63                           ;initializer for _port_registers
    64   00FAD6  80                 	db	128
    65   00FAD7  0F                 	db	15
    66   00FAD8  81                 	db	129
    67   00FAD9  0F                 	db	15
    68   00FADA  82                 	db	130
    69   00FADB  0F                 	db	15
    70   00FADC  83                 	db	131
    71   00FADD  0F                 	db	15
    72   00FADE  84                 	db	132
    73   00FADF  0F                 	db	15
    74                           
    75                           ;initializer for _lat_registers
    76   00FAE0  89                 	db	137
    77   00FAE1  0F                 	db	15
    78   00FAE2  8A                 	db	138
    79   00FAE3  0F                 	db	15
    80   00FAE4  8B                 	db	139
    81   00FAE5  0F                 	db	15
    82   00FAE6  8C                 	db	140
    83   00FAE7  0F                 	db	15
    84   00FAE8  8D                 	db	141
    85   00FAE9  0F                 	db	15
    86                           
    87                           ;initializer for _tris_registers
    88   00FAEA  92                 	db	146
    89   00FAEB  0F                 	db	15
    90   00FAEC  93                 	db	147
    91   00FAED  0F                 	db	15
    92   00FAEE  94                 	db	148
    93   00FAEF  0F                 	db	15
    94   00FAF0  95                 	db	149
    95   00FAF1  0F                 	db	15
    96   00FAF2  96                 	db	150
    97   00FAF3  0F                 	db	15
    98                           
    99                           ;initializer for _dc_motor_2
   100   00FAF4  12                 	db	18
   101   00FAF5  1A                 	db	26
   102                           
   103                           ;initializer for _number
   104   00FAF6  2D                 	db	45
   105                           
   106                           ;initializer for _seg1
   107   00FAF7  02                 	db	2
   108   00FAF8  0A                 	db	10
   109   00FAF9  12                 	db	18
   110   00FAFA  1A                 	db	26
   111   00FAFB  00                 	db	0
   112                           
   113                           ;initializer for _dc_motor_1
   114   00FAFC  02                 	db	2
   115   00FAFD  0A                 	db	10
   116                           
   117                           ;initializer for _seg_2_enable
   118   00FAFE  0B                 	db	11
   119                           
   120                           ;initializer for _seg_1_enable
   121   00FAFF  03                 	db	3
   122   000000                     _PORTE	set	3972
   123   000000                     _PORTD	set	3971
   124   000000                     _PORTC	set	3970
   125   000000                     _PORTB	set	3969
   126   000000                     _PORTA	set	3968
   127   000000                     _LATA	set	3977
   128   000000                     _TRISA	set	3986
   129   000000                     _TRISE	set	3990
   130   000000                     _TRISD	set	3989
   131   000000                     _TRISC	set	3988
   132   000000                     _TRISB	set	3987
   133   000000                     _LATE	set	3981
   134   000000                     _LATD	set	3980
   135   000000                     _LATC	set	3979
   136   000000                     _LATB	set	3978
   137                           
   138                           ; #config settings
   139                           
   140                           	psect	cinit
   141   00FB32                     __pcinit:
   142                           	callstack 0
   143   00FB32                     start_initialization:
   144                           	callstack 0
   145   00FB32                     __initialization:
   146                           	callstack 0
   147                           
   148                           ; Initialize objects allocated to COMRAM (42 bytes)
   149                           ; load TBLPTR registers with __pidataCOMRAM
   150   00FB32  0ED6               	movlw	low __pidataCOMRAM
   151   00FB34  6EF6               	movwf	tblptrl,c
   152   00FB36  0EFA               	movlw	high __pidataCOMRAM
   153   00FB38  6EF7               	movwf	tblptrh,c
   154   00FB3A  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
   155   00FB3C  6EF8               	movwf	tblptru,c
   156   00FB3E  EE00  F001         	lfsr	0,__pdataCOMRAM
   157   00FB42  EE10 F02A          	lfsr	1,42
   158   00FB46                     copy_data0:
   159   00FB46  0009               	tblrd		*+
   160   00FB48  CFF5 FFEE          	movff	tablat,postinc0
   161   00FB4C  50E5               	movf	postdec1,w,c
   162   00FB4E  50E1               	movf	fsr1l,w,c
   163   00FB50  E1FA               	bnz	copy_data0
   164                           
   165                           ; Clear objects allocated to COMRAM (7 bytes)
   166   00FB52  EE00  F03D         	lfsr	0,__pbssCOMRAM
   167   00FB56  0E07               	movlw	7
   168   00FB58                     clear_0:
   169   00FB58  6AEE               	clrf	postinc0,c
   170   00FB5A  06E8               	decf	wreg,f,c
   171   00FB5C  E1FD               	bnz	clear_0
   172   00FB5E                     end_of_initialization:
   173                           	callstack 0
   174   00FB5E                     __end_of__initialization:
   175                           	callstack 0
   176   00FB5E  0E00               	movlw	low (__Lmediumconst shr (0+16))
   177   00FB60  6EF8               	movwf	tblptru,c
   178   00FB62  0100               	movlb	0
   179   00FB64  EF3A  F07E         	goto	_main	;jump to C main() function
   180                           
   181                           	psect	bssCOMRAM
   182   00003D                     __pbssCOMRAM:
   183                           	callstack 0
   184   00003D                     relay_off@F2882:
   185                           	callstack 0
   186   00003D                     	ds	1
   187   00003E                     relay_on@F2877:
   188                           	callstack 0
   189   00003E                     	ds	1
   190   00003F                     relay_initialize@F2872:
   191                           	callstack 0
   192   00003F                     	ds	1
   193   000040                     led_turn_toggle@F2893:
   194                           	callstack 0
   195   000040                     	ds	1
   196   000041                     led_turn_off@F2888:
   197                           	callstack 0
   198   000041                     	ds	1
   199   000042                     led_turn_on@F2883:
   200                           	callstack 0
   201   000042                     	ds	1
   202   000043                     led_initialize@F2878:
   203                           	callstack 0
   204   000043                     	ds	1
   205                           
   206                           	psect	dataCOMRAM
   207   000001                     __pdataCOMRAM:
   208                           	callstack 0
   209   000001                     _port_registers:
   210                           	callstack 0
   211   000001                     	ds	10
   212   00000B                     _lat_registers:
   213                           	callstack 0
   214   00000B                     	ds	10
   215   000015                     _tris_registers:
   216                           	callstack 0
   217   000015                     	ds	10
   218   00001F                     _dc_motor_2:
   219                           	callstack 0
   220   00001F                     	ds	2
   221   000021                     _number:
   222                           	callstack 0
   223   000021                     	ds	1
   224   000022                     _seg1:
   225                           	callstack 0
   226   000022                     	ds	5
   227   000027                     _dc_motor_1:
   228                           	callstack 0
   229   000027                     	ds	2
   230   000029                     _seg_2_enable:
   231                           	callstack 0
   232   000029                     	ds	1
   233   00002A                     _seg_1_enable:
   234                           	callstack 0
   235   00002A                     	ds	1
   236                           
   237                           	psect	cstackCOMRAM
   238   00002B                     __pcstackCOMRAM:
   239                           	callstack 0
   240   00002B                     gpio_pin_direction_initialize@_pin_config:
   241                           	callstack 0
   242   00002B                     gpio_pin_write_logic@_pin_config:
   243                           	callstack 0
   244                           
   245                           ; 2 bytes @ 0x0
   246   00002B                     	ds	2
   247   00002D                     ??_gpio_pin_direction_initialize:
   248   00002D                     gpio_pin_write_logic@logic:
   249                           	callstack 0
   250                           
   251                           ; 1 bytes @ 0x2
   252   00002D                     	ds	1
   253   00002E                     ??_gpio_pin_write_logic:
   254                           
   255                           ; 1 bytes @ 0x3
   256   00002E                     	ds	5
   257   000033                     gpio_pin_direction_initialize@ret:
   258                           	callstack 0
   259                           
   260                           ; 1 bytes @ 0x8
   261   000033                     	ds	1
   262   000034                     gpio_pin_write_logic@ret:
   263                           	callstack 0
   264   000034                     dc_motor_initialize@_dc_motor:
   265                           	callstack 0
   266                           
   267                           ; 2 bytes @ 0x9
   268   000034                     	ds	1
   269   000035                     gpio_pin_initialize@_pin_config:
   270                           	callstack 0
   271   000035                     seven_segment_write_number@seg:
   272                           	callstack 0
   273                           
   274                           ; 2 bytes @ 0xA
   275   000035                     	ds	1
   276   000036                     dc_motor_initialize@ret:
   277                           	callstack 0
   278                           
   279                           ; 1 bytes @ 0xB
   280   000036                     	ds	1
   281   000037                     ??_gpio_pin_initialize:
   282   000037                     seven_segment_write_number@number:
   283                           	callstack 0
   284                           
   285                           ; 1 bytes @ 0xC
   286   000037                     	ds	1
   287   000038                     gpio_pin_initialize@ret:
   288                           	callstack 0
   289   000038                     seven_segment_write_number@ret:
   290                           	callstack 0
   291                           
   292                           ; 1 bytes @ 0xD
   293   000038                     	ds	1
   294   000039                     seven_segment_initialize@seg:
   295                           	callstack 0
   296                           
   297                           ; 2 bytes @ 0xE
   298   000039                     	ds	2
   299   00003B                     seven_segment_initialize@ret:
   300                           	callstack 0
   301                           
   302                           ; 1 bytes @ 0x10
   303   00003B                     	ds	1
   304   00003C                     ??_main:
   305                           
   306                           ; 1 bytes @ 0x11
   307   00003C                     	ds	1
   308                           
   309 ;;
   310 ;;Main: autosize = 0, tempsize = 1, incstack = 0, save=0
   311 ;;
   312 ;; *************** function _main *****************
   313 ;; Defined at:
   314 ;;		line 79 in file "application.c"
   315 ;; Parameters:    Size  Location     Type
   316 ;;		None
   317 ;; Auto vars:     Size  Location     Type
   318 ;;  ret             1    0        unsigned char 
   319 ;; Return value:  Size  Location     Type
   320 ;;                  2  259[None  ] int 
   321 ;; Registers used:
   322 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
   323 ;; Tracked objects:
   324 ;;		On entry : 0/0
   325 ;;		On exit  : 0/0
   326 ;;		Unchanged: 0/0
   327 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   328 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   329 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   330 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   331 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   332 ;;Total ram usage:        1 bytes
   333 ;; Hardware stack levels required when called: 4
   334 ;; This function calls:
   335 ;;		_application_intialize
   336 ;;		_gpio_pin_write_logic
   337 ;;		_seven_segment_write_number
   338 ;; This function is called by:
   339 ;;		Startup code after reset
   340 ;; This function uses a non-reentrant model
   341 ;;
   342                           
   343                           	psect	text0
   344   00FC74                     __ptext0:
   345                           	callstack 0
   346   00FC74                     _main:
   347                           	callstack 27
   348   00FC74                     
   349                           ;application.c: 81:      application_intialize();
   350   00FC74  EC80  F07D         	call	_application_intialize	;wreg free
   351   00FC78                     l1703:
   352   00FC78  0E22               	movlw	low _seg1
   353   00FC7A  6E35               	movwf	seven_segment_write_number@seg^0,c
   354   00FC7C  0E00               	movlw	high _seg1
   355   00FC7E  6E36               	movwf	(seven_segment_write_number@seg+1)^0,c
   356   00FC80  0E05               	movlw	5
   357   00FC82  6E37               	movwf	seven_segment_write_number@number^0,c
   358   00FC84  EC7E  F07E         	call	_seven_segment_write_number	;wreg free
   359   00FC88  0E29               	movlw	low _seg_2_enable
   360   00FC8A  6E2B               	movwf	gpio_pin_write_logic@_pin_config^0,c
   361   00FC8C  0E00               	movlw	high _seg_2_enable
   362   00FC8E  6E2C               	movwf	(gpio_pin_write_logic@_pin_config+1)^0,c
   363   00FC90  0E01               	movlw	1
   364   00FC92  6E2D               	movwf	gpio_pin_write_logic@logic^0,c
   365   00FC94  ECC8  F07E         	call	_gpio_pin_write_logic	;wreg free
   366   00FC98                     
   367                           ;application.c: 86:         _delay((unsigned long)((5)*(8000000/4000.0)));
   368   00FC98  0E0D               	movlw	13
   369   00FC9A  6E3C               	movwf	??_main^0,c
   370   00FC9C  0EFC               	movlw	252
   371   00FC9E                     u997:
   372   00FC9E  2EE8               	decfsz	wreg,f,c
   373   00FCA0  D7FE               	bra	u997
   374   00FCA2  2E3C               	decfsz	??_main^0,f,c
   375   00FCA4  D7FC               	bra	u997
   376   00FCA6  0E29               	movlw	low _seg_2_enable
   377   00FCA8  6E2B               	movwf	gpio_pin_write_logic@_pin_config^0,c
   378   00FCAA  0E00               	movlw	high _seg_2_enable
   379   00FCAC  6E2C               	movwf	(gpio_pin_write_logic@_pin_config+1)^0,c
   380   00FCAE  0E00               	movlw	0
   381   00FCB0  6E2D               	movwf	gpio_pin_write_logic@logic^0,c
   382   00FCB2  ECC8  F07E         	call	_gpio_pin_write_logic	;wreg free
   383   00FCB6  0E22               	movlw	low _seg1
   384   00FCB8  6E35               	movwf	seven_segment_write_number@seg^0,c
   385   00FCBA  0E00               	movlw	high _seg1
   386   00FCBC  6E36               	movwf	(seven_segment_write_number@seg+1)^0,c
   387   00FCBE  0E04               	movlw	4
   388   00FCC0  6E37               	movwf	seven_segment_write_number@number^0,c
   389   00FCC2  EC7E  F07E         	call	_seven_segment_write_number	;wreg free
   390   00FCC6  0E2A               	movlw	low _seg_1_enable
   391   00FCC8  6E2B               	movwf	gpio_pin_write_logic@_pin_config^0,c
   392   00FCCA  0E00               	movlw	high _seg_1_enable
   393   00FCCC  6E2C               	movwf	(gpio_pin_write_logic@_pin_config+1)^0,c
   394   00FCCE  0E01               	movlw	1
   395   00FCD0  6E2D               	movwf	gpio_pin_write_logic@logic^0,c
   396   00FCD2  ECC8  F07E         	call	_gpio_pin_write_logic	;wreg free
   397   00FCD6                     
   398                           ;application.c: 91:         _delay((unsigned long)((5)*(8000000/4000.0)));
   399   00FCD6  0E0D               	movlw	13
   400   00FCD8  6E3C               	movwf	??_main^0,c
   401   00FCDA  0EFC               	movlw	252
   402   00FCDC                     u1007:
   403   00FCDC  2EE8               	decfsz	wreg,f,c
   404   00FCDE  D7FE               	bra	u1007
   405   00FCE0  2E3C               	decfsz	??_main^0,f,c
   406   00FCE2  D7FC               	bra	u1007
   407   00FCE4  0E2A               	movlw	low _seg_1_enable
   408   00FCE6  6E2B               	movwf	gpio_pin_write_logic@_pin_config^0,c
   409   00FCE8  0E00               	movlw	high _seg_1_enable
   410   00FCEA  6E2C               	movwf	(gpio_pin_write_logic@_pin_config+1)^0,c
   411   00FCEC  0E00               	movlw	0
   412   00FCEE  6E2D               	movwf	gpio_pin_write_logic@logic^0,c
   413   00FCF0  ECC8  F07E         	call	_gpio_pin_write_logic	;wreg free
   414   00FCF4  EF3C  F07E         	goto	l1703
   415   00FCF8  EF00  F000         	goto	start
   416   00FCFC                     __end_of_main:
   417                           	callstack 0
   418                           
   419 ;; *************** function _seven_segment_write_number *****************
   420 ;; Defined at:
   421 ;;		line 37 in file "ECU_layer/7_Segment/ecu_seven_segment.c"
   422 ;; Parameters:    Size  Location     Type
   423 ;;  seg             2   10[COMRAM] PTR const struct .
   424 ;;		 -> seg1(5), 
   425 ;;  number          1   12[COMRAM] unsigned char 
   426 ;; Auto vars:     Size  Location     Type
   427 ;;  ret             1   13[COMRAM] unsigned char 
   428 ;; Return value:  Size  Location     Type
   429 ;;                  1    wreg      unsigned char 
   430 ;; Registers used:
   431 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
   432 ;; Tracked objects:
   433 ;;		On entry : 0/0
   434 ;;		On exit  : 0/0
   435 ;;		Unchanged: 0/0
   436 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   437 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   438 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   439 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   440 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   441 ;;Total ram usage:        4 bytes
   442 ;; Hardware stack levels used: 1
   443 ;; Hardware stack levels required when called: 1
   444 ;; This function calls:
   445 ;;		_gpio_pin_write_logic
   446 ;; This function is called by:
   447 ;;		_main
   448 ;; This function uses a non-reentrant model
   449 ;;
   450                           
   451                           	psect	text1
   452   00FCFC                     __ptext1:
   453                           	callstack 0
   454   00FCFC                     _seven_segment_write_number:
   455                           	callstack 29
   456   00FCFC                     
   457                           ;ECU_layer/7_Segment/ecu_seven_segment.c: 40:     if( (((void*)0) == seg) && (number>9))
      +                          {
   458   00FCFC  5035               	movf	seven_segment_write_number@seg^0,w,c
   459   00FCFE  1036               	iorwf	(seven_segment_write_number@seg+1)^0,w,c
   460   00FD00  A4D8               	btfss	status,2,c
   461   00FD02  EF85  F07E         	goto	u811
   462   00FD06  EF87  F07E         	goto	u810
   463   00FD0A                     u811:
   464   00FD0A  EF93  F07E         	goto	l1553
   465   00FD0E                     u810:
   466   00FD0E  0E09               	movlw	9
   467   00FD10  6437               	cpfsgt	seven_segment_write_number@number^0,c
   468   00FD12  EF8D  F07E         	goto	u821
   469   00FD16  EF8F  F07E         	goto	u820
   470   00FD1A                     u821:
   471   00FD1A  EF93  F07E         	goto	l1553
   472   00FD1E                     u820:
   473   00FD1E                     
   474                           ;ECU_layer/7_Segment/ecu_seven_segment.c: 41:         ret = (Std_ReturnType)0x00;
   475   00FD1E  0E00               	movlw	0
   476   00FD20  6E38               	movwf	seven_segment_write_number@ret^0,c
   477                           
   478                           ;ECU_layer/7_Segment/ecu_seven_segment.c: 42:     }
   479   00FD22  EFC6  F07E         	goto	l1555
   480   00FD26                     l1553:
   481                           
   482                           ;ECU_layer/7_Segment/ecu_seven_segment.c: 44:         ret = gpio_pin_write_logic(&(seg -
      +                          >segment_pins[0]), ( number &0x01) );
   483   00FD26  C035  F02B         	movff	seven_segment_write_number@seg,gpio_pin_write_logic@_pin_config
   484   00FD2A  C036  F02C         	movff	seven_segment_write_number@seg+1,gpio_pin_write_logic@_pin_config+1
   485   00FD2E  5037               	movf	seven_segment_write_number@number^0,w,c
   486   00FD30  0B01               	andlw	1
   487   00FD32  6E2D               	movwf	gpio_pin_write_logic@logic^0,c
   488   00FD34  ECC8  F07E         	call	_gpio_pin_write_logic	;wreg free
   489   00FD38  6E38               	movwf	seven_segment_write_number@ret^0,c
   490                           
   491                           ;ECU_layer/7_Segment/ecu_seven_segment.c: 45:         ret = gpio_pin_write_logic(&(seg -
      +                          >segment_pins[1]), ( (number >>1) &0x01) );
   492   00FD3A  0E01               	movlw	1
   493   00FD3C  2435               	addwf	seven_segment_write_number@seg^0,w,c
   494   00FD3E  6E2B               	movwf	gpio_pin_write_logic@_pin_config^0,c
   495   00FD40  0E00               	movlw	0
   496   00FD42  2036               	addwfc	(seven_segment_write_number@seg+1)^0,w,c
   497   00FD44  6E2C               	movwf	(gpio_pin_write_logic@_pin_config+1)^0,c
   498   00FD46  90D8               	bcf	status,0,c
   499   00FD48  3037               	rrcf	seven_segment_write_number@number^0,w,c
   500   00FD4A  0B01               	andlw	1
   501   00FD4C  6E2D               	movwf	gpio_pin_write_logic@logic^0,c
   502   00FD4E  ECC8  F07E         	call	_gpio_pin_write_logic	;wreg free
   503   00FD52  6E38               	movwf	seven_segment_write_number@ret^0,c
   504                           
   505                           ;ECU_layer/7_Segment/ecu_seven_segment.c: 46:         ret = gpio_pin_write_logic(&(seg -
      +                          >segment_pins[2]), ( (number >>2) &0x01) );
   506   00FD54  0E02               	movlw	2
   507   00FD56  2435               	addwf	seven_segment_write_number@seg^0,w,c
   508   00FD58  6E2B               	movwf	gpio_pin_write_logic@_pin_config^0,c
   509   00FD5A  0E00               	movlw	0
   510   00FD5C  2036               	addwfc	(seven_segment_write_number@seg+1)^0,w,c
   511   00FD5E  6E2C               	movwf	(gpio_pin_write_logic@_pin_config+1)^0,c
   512   00FD60  4037               	rrncf	seven_segment_write_number@number^0,w,c
   513   00FD62  42E8               	rrncf	wreg,f,c
   514   00FD64  0B3F               	andlw	63
   515   00FD66  0B01               	andlw	1
   516   00FD68  6E2D               	movwf	gpio_pin_write_logic@logic^0,c
   517   00FD6A  ECC8  F07E         	call	_gpio_pin_write_logic	;wreg free
   518   00FD6E  6E38               	movwf	seven_segment_write_number@ret^0,c
   519                           
   520                           ;ECU_layer/7_Segment/ecu_seven_segment.c: 47:        ret = gpio_pin_write_logic(&(seg ->
      +                          segment_pins[3]), ( (number >>3) &0x01) );
   521   00FD70  0E03               	movlw	3
   522   00FD72  2435               	addwf	seven_segment_write_number@seg^0,w,c
   523   00FD74  6E2B               	movwf	gpio_pin_write_logic@_pin_config^0,c
   524   00FD76  0E00               	movlw	0
   525   00FD78  2036               	addwfc	(seven_segment_write_number@seg+1)^0,w,c
   526   00FD7A  6E2C               	movwf	(gpio_pin_write_logic@_pin_config+1)^0,c
   527   00FD7C  3837               	swapf	seven_segment_write_number@number^0,w,c
   528   00FD7E  46E8               	rlncf	wreg,f,c
   529   00FD80  0B1F               	andlw	31
   530   00FD82  0B01               	andlw	1
   531   00FD84  6E2D               	movwf	gpio_pin_write_logic@logic^0,c
   532   00FD86  ECC8  F07E         	call	_gpio_pin_write_logic	;wreg free
   533   00FD8A  6E38               	movwf	seven_segment_write_number@ret^0,c
   534   00FD8C                     l1555:
   535                           
   536                           ;ECU_layer/7_Segment/ecu_seven_segment.c: 49:   return ret;
   537   00FD8C  5038               	movf	seven_segment_write_number@ret^0,w,c
   538   00FD8E  0012               	return		;funcret
   539   00FD90                     __end_of_seven_segment_write_number:
   540                           	callstack 0
   541                           
   542 ;; *************** function _application_intialize *****************
   543 ;; Defined at:
   544 ;;		line 70 in file "application.c"
   545 ;; Parameters:    Size  Location     Type
   546 ;;		None
   547 ;; Auto vars:     Size  Location     Type
   548 ;;  ret             1    0        unsigned char 
   549 ;; Return value:  Size  Location     Type
   550 ;;                  1    wreg      void 
   551 ;; Registers used:
   552 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
   553 ;; Tracked objects:
   554 ;;		On entry : 0/0
   555 ;;		On exit  : 0/0
   556 ;;		Unchanged: 0/0
   557 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   558 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   559 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   560 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   561 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   562 ;;Total ram usage:        0 bytes
   563 ;; Hardware stack levels used: 1
   564 ;; Hardware stack levels required when called: 3
   565 ;; This function calls:
   566 ;;		_dc_motor_initialize
   567 ;;		_gpio_pin_initialize
   568 ;;		_seven_segment_initialize
   569 ;; This function is called by:
   570 ;;		_main
   571 ;; This function uses a non-reentrant model
   572 ;;
   573                           
   574                           	psect	text2
   575   00FB00                     __ptext2:
   576                           	callstack 0
   577   00FB00                     _application_intialize:
   578                           	callstack 27
   579   00FB00  0E27               	movlw	low _dc_motor_1
   580   00FB02  6E34               	movwf	dc_motor_initialize@_dc_motor^0,c
   581   00FB04  0E00               	movlw	high _dc_motor_1
   582   00FB06  6E35               	movwf	(dc_motor_initialize@_dc_motor+1)^0,c
   583   00FB08  ECB4  F07D         	call	_dc_motor_initialize	;wreg free
   584   00FB0C  0E22               	movlw	low _seg1
   585   00FB0E  6E39               	movwf	seven_segment_initialize@seg^0,c
   586   00FB10  0E00               	movlw	high _seg1
   587   00FB12  6E3A               	movwf	(seven_segment_initialize@seg+1)^0,c
   588   00FB14  ECD3  F07D         	call	_seven_segment_initialize	;wreg free
   589   00FB18  0E2A               	movlw	low _seg_1_enable
   590   00FB1A  6E35               	movwf	gpio_pin_initialize@_pin_config^0,c
   591   00FB1C  0E00               	movlw	high _seg_1_enable
   592   00FB1E  6E36               	movwf	(gpio_pin_initialize@_pin_config+1)^0,c
   593   00FB20  EC04  F07E         	call	_gpio_pin_initialize	;wreg free
   594   00FB24  0E29               	movlw	low _seg_2_enable
   595   00FB26  6E35               	movwf	gpio_pin_initialize@_pin_config^0,c
   596   00FB28  0E00               	movlw	high _seg_2_enable
   597   00FB2A  6E36               	movwf	(gpio_pin_initialize@_pin_config+1)^0,c
   598   00FB2C  EC04  F07E         	call	_gpio_pin_initialize	;wreg free
   599   00FB30  0012               	return		;funcret
   600   00FB32                     __end_of_application_intialize:
   601                           	callstack 0
   602                           
   603 ;; *************** function _seven_segment_initialize *****************
   604 ;; Defined at:
   605 ;;		line 18 in file "ECU_layer/7_Segment/ecu_seven_segment.c"
   606 ;; Parameters:    Size  Location     Type
   607 ;;  seg             2   14[COMRAM] PTR const struct .
   608 ;;		 -> seg1(5), 
   609 ;; Auto vars:     Size  Location     Type
   610 ;;  ret             1   16[COMRAM] unsigned char 
   611 ;; Return value:  Size  Location     Type
   612 ;;                  1    wreg      unsigned char 
   613 ;; Registers used:
   614 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
   615 ;; Tracked objects:
   616 ;;		On entry : 0/0
   617 ;;		On exit  : 0/0
   618 ;;		Unchanged: 0/0
   619 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   620 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   621 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   622 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   623 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   624 ;;Total ram usage:        3 bytes
   625 ;; Hardware stack levels used: 1
   626 ;; Hardware stack levels required when called: 2
   627 ;; This function calls:
   628 ;;		_gpio_pin_initialize
   629 ;; This function is called by:
   630 ;;		_application_intialize
   631 ;; This function uses a non-reentrant model
   632 ;;
   633                           
   634                           	psect	text3
   635   00FBA6                     __ptext3:
   636                           	callstack 0
   637   00FBA6                     _seven_segment_initialize:
   638                           	callstack 27
   639   00FBA6                     
   640                           ;ECU_layer/7_Segment/ecu_seven_segment.c: 20:     if(((void*)0) == seg ){
   641   00FBA6  5039               	movf	seven_segment_initialize@seg^0,w,c
   642   00FBA8  103A               	iorwf	(seven_segment_initialize@seg+1)^0,w,c
   643   00FBAA  A4D8               	btfss	status,2,c
   644   00FBAC  EFDA  F07D         	goto	u801
   645   00FBB0  EFDC  F07D         	goto	u800
   646   00FBB4                     u801:
   647   00FBB4  EFE0  F07D         	goto	l1527
   648   00FBB8                     u800:
   649   00FBB8                     
   650                           ;ECU_layer/7_Segment/ecu_seven_segment.c: 21:         ret = (Std_ReturnType)0x00;
   651   00FBB8  0E00               	movlw	0
   652   00FBBA  6E3B               	movwf	seven_segment_initialize@ret^0,c
   653                           
   654                           ;ECU_layer/7_Segment/ecu_seven_segment.c: 22:     }
   655   00FBBC  EF02  F07E         	goto	l1529
   656   00FBC0                     l1527:
   657                           
   658                           ;ECU_layer/7_Segment/ecu_seven_segment.c: 24:         ret=gpio_pin_initialize( &(seg ->s
      +                          egment_pins[0]) );
   659   00FBC0  C039  F035         	movff	seven_segment_initialize@seg,gpio_pin_initialize@_pin_config
   660   00FBC4  C03A  F036         	movff	seven_segment_initialize@seg+1,gpio_pin_initialize@_pin_config+1
   661   00FBC8  EC04  F07E         	call	_gpio_pin_initialize	;wreg free
   662   00FBCC  6E3B               	movwf	seven_segment_initialize@ret^0,c
   663                           
   664                           ;ECU_layer/7_Segment/ecu_seven_segment.c: 25:         ret=gpio_pin_initialize( &(seg ->s
      +                          egment_pins[1]) );
   665   00FBCE  0E01               	movlw	1
   666   00FBD0  2439               	addwf	seven_segment_initialize@seg^0,w,c
   667   00FBD2  6E35               	movwf	gpio_pin_initialize@_pin_config^0,c
   668   00FBD4  0E00               	movlw	0
   669   00FBD6  203A               	addwfc	(seven_segment_initialize@seg+1)^0,w,c
   670   00FBD8  6E36               	movwf	(gpio_pin_initialize@_pin_config+1)^0,c
   671   00FBDA  EC04  F07E         	call	_gpio_pin_initialize	;wreg free
   672   00FBDE  6E3B               	movwf	seven_segment_initialize@ret^0,c
   673                           
   674                           ;ECU_layer/7_Segment/ecu_seven_segment.c: 26:         ret=gpio_pin_initialize( &(seg ->s
      +                          egment_pins[2]) );
   675   00FBE0  0E02               	movlw	2
   676   00FBE2  2439               	addwf	seven_segment_initialize@seg^0,w,c
   677   00FBE4  6E35               	movwf	gpio_pin_initialize@_pin_config^0,c
   678   00FBE6  0E00               	movlw	0
   679   00FBE8  203A               	addwfc	(seven_segment_initialize@seg+1)^0,w,c
   680   00FBEA  6E36               	movwf	(gpio_pin_initialize@_pin_config+1)^0,c
   681   00FBEC  EC04  F07E         	call	_gpio_pin_initialize	;wreg free
   682   00FBF0  6E3B               	movwf	seven_segment_initialize@ret^0,c
   683                           
   684                           ;ECU_layer/7_Segment/ecu_seven_segment.c: 27:         ret=gpio_pin_initialize( &(seg ->s
      +                          egment_pins[3]) );
   685   00FBF2  0E03               	movlw	3
   686   00FBF4  2439               	addwf	seven_segment_initialize@seg^0,w,c
   687   00FBF6  6E35               	movwf	gpio_pin_initialize@_pin_config^0,c
   688   00FBF8  0E00               	movlw	0
   689   00FBFA  203A               	addwfc	(seven_segment_initialize@seg+1)^0,w,c
   690   00FBFC  6E36               	movwf	(gpio_pin_initialize@_pin_config+1)^0,c
   691   00FBFE  EC04  F07E         	call	_gpio_pin_initialize	;wreg free
   692   00FC02  6E3B               	movwf	seven_segment_initialize@ret^0,c
   693   00FC04                     l1529:
   694                           
   695                           ;ECU_layer/7_Segment/ecu_seven_segment.c: 29:   return ret;
   696   00FC04  503B               	movf	seven_segment_initialize@ret^0,w,c
   697   00FC06  0012               	return		;funcret
   698   00FC08                     __end_of_seven_segment_initialize:
   699                           	callstack 0
   700                           
   701 ;; *************** function _gpio_pin_initialize *****************
   702 ;; Defined at:
   703 ;;		line 26 in file "MCAL_layer/GPIO/hal_gpio.c"
   704 ;; Parameters:    Size  Location     Type
   705 ;;  _pin_config     2   10[COMRAM] PTR const struct .
   706 ;;		 -> seg_2_enable(1), seg_1_enable(1), seg1.segment_pins(4), seg1(5), 
   707 ;;		 -> relay_initialize@pin_0bj(1), led_initialize@pin_0bj(1), 
   708 ;; Auto vars:     Size  Location     Type
   709 ;;  ret             1   13[COMRAM] unsigned char 
   710 ;; Return value:  Size  Location     Type
   711 ;;                  1    wreg      unsigned char 
   712 ;; Registers used:
   713 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
   714 ;; Tracked objects:
   715 ;;		On entry : 0/0
   716 ;;		On exit  : 0/0
   717 ;;		Unchanged: 0/0
   718 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   719 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   720 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   721 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   722 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   723 ;;Total ram usage:        4 bytes
   724 ;; Hardware stack levels used: 1
   725 ;; Hardware stack levels required when called: 1
   726 ;; This function calls:
   727 ;;		_gpio_pin_direction_initialize
   728 ;;		_gpio_pin_write_logic
   729 ;; This function is called by:
   730 ;;		_application_intialize
   731 ;;		_seven_segment_initialize
   732 ;;		_led_initialize
   733 ;;		_relay_initialize
   734 ;; This function uses a non-reentrant model
   735 ;;
   736                           
   737                           	psect	text4
   738   00FC08                     __ptext4:
   739                           	callstack 0
   740   00FC08                     _gpio_pin_initialize:
   741                           	callstack 27
   742   00FC08                     
   743                           ;MCAL_layer/GPIO/hal_gpio.c: 28:     if(((void*)0) == _pin_config || _pin_config->pin > 
      +                          8 -1){
   744   00FC08  5035               	movf	gpio_pin_initialize@_pin_config^0,w,c
   745   00FC0A  1036               	iorwf	(gpio_pin_initialize@_pin_config+1)^0,w,c
   746   00FC0C  B4D8               	btfsc	status,2,c
   747   00FC0E  EF0B  F07E         	goto	u771
   748   00FC12  EF0D  F07E         	goto	u770
   749   00FC16                     u771:
   750   00FC16  EF1E  F07E         	goto	l1501
   751   00FC1A                     u770:
   752   00FC1A  C035  FFD9         	movff	gpio_pin_initialize@_pin_config,fsr2l
   753   00FC1E  C036  FFDA         	movff	gpio_pin_initialize@_pin_config+1,fsr2h
   754   00FC22  30DF               	rrcf	223,w,c
   755   00FC24  32E8               	rrcf	wreg,f,c
   756   00FC26  32E8               	rrcf	wreg,f,c
   757   00FC28  0B07               	andlw	7
   758   00FC2A  6E37               	movwf	??_gpio_pin_initialize^0,c
   759   00FC2C  0E07               	movlw	7
   760   00FC2E  6437               	cpfsgt	??_gpio_pin_initialize^0,c
   761   00FC30  EF1C  F07E         	goto	u781
   762   00FC34  EF1E  F07E         	goto	u780
   763   00FC38                     u781:
   764   00FC38  EF22  F07E         	goto	l1503
   765   00FC3C                     u780:
   766   00FC3C                     l1501:
   767                           
   768                           ;MCAL_layer/GPIO/hal_gpio.c: 29:         ret = (Std_ReturnType)0x00;
   769   00FC3C  0E00               	movlw	0
   770   00FC3E  6E38               	movwf	gpio_pin_initialize@ret^0,c
   771                           
   772                           ;MCAL_layer/GPIO/hal_gpio.c: 30:     }
   773   00FC40  EF38  F07E         	goto	l1505
   774   00FC44                     l1503:
   775                           
   776                           ;MCAL_layer/GPIO/hal_gpio.c: 32:         ret = gpio_pin_direction_initialize(_pin_config
      +                          );
   777   00FC44  C035  F02B         	movff	gpio_pin_initialize@_pin_config,gpio_pin_direction_initialize@_pin_config
   778   00FC48  C036  F02C         	movff	gpio_pin_initialize@_pin_config+1,gpio_pin_direction_initialize@_pin_config+1
   779   00FC4C  EC5E  F07F         	call	_gpio_pin_direction_initialize	;wreg free
   780   00FC50  6E38               	movwf	gpio_pin_initialize@ret^0,c
   781                           
   782                           ;MCAL_layer/GPIO/hal_gpio.c: 33:         ret = gpio_pin_write_logic(_pin_config, _pin_co
      +                          nfig->logic);
   783   00FC52  C035  F02B         	movff	gpio_pin_initialize@_pin_config,gpio_pin_write_logic@_pin_config
   784   00FC56  C036  F02C         	movff	gpio_pin_initialize@_pin_config+1,gpio_pin_write_logic@_pin_config+1
   785   00FC5A  C035  FFD9         	movff	gpio_pin_initialize@_pin_config,fsr2l
   786   00FC5E  C036  FFDA         	movff	gpio_pin_initialize@_pin_config+1,fsr2h
   787   00FC62  0E00               	movlw	0
   788   00FC64  BEDF               	btfsc	indf2,7,c
   789   00FC66  0E01               	movlw	1
   790   00FC68  6E2D               	movwf	gpio_pin_write_logic@logic^0,c
   791   00FC6A  ECC8  F07E         	call	_gpio_pin_write_logic	;wreg free
   792   00FC6E  6E38               	movwf	gpio_pin_initialize@ret^0,c
   793   00FC70                     l1505:
   794                           
   795                           ;MCAL_layer/GPIO/hal_gpio.c: 35:     return ret;
   796   00FC70  5038               	movf	gpio_pin_initialize@ret^0,w,c
   797   00FC72  0012               	return		;funcret
   798   00FC74                     __end_of_gpio_pin_initialize:
   799                           	callstack 0
   800                           
   801 ;; *************** function _gpio_pin_write_logic *****************
   802 ;; Defined at:
   803 ;;		line 92 in file "MCAL_layer/GPIO/hal_gpio.c"
   804 ;; Parameters:    Size  Location     Type
   805 ;;  _pin_config     2    0[COMRAM] PTR const struct .
   806 ;;		 -> seg_2_enable(1), seg_1_enable(1), seg1.segment_pins(4), seg1(5), 
   807 ;;		 -> relay_off@pin_0bj(1), relay_on@pin_0bj(1), relay_initialize@pin_0bj(1), led_turn_off@pin_0bj(1), 
   808 ;;		 -> led_turn_on@pin_0bj(1), led_initialize@pin_0bj(1), 
   809 ;;  logic           1    2[COMRAM] enum E2798
   810 ;; Auto vars:     Size  Location     Type
   811 ;;  ret             1    9[COMRAM] unsigned char 
   812 ;; Return value:  Size  Location     Type
   813 ;;                  1    wreg      unsigned char 
   814 ;; Registers used:
   815 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
   816 ;; Tracked objects:
   817 ;;		On entry : 0/0
   818 ;;		On exit  : 0/0
   819 ;;		Unchanged: 0/0
   820 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   821 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   822 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   823 ;;      Temps:          6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   824 ;;      Totals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   825 ;;Total ram usage:       10 bytes
   826 ;; Hardware stack levels used: 1
   827 ;; This function calls:
   828 ;;		Nothing
   829 ;; This function is called by:
   830 ;;		_gpio_pin_initialize
   831 ;;		_main
   832 ;;		_seven_segment_write_number
   833 ;;		_dc_motor_move_right
   834 ;;		_dc_motor_move_left
   835 ;;		_dc_motor_stop
   836 ;;		_led_turn_on
   837 ;;		_led_turn_off
   838 ;;		_relay_on
   839 ;;		_relay_off
   840 ;; This function uses a non-reentrant model
   841 ;;
   842                           
   843                           	psect	text5
   844   00FD90                     __ptext5:
   845                           	callstack 0
   846   00FD90                     _gpio_pin_write_logic:
   847                           	callstack 29
   848   00FD90                     
   849                           ;MCAL_layer/GPIO/hal_gpio.c: 93:         Std_ReturnType ret= (Std_ReturnType)0x01 ;
   850   00FD90  0E01               	movlw	1
   851   00FD92  6E34               	movwf	gpio_pin_write_logic@ret^0,c
   852   00FD94                     
   853                           ;MCAL_layer/GPIO/hal_gpio.c: 94: if(((void*)0) ==_pin_config || _pin_config ->pin > (8 -
      +                          1)) {
   854   00FD94  502B               	movf	gpio_pin_write_logic@_pin_config^0,w,c
   855   00FD96  102C               	iorwf	(gpio_pin_write_logic@_pin_config+1)^0,w,c
   856   00FD98  B4D8               	btfsc	status,2,c
   857   00FD9A  EFD1  F07E         	goto	u731
   858   00FD9E  EFD3  F07E         	goto	u730
   859   00FDA2                     u731:
   860   00FDA2  EFE4  F07E         	goto	l1477
   861   00FDA6                     u730:
   862   00FDA6  C02B  FFD9         	movff	gpio_pin_write_logic@_pin_config,fsr2l
   863   00FDAA  C02C  FFDA         	movff	gpio_pin_write_logic@_pin_config+1,fsr2h
   864   00FDAE  30DF               	rrcf	223,w,c
   865   00FDB0  32E8               	rrcf	wreg,f,c
   866   00FDB2  32E8               	rrcf	wreg,f,c
   867   00FDB4  0B07               	andlw	7
   868   00FDB6  6E2E               	movwf	??_gpio_pin_write_logic^0,c
   869   00FDB8  0E07               	movlw	7
   870   00FDBA  642E               	cpfsgt	??_gpio_pin_write_logic^0,c
   871   00FDBC  EFE2  F07E         	goto	u741
   872   00FDC0  EFE4  F07E         	goto	u740
   873   00FDC4                     u741:
   874   00FDC4  EF47  F07F         	goto	l1485
   875   00FDC8                     u740:
   876   00FDC8                     l1477:
   877                           
   878                           ;MCAL_layer/GPIO/hal_gpio.c: 95:         ret= (Std_ReturnType)0x00 ;
   879   00FDC8  0E00               	movlw	0
   880   00FDCA  6E34               	movwf	gpio_pin_write_logic@ret^0,c
   881                           
   882                           ;MCAL_layer/GPIO/hal_gpio.c: 96:     }
   883   00FDCC  EF5C  F07F         	goto	l1487
   884   00FDD0                     l1479:
   885                           
   886                           ;MCAL_layer/GPIO/hal_gpio.c: 100:             ( *lat_registers[_pin_config->port] &= ~((
      +                          uint8)1<<_pin_config->pin) );
   887   00FDD0  C02B  FFD9         	movff	gpio_pin_write_logic@_pin_config,fsr2l
   888   00FDD4  C02C  FFDA         	movff	gpio_pin_write_logic@_pin_config+1,fsr2h
   889   00FDD8  30DF               	rrcf	223,w,c
   890   00FDDA  32E8               	rrcf	wreg,f,c
   891   00FDDC  32E8               	rrcf	wreg,f,c
   892   00FDDE  0B07               	andlw	7
   893   00FDE0  6E2E               	movwf	??_gpio_pin_write_logic^0,c
   894   00FDE2  0E01               	movlw	1
   895   00FDE4  6E2F               	movwf	(??_gpio_pin_write_logic+1)^0,c
   896   00FDE6  2A2E               	incf	??_gpio_pin_write_logic^0,f,c
   897   00FDE8  EFF8  F07E         	goto	u754
   898   00FDEC                     u755:
   899   00FDEC  90D8               	bcf	status,0,c
   900   00FDEE  362F               	rlcf	(??_gpio_pin_write_logic+1)^0,f,c
   901   00FDF0                     u754:
   902   00FDF0  2E2E               	decfsz	??_gpio_pin_write_logic^0,f,c
   903   00FDF2  EFF6  F07E         	goto	u755
   904   00FDF6  502F               	movf	(??_gpio_pin_write_logic+1)^0,w,c
   905   00FDF8  0AFF               	xorlw	255
   906   00FDFA  6E30               	movwf	(??_gpio_pin_write_logic+2)^0,c
   907   00FDFC  C02B  FFD9         	movff	gpio_pin_write_logic@_pin_config,fsr2l
   908   00FE00  C02C  FFDA         	movff	gpio_pin_write_logic@_pin_config+1,fsr2h
   909   00FE04  50DF               	movf	223,w,c
   910   00FE06  0B07               	andlw	7
   911   00FE08  6E31               	movwf	(??_gpio_pin_write_logic+3)^0,c
   912   00FE0A  5031               	movf	(??_gpio_pin_write_logic+3)^0,w,c
   913   00FE0C  0D02               	mullw	2
   914   00FE0E  0E0B               	movlw	low _lat_registers
   915   00FE10  24F3               	addwf	243,w,c
   916   00FE12  6ED9               	movwf	fsr2l,c
   917   00FE14  0E00               	movlw	high _lat_registers
   918   00FE16  20F4               	addwfc	prodh,w,c
   919   00FE18  6EDA               	movwf	fsr2h,c
   920   00FE1A  CFDE F032          	movff	postinc2,??_gpio_pin_write_logic+4
   921   00FE1E  CFDD F033          	movff	postdec2,??_gpio_pin_write_logic+5
   922   00FE22  C032  FFD9         	movff	??_gpio_pin_write_logic+4,fsr2l
   923   00FE26  C033  FFDA         	movff	??_gpio_pin_write_logic+5,fsr2h
   924   00FE2A  5030               	movf	(??_gpio_pin_write_logic+2)^0,w,c
   925   00FE2C  16DF               	andwf	indf2,f,c
   926                           
   927                           ;MCAL_layer/GPIO/hal_gpio.c: 101:             break;
   928   00FE2E  EF5C  F07F         	goto	l1487
   929   00FE32                     l1481:
   930                           
   931                           ;MCAL_layer/GPIO/hal_gpio.c: 103:             ( *lat_registers[_pin_config->port] |= ((u
      +                          int8)1<<_pin_config->pin) );
   932   00FE32  C02B  FFD9         	movff	gpio_pin_write_logic@_pin_config,fsr2l
   933   00FE36  C02C  FFDA         	movff	gpio_pin_write_logic@_pin_config+1,fsr2h
   934   00FE3A  30DF               	rrcf	223,w,c
   935   00FE3C  32E8               	rrcf	wreg,f,c
   936   00FE3E  32E8               	rrcf	wreg,f,c
   937   00FE40  0B07               	andlw	7
   938   00FE42  6E2E               	movwf	??_gpio_pin_write_logic^0,c
   939   00FE44  0E01               	movlw	1
   940   00FE46  6E2F               	movwf	(??_gpio_pin_write_logic+1)^0,c
   941   00FE48  2A2E               	incf	??_gpio_pin_write_logic^0,f,c
   942   00FE4A  EF29  F07F         	goto	u764
   943   00FE4E                     u765:
   944   00FE4E  90D8               	bcf	status,0,c
   945   00FE50  362F               	rlcf	(??_gpio_pin_write_logic+1)^0,f,c
   946   00FE52                     u764:
   947   00FE52  2E2E               	decfsz	??_gpio_pin_write_logic^0,f,c
   948   00FE54  EF27  F07F         	goto	u765
   949   00FE58  C02B  FFD9         	movff	gpio_pin_write_logic@_pin_config,fsr2l
   950   00FE5C  C02C  FFDA         	movff	gpio_pin_write_logic@_pin_config+1,fsr2h
   951   00FE60  50DF               	movf	223,w,c
   952   00FE62  0B07               	andlw	7
   953   00FE64  6E30               	movwf	(??_gpio_pin_write_logic+2)^0,c
   954   00FE66  5030               	movf	(??_gpio_pin_write_logic+2)^0,w,c
   955   00FE68  0D02               	mullw	2
   956   00FE6A  0E0B               	movlw	low _lat_registers
   957   00FE6C  24F3               	addwf	243,w,c
   958   00FE6E  6ED9               	movwf	fsr2l,c
   959   00FE70  0E00               	movlw	high _lat_registers
   960   00FE72  20F4               	addwfc	prodh,w,c
   961   00FE74  6EDA               	movwf	fsr2h,c
   962   00FE76  CFDE F031          	movff	postinc2,??_gpio_pin_write_logic+3
   963   00FE7A  CFDD F032          	movff	postdec2,??_gpio_pin_write_logic+4
   964   00FE7E  C031  FFD9         	movff	??_gpio_pin_write_logic+3,fsr2l
   965   00FE82  C032  FFDA         	movff	??_gpio_pin_write_logic+4,fsr2h
   966   00FE86  502F               	movf	(??_gpio_pin_write_logic+1)^0,w,c
   967   00FE88  12DF               	iorwf	indf2,f,c
   968                           
   969                           ;MCAL_layer/GPIO/hal_gpio.c: 104:             break;
   970   00FE8A  EF5C  F07F         	goto	l1487
   971   00FE8E                     l1485:
   972   00FE8E  502D               	movf	gpio_pin_write_logic@logic^0,w,c
   973   00FE90  6E2E               	movwf	??_gpio_pin_write_logic^0,c
   974   00FE92  6A2F               	clrf	(??_gpio_pin_write_logic+1)^0,c
   975                           
   976                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
   977                           ; Switch size 1, requested type "simple"
   978                           ; Number of cases is 1, Range of values is 0 to 0
   979                           ; switch strategies available:
   980                           ; Name         Instructions Cycles
   981                           ; simple_byte            4     3 (average)
   982                           ;	Chosen strategy is simple_byte
   983   00FE94  502F               	movf	(??_gpio_pin_write_logic+1)^0,w,c
   984   00FE96  0A00               	xorlw	0	; case 0
   985   00FE98  B4D8               	btfsc	status,2,c
   986   00FE9A  EF51  F07F         	goto	l1727
   987   00FE9E  EFE4  F07E         	goto	l1477
   988   00FEA2                     l1727:
   989                           
   990                           ; Switch size 1, requested type "simple"
   991                           ; Number of cases is 2, Range of values is 0 to 1
   992                           ; switch strategies available:
   993                           ; Name         Instructions Cycles
   994                           ; simple_byte            7     4 (average)
   995                           ;	Chosen strategy is simple_byte
   996   00FEA2  502E               	movf	??_gpio_pin_write_logic^0,w,c
   997   00FEA4  0A00               	xorlw	0	; case 0
   998   00FEA6  B4D8               	btfsc	status,2,c
   999   00FEA8  EFE8  F07E         	goto	l1479
  1000   00FEAC  0A01               	xorlw	1	; case 1
  1001   00FEAE  B4D8               	btfsc	status,2,c
  1002   00FEB0  EF19  F07F         	goto	l1481
  1003   00FEB4  EFE4  F07E         	goto	l1477
  1004   00FEB8                     l1487:
  1005                           
  1006                           ;MCAL_layer/GPIO/hal_gpio.c: 109:  return ret ;
  1007   00FEB8  5034               	movf	gpio_pin_write_logic@ret^0,w,c
  1008   00FEBA  0012               	return		;funcret
  1009   00FEBC                     __end_of_gpio_pin_write_logic:
  1010                           	callstack 0
  1011                           
  1012 ;; *************** function _dc_motor_initialize *****************
  1013 ;; Defined at:
  1014 ;;		line 17 in file "ECU_layer/DC_Motor/ecu_dc_motor.c"
  1015 ;; Parameters:    Size  Location     Type
  1016 ;;  _dc_motor       2    9[COMRAM] PTR const struct .
  1017 ;;		 -> dc_motor_1(2), 
  1018 ;; Auto vars:     Size  Location     Type
  1019 ;;  ret             1   11[COMRAM] unsigned char 
  1020 ;; Return value:  Size  Location     Type
  1021 ;;                  1    wreg      unsigned char 
  1022 ;; Registers used:
  1023 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1024 ;; Tracked objects:
  1025 ;;		On entry : 0/0
  1026 ;;		On exit  : 0/0
  1027 ;;		Unchanged: 0/0
  1028 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1029 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1030 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1031 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1032 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1033 ;;Total ram usage:        3 bytes
  1034 ;; Hardware stack levels used: 1
  1035 ;; Hardware stack levels required when called: 1
  1036 ;; This function calls:
  1037 ;;		_gpio_pin_direction_initialize
  1038 ;; This function is called by:
  1039 ;;		_application_intialize
  1040 ;; This function uses a non-reentrant model
  1041 ;;
  1042                           
  1043                           	psect	text6
  1044   00FB68                     __ptext6:
  1045                           	callstack 0
  1046   00FB68                     _dc_motor_initialize:
  1047                           	callstack 28
  1048   00FB68                     
  1049                           ;ECU_layer/DC_Motor/ecu_dc_motor.c: 18:     Std_ReturnType ret = (Std_ReturnType)0x01;
  1050   00FB68  0E01               	movlw	1
  1051   00FB6A  6E36               	movwf	dc_motor_initialize@ret^0,c
  1052   00FB6C                     
  1053                           ;ECU_layer/DC_Motor/ecu_dc_motor.c: 19:     if(((void*)0) == _dc_motor){
  1054   00FB6C  5034               	movf	dc_motor_initialize@_dc_motor^0,w,c
  1055   00FB6E  1035               	iorwf	(dc_motor_initialize@_dc_motor+1)^0,w,c
  1056   00FB70  A4D8               	btfss	status,2,c
  1057   00FB72  EFBD  F07D         	goto	u791
  1058   00FB76  EFBF  F07D         	goto	u790
  1059   00FB7A                     u791:
  1060   00FB7A  EFC3  F07D         	goto	l1515
  1061   00FB7E                     u790:
  1062   00FB7E                     
  1063                           ;ECU_layer/DC_Motor/ecu_dc_motor.c: 20:         ret = (Std_ReturnType)0x00;
  1064   00FB7E  0E00               	movlw	0
  1065   00FB80  6E36               	movwf	dc_motor_initialize@ret^0,c
  1066                           
  1067                           ;ECU_layer/DC_Motor/ecu_dc_motor.c: 21:     }
  1068   00FB82  EFD1  F07D         	goto	l1517
  1069   00FB86                     l1515:
  1070                           
  1071                           ;ECU_layer/DC_Motor/ecu_dc_motor.c: 23:         gpio_pin_direction_initialize(&(_dc_moto
      +                          r->dc_motor_pin[0x00U]));
  1072   00FB86  C034  F02B         	movff	dc_motor_initialize@_dc_motor,gpio_pin_direction_initialize@_pin_config
  1073   00FB8A  C035  F02C         	movff	dc_motor_initialize@_dc_motor+1,gpio_pin_direction_initialize@_pin_config+1
  1074   00FB8E  EC5E  F07F         	call	_gpio_pin_direction_initialize	;wreg free
  1075                           
  1076                           ;ECU_layer/DC_Motor/ecu_dc_motor.c: 24:         gpio_pin_direction_initialize(&(_dc_moto
      +                          r->dc_motor_pin[0x01U]));
  1077   00FB92  0E01               	movlw	1
  1078   00FB94  2434               	addwf	dc_motor_initialize@_dc_motor^0,w,c
  1079   00FB96  6E2B               	movwf	gpio_pin_direction_initialize@_pin_config^0,c
  1080   00FB98  0E00               	movlw	0
  1081   00FB9A  2035               	addwfc	(dc_motor_initialize@_dc_motor+1)^0,w,c
  1082   00FB9C  6E2C               	movwf	(gpio_pin_direction_initialize@_pin_config+1)^0,c
  1083   00FB9E  EC5E  F07F         	call	_gpio_pin_direction_initialize	;wreg free
  1084   00FBA2                     l1517:
  1085                           
  1086                           ;ECU_layer/DC_Motor/ecu_dc_motor.c: 26:     return ret;
  1087   00FBA2  5036               	movf	dc_motor_initialize@ret^0,w,c
  1088   00FBA4  0012               	return		;funcret
  1089   00FBA6                     __end_of_dc_motor_initialize:
  1090                           	callstack 0
  1091                           
  1092 ;; *************** function _gpio_pin_direction_initialize *****************
  1093 ;; Defined at:
  1094 ;;		line 47 in file "MCAL_layer/GPIO/hal_gpio.c"
  1095 ;; Parameters:    Size  Location     Type
  1096 ;;  _pin_config     2    0[COMRAM] PTR const struct .
  1097 ;;		 -> seg_2_enable(1), seg_1_enable(1), seg1.segment_pins(4), seg1(5), 
  1098 ;;		 -> dc_motor_1.dc_motor_pin(2), dc_motor_1(2), relay_initialize@pin_0bj(1), led_initialize@pin_0bj(1), 
  1099 ;; Auto vars:     Size  Location     Type
  1100 ;;  ret             1    8[COMRAM] unsigned char 
  1101 ;; Return value:  Size  Location     Type
  1102 ;;                  1    wreg      unsigned char 
  1103 ;; Registers used:
  1104 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  1105 ;; Tracked objects:
  1106 ;;		On entry : 0/0
  1107 ;;		On exit  : 0/0
  1108 ;;		Unchanged: 0/0
  1109 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1110 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1111 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1112 ;;      Temps:          6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1113 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1114 ;;Total ram usage:        9 bytes
  1115 ;; Hardware stack levels used: 1
  1116 ;; This function calls:
  1117 ;;		Nothing
  1118 ;; This function is called by:
  1119 ;;		_dc_motor_initialize
  1120 ;;		_gpio_pin_initialize
  1121 ;;		_button_initialize
  1122 ;; This function uses a non-reentrant model
  1123 ;;
  1124                           
  1125                           	psect	text7
  1126   00FEBC                     __ptext7:
  1127                           	callstack 0
  1128   00FEBC                     _gpio_pin_direction_initialize:
  1129                           	callstack 27
  1130   00FEBC                     
  1131                           ;MCAL_layer/GPIO/hal_gpio.c: 48:     Std_ReturnType ret= (Std_ReturnType)0x01 ;
  1132   00FEBC  0E01               	movlw	1
  1133   00FEBE  6E33               	movwf	gpio_pin_direction_initialize@ret^0,c
  1134   00FEC0                     
  1135                           ;MCAL_layer/GPIO/hal_gpio.c: 49:     if(((void*)0) ==_pin_config || _pin_config ->pin > 
      +                          (8 -1) ) {
  1136   00FEC0  502B               	movf	gpio_pin_direction_initialize@_pin_config^0,w,c
  1137   00FEC2  102C               	iorwf	(gpio_pin_direction_initialize@_pin_config+1)^0,w,c
  1138   00FEC4  B4D8               	btfsc	status,2,c
  1139   00FEC6  EF67  F07F         	goto	u671
  1140   00FECA  EF69  F07F         	goto	u670
  1141   00FECE                     u671:
  1142   00FECE  EF7A  F07F         	goto	l1453
  1143   00FED2                     u670:
  1144   00FED2  C02B  FFD9         	movff	gpio_pin_direction_initialize@_pin_config,fsr2l
  1145   00FED6  C02C  FFDA         	movff	gpio_pin_direction_initialize@_pin_config+1,fsr2h
  1146   00FEDA  30DF               	rrcf	223,w,c
  1147   00FEDC  32E8               	rrcf	wreg,f,c
  1148   00FEDE  32E8               	rrcf	wreg,f,c
  1149   00FEE0  0B07               	andlw	7
  1150   00FEE2  6E2D               	movwf	??_gpio_pin_direction_initialize^0,c
  1151   00FEE4  0E07               	movlw	7
  1152   00FEE6  642D               	cpfsgt	??_gpio_pin_direction_initialize^0,c
  1153   00FEE8  EF78  F07F         	goto	u681
  1154   00FEEC  EF7A  F07F         	goto	u680
  1155   00FEF0                     u681:
  1156   00FEF0  EFDD  F07F         	goto	l1461
  1157   00FEF4                     u680:
  1158   00FEF4                     l1453:
  1159                           
  1160                           ;MCAL_layer/GPIO/hal_gpio.c: 50:         ret= (Std_ReturnType)0x00 ;
  1161   00FEF4  0E00               	movlw	0
  1162   00FEF6  6E33               	movwf	gpio_pin_direction_initialize@ret^0,c
  1163                           
  1164                           ;MCAL_layer/GPIO/hal_gpio.c: 51:     }
  1165   00FEF8  EFFE  F07F         	goto	l1463
  1166   00FEFC                     l1455:
  1167                           
  1168                           ;MCAL_layer/GPIO/hal_gpio.c: 55:             ( *tris_registers[_pin_config->port] &= ~((
      +                          uint8)1<<_pin_config->pin) ) ;
  1169   00FEFC  C02B  FFD9         	movff	gpio_pin_direction_initialize@_pin_config,fsr2l
  1170   00FF00  C02C  FFDA         	movff	gpio_pin_direction_initialize@_pin_config+1,fsr2h
  1171   00FF04  30DF               	rrcf	223,w,c
  1172   00FF06  32E8               	rrcf	wreg,f,c
  1173   00FF08  32E8               	rrcf	wreg,f,c
  1174   00FF0A  0B07               	andlw	7
  1175   00FF0C  6E2D               	movwf	??_gpio_pin_direction_initialize^0,c
  1176   00FF0E  0E01               	movlw	1
  1177   00FF10  6E2E               	movwf	(??_gpio_pin_direction_initialize+1)^0,c
  1178   00FF12  2A2D               	incf	??_gpio_pin_direction_initialize^0,f,c
  1179   00FF14  EF8E  F07F         	goto	u694
  1180   00FF18                     u695:
  1181   00FF18  90D8               	bcf	status,0,c
  1182   00FF1A  362E               	rlcf	(??_gpio_pin_direction_initialize+1)^0,f,c
  1183   00FF1C                     u694:
  1184   00FF1C  2E2D               	decfsz	??_gpio_pin_direction_initialize^0,f,c
  1185   00FF1E  EF8C  F07F         	goto	u695
  1186   00FF22  502E               	movf	(??_gpio_pin_direction_initialize+1)^0,w,c
  1187   00FF24  0AFF               	xorlw	255
  1188   00FF26  6E2F               	movwf	(??_gpio_pin_direction_initialize+2)^0,c
  1189   00FF28  C02B  FFD9         	movff	gpio_pin_direction_initialize@_pin_config,fsr2l
  1190   00FF2C  C02C  FFDA         	movff	gpio_pin_direction_initialize@_pin_config+1,fsr2h
  1191   00FF30  50DF               	movf	223,w,c
  1192   00FF32  0B07               	andlw	7
  1193   00FF34  6E30               	movwf	(??_gpio_pin_direction_initialize+3)^0,c
  1194   00FF36  5030               	movf	(??_gpio_pin_direction_initialize+3)^0,w,c
  1195   00FF38  0D02               	mullw	2
  1196   00FF3A  0E15               	movlw	low _tris_registers
  1197   00FF3C  24F3               	addwf	243,w,c
  1198   00FF3E  6ED9               	movwf	fsr2l,c
  1199   00FF40  0E00               	movlw	high _tris_registers
  1200   00FF42  20F4               	addwfc	prodh,w,c
  1201   00FF44  6EDA               	movwf	fsr2h,c
  1202   00FF46  CFDE F031          	movff	postinc2,??_gpio_pin_direction_initialize+4
  1203   00FF4A  CFDD F032          	movff	postdec2,??_gpio_pin_direction_initialize+5
  1204   00FF4E  C031  FFD9         	movff	??_gpio_pin_direction_initialize+4,fsr2l
  1205   00FF52  C032  FFDA         	movff	??_gpio_pin_direction_initialize+5,fsr2h
  1206   00FF56  502F               	movf	(??_gpio_pin_direction_initialize+2)^0,w,c
  1207   00FF58  16DF               	andwf	indf2,f,c
  1208                           
  1209                           ;MCAL_layer/GPIO/hal_gpio.c: 56:             break;
  1210   00FF5A  EFFE  F07F         	goto	l1463
  1211   00FF5E                     l1457:
  1212                           
  1213                           ;MCAL_layer/GPIO/hal_gpio.c: 58:             ( *tris_registers[_pin_config->port] |= ((u
      +                          int8)1<<_pin_config->pin) );
  1214   00FF5E  C02B  FFD9         	movff	gpio_pin_direction_initialize@_pin_config,fsr2l
  1215   00FF62  C02C  FFDA         	movff	gpio_pin_direction_initialize@_pin_config+1,fsr2h
  1216   00FF66  30DF               	rrcf	223,w,c
  1217   00FF68  32E8               	rrcf	wreg,f,c
  1218   00FF6A  32E8               	rrcf	wreg,f,c
  1219   00FF6C  0B07               	andlw	7
  1220   00FF6E  6E2D               	movwf	??_gpio_pin_direction_initialize^0,c
  1221   00FF70  0E01               	movlw	1
  1222   00FF72  6E2E               	movwf	(??_gpio_pin_direction_initialize+1)^0,c
  1223   00FF74  2A2D               	incf	??_gpio_pin_direction_initialize^0,f,c
  1224   00FF76  EFBF  F07F         	goto	u704
  1225   00FF7A                     u705:
  1226   00FF7A  90D8               	bcf	status,0,c
  1227   00FF7C  362E               	rlcf	(??_gpio_pin_direction_initialize+1)^0,f,c
  1228   00FF7E                     u704:
  1229   00FF7E  2E2D               	decfsz	??_gpio_pin_direction_initialize^0,f,c
  1230   00FF80  EFBD  F07F         	goto	u705
  1231   00FF84  C02B  FFD9         	movff	gpio_pin_direction_initialize@_pin_config,fsr2l
  1232   00FF88  C02C  FFDA         	movff	gpio_pin_direction_initialize@_pin_config+1,fsr2h
  1233   00FF8C  50DF               	movf	223,w,c
  1234   00FF8E  0B07               	andlw	7
  1235   00FF90  6E2F               	movwf	(??_gpio_pin_direction_initialize+2)^0,c
  1236   00FF92  502F               	movf	(??_gpio_pin_direction_initialize+2)^0,w,c
  1237   00FF94  0D02               	mullw	2
  1238   00FF96  0E15               	movlw	low _tris_registers
  1239   00FF98  24F3               	addwf	243,w,c
  1240   00FF9A  6ED9               	movwf	fsr2l,c
  1241   00FF9C  0E00               	movlw	high _tris_registers
  1242   00FF9E  20F4               	addwfc	prodh,w,c
  1243   00FFA0  6EDA               	movwf	fsr2h,c
  1244   00FFA2  CFDE F030          	movff	postinc2,??_gpio_pin_direction_initialize+3
  1245   00FFA6  CFDD F031          	movff	postdec2,??_gpio_pin_direction_initialize+4
  1246   00FFAA  C030  FFD9         	movff	??_gpio_pin_direction_initialize+3,fsr2l
  1247   00FFAE  C031  FFDA         	movff	??_gpio_pin_direction_initialize+4,fsr2h
  1248   00FFB2  502E               	movf	(??_gpio_pin_direction_initialize+1)^0,w,c
  1249   00FFB4  12DF               	iorwf	indf2,f,c
  1250                           
  1251                           ;MCAL_layer/GPIO/hal_gpio.c: 59:             break;
  1252   00FFB6  EFFE  F07F         	goto	l1463
  1253   00FFBA                     l1461:
  1254   00FFBA  C02B  FFD9         	movff	gpio_pin_direction_initialize@_pin_config,fsr2l
  1255   00FFBE  C02C  FFDA         	movff	gpio_pin_direction_initialize@_pin_config+1,fsr2h
  1256   00FFC2  BCDF               	btfsc	indf2,6,c
  1257   00FFC4  EFE6  F07F         	goto	u711
  1258   00FFC8  EFE9  F07F         	goto	u710
  1259   00FFCC                     u711:
  1260   00FFCC  0E01               	movlw	1
  1261   00FFCE  EFEA  F07F         	goto	u720
  1262   00FFD2                     u710:
  1263   00FFD2  0E00               	movlw	0
  1264   00FFD4                     u720:
  1265   00FFD4  6E2D               	movwf	??_gpio_pin_direction_initialize^0,c
  1266   00FFD6  6A2E               	clrf	(??_gpio_pin_direction_initialize+1)^0,c
  1267                           
  1268                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1269                           ; Switch size 1, requested type "simple"
  1270                           ; Number of cases is 1, Range of values is 0 to 0
  1271                           ; switch strategies available:
  1272                           ; Name         Instructions Cycles
  1273                           ; simple_byte            4     3 (average)
  1274                           ;	Chosen strategy is simple_byte
  1275   00FFD8  502E               	movf	(??_gpio_pin_direction_initialize+1)^0,w,c
  1276   00FFDA  0A00               	xorlw	0	; case 0
  1277   00FFDC  B4D8               	btfsc	status,2,c
  1278   00FFDE  EFF3  F07F         	goto	l1729
  1279   00FFE2  EF7A  F07F         	goto	l1453
  1280   00FFE6                     l1729:
  1281                           
  1282                           ; Switch size 1, requested type "simple"
  1283                           ; Number of cases is 2, Range of values is 0 to 1
  1284                           ; switch strategies available:
  1285                           ; Name         Instructions Cycles
  1286                           ; simple_byte            7     4 (average)
  1287                           ;	Chosen strategy is simple_byte
  1288   00FFE6  502D               	movf	??_gpio_pin_direction_initialize^0,w,c
  1289   00FFE8  0A00               	xorlw	0	; case 0
  1290   00FFEA  B4D8               	btfsc	status,2,c
  1291   00FFEC  EF7E  F07F         	goto	l1455
  1292   00FFF0  0A01               	xorlw	1	; case 1
  1293   00FFF2  B4D8               	btfsc	status,2,c
  1294   00FFF4  EFAF  F07F         	goto	l1457
  1295   00FFF8  EF7A  F07F         	goto	l1453
  1296   00FFFC                     l1463:
  1297                           
  1298                           ;MCAL_layer/GPIO/hal_gpio.c: 63:    return ret ;
  1299   00FFFC  5033               	movf	gpio_pin_direction_initialize@ret^0,w,c
  1300   00FFFE  0012               	return		;funcret
  1301   010000                     __end_of_gpio_pin_direction_initialize:
  1302                           	callstack 0
  1303   000000                     
  1304                           	psect	rparam
  1305   000000                     
  1306                           	psect	idloc
  1307                           
  1308                           ;Config register IDLOC0 @ 0x200000
  1309                           ;	unspecified, using default values
  1310   200000                     	org	2097152
  1311   200000  FF                 	db	255
  1312                           
  1313                           ;Config register IDLOC1 @ 0x200001
  1314                           ;	unspecified, using default values
  1315   200001                     	org	2097153
  1316   200001  FF                 	db	255
  1317                           
  1318                           ;Config register IDLOC2 @ 0x200002
  1319                           ;	unspecified, using default values
  1320   200002                     	org	2097154
  1321   200002  FF                 	db	255
  1322                           
  1323                           ;Config register IDLOC3 @ 0x200003
  1324                           ;	unspecified, using default values
  1325   200003                     	org	2097155
  1326   200003  FF                 	db	255
  1327                           
  1328                           ;Config register IDLOC4 @ 0x200004
  1329                           ;	unspecified, using default values
  1330   200004                     	org	2097156
  1331   200004  FF                 	db	255
  1332                           
  1333                           ;Config register IDLOC5 @ 0x200005
  1334                           ;	unspecified, using default values
  1335   200005                     	org	2097157
  1336   200005  FF                 	db	255
  1337                           
  1338                           ;Config register IDLOC6 @ 0x200006
  1339                           ;	unspecified, using default values
  1340   200006                     	org	2097158
  1341   200006  FF                 	db	255
  1342                           
  1343                           ;Config register IDLOC7 @ 0x200007
  1344                           ;	unspecified, using default values
  1345   200007                     	org	2097159
  1346   200007  FF                 	db	255
  1347                           
  1348                           	psect	config
  1349                           
  1350                           ; Padding undefined space
  1351   300000                     	org	3145728
  1352   300000  FF                 	db	255
  1353                           
  1354                           ;Config register CONFIG1H @ 0x300001
  1355                           ;	Oscillator Selection bits
  1356                           ;	OSC = HS, HS oscillator
  1357                           ;	Fail-Safe Clock Monitor Enable bit
  1358                           ;	FCMEN = OFF, Fail-Safe Clock Monitor disabled
  1359                           ;	Internal/External Oscillator Switchover bit
  1360                           ;	IESO = OFF, Oscillator Switchover mode disabled
  1361   300001                     	org	3145729
  1362   300001  02                 	db	2
  1363                           
  1364                           ;Config register CONFIG2L @ 0x300002
  1365                           ;	Power-up Timer Enable bit
  1366                           ;	PWRT = OFF, PWRT disabled
  1367                           ;	Brown-out Reset Enable bits
  1368                           ;	BOREN = SBORDIS, Brown-out Reset enabled in hardware only (SBOREN is disabled)
  1369                           ;	Brown Out Reset Voltage bits
  1370                           ;	BORV = 1, 
  1371   300002                     	org	3145730
  1372   300002  0F                 	db	15
  1373                           
  1374                           ;Config register CONFIG2H @ 0x300003
  1375                           ;	Watchdog Timer Enable bit
  1376                           ;	WDT = OFF, WDT disabled (control is placed on the SWDTEN bit)
  1377                           ;	Watchdog Timer Postscale Select bits
  1378                           ;	WDTPS = 32768, 1:32768
  1379   300003                     	org	3145731
  1380   300003  1E                 	db	30
  1381                           
  1382                           ; Padding undefined space
  1383   300004                     	org	3145732
  1384   300004  FF                 	db	255
  1385                           
  1386                           ;Config register CONFIG3H @ 0x300005
  1387                           ;	CCP2 MUX bit
  1388                           ;	CCP2MX = PORTC, CCP2 input/output is multiplexed with RC1
  1389                           ;	PORTB A/D Enable bit
  1390                           ;	PBADEN = OFF, PORTB<4:0> pins are configured as digital I/O on Reset
  1391                           ;	Low-Power Timer1 Oscillator Enable bit
  1392                           ;	LPT1OSC = OFF, Timer1 configured for higher power operation
  1393                           ;	MCLR Pin Enable bit
  1394                           ;	MCLRE = ON, MCLR pin enabled; RE3 input pin disabled
  1395   300005                     	org	3145733
  1396   300005  81                 	db	129
  1397                           
  1398                           ;Config register CONFIG4L @ 0x300006
  1399                           ;	Stack Full/Underflow Reset Enable bit
  1400                           ;	STVREN = ON, Stack full/underflow will cause Reset
  1401                           ;	Single-Supply ICSP Enable bit
  1402                           ;	LVP = OFF, Single-Supply ICSP disabled
  1403                           ;	Extended Instruction Set Enable bit
  1404                           ;	XINST = OFF, Instruction set extension and Indexed Addressing mode disabled (Legacy mo
      +                          de)
  1405                           ;	Background Debugger Enable bit
  1406                           ;	DEBUG = 0x1, unprogrammed default
  1407   300006                     	org	3145734
  1408   300006  81                 	db	129
  1409                           
  1410                           ; Padding undefined space
  1411   300007                     	org	3145735
  1412   300007  FF                 	db	255
  1413                           
  1414                           ;Config register CONFIG5L @ 0x300008
  1415                           ;	Code Protection bit
  1416                           ;	CP0 = OFF, Block 0 (000800-003FFFh) not code-protected
  1417                           ;	Code Protection bit
  1418                           ;	CP1 = OFF, Block 1 (004000-007FFFh) not code-protected
  1419                           ;	Code Protection bit
  1420                           ;	CP2 = OFF, Block 2 (008000-00BFFFh) not code-protected
  1421                           ;	Code Protection bit
  1422                           ;	CP3 = OFF, Block 3 (00C000-00FFFFh) not code-protected
  1423   300008                     	org	3145736
  1424   300008  0F                 	db	15
  1425                           
  1426                           ;Config register CONFIG5H @ 0x300009
  1427                           ;	Boot Block Code Protection bit
  1428                           ;	CPB = OFF, Boot block (000000-0007FFh) not code-protected
  1429                           ;	Data EEPROM Code Protection bit
  1430                           ;	CPD = OFF, Data EEPROM not code-protected
  1431   300009                     	org	3145737
  1432   300009  C0                 	db	192
  1433                           
  1434                           ;Config register CONFIG6L @ 0x30000A
  1435                           ;	Write Protection bit
  1436                           ;	WRT0 = OFF, Block 0 (000800-003FFFh) not write-protected
  1437                           ;	Write Protection bit
  1438                           ;	WRT1 = OFF, Block 1 (004000-007FFFh) not write-protected
  1439                           ;	Write Protection bit
  1440                           ;	WRT2 = OFF, Block 2 (008000-00BFFFh) not write-protected
  1441                           ;	Write Protection bit
  1442                           ;	WRT3 = OFF, Block 3 (00C000-00FFFFh) not write-protected
  1443   30000A                     	org	3145738
  1444   30000A  0F                 	db	15
  1445                           
  1446                           ;Config register CONFIG6H @ 0x30000B
  1447                           ;	Configuration Register Write Protection bit
  1448                           ;	WRTC = OFF, Configuration registers (300000-3000FFh) not write-protected
  1449                           ;	Boot Block Write Protection bit
  1450                           ;	WRTB = OFF, Boot Block (000000-0007FFh) not write-protected
  1451                           ;	Data EEPROM Write Protection bit
  1452                           ;	WRTD = OFF, Data EEPROM not write-protected
  1453   30000B                     	org	3145739
  1454   30000B  E0                 	db	224
  1455                           
  1456                           ;Config register CONFIG7L @ 0x30000C
  1457                           ;	Table Read Protection bit
  1458                           ;	EBTR0 = OFF, Block 0 (000800-003FFFh) not protected from table reads executed in other
      +                           blocks
  1459                           ;	Table Read Protection bit
  1460                           ;	EBTR1 = OFF, Block 1 (004000-007FFFh) not protected from table reads executed in other
      +                           blocks
  1461                           ;	Table Read Protection bit
  1462                           ;	EBTR2 = OFF, Block 2 (008000-00BFFFh) not protected from table reads executed in other
      +                           blocks
  1463                           ;	Table Read Protection bit
  1464                           ;	EBTR3 = OFF, Block 3 (00C000-00FFFFh) not protected from table reads executed in other
      +                           blocks
  1465   30000C                     	org	3145740
  1466   30000C  0F                 	db	15
  1467                           
  1468                           ;Config register CONFIG7H @ 0x30000D
  1469                           ;	Boot Block Table Read Protection bit
  1470                           ;	EBTRB = OFF, Boot Block (000000-0007FFh) not protected from table reads executed in ot
      +                          her blocks
  1471   30000D                     	org	3145741
  1472   30000D  40                 	db	64
  1473                           tosu	equ	0xFFF
  1474                           tosh	equ	0xFFE
  1475                           tosl	equ	0xFFD
  1476                           stkptr	equ	0xFFC
  1477                           pclatu	equ	0xFFB
  1478                           pclath	equ	0xFFA
  1479                           pcl	equ	0xFF9
  1480                           tblptru	equ	0xFF8
  1481                           tblptrh	equ	0xFF7
  1482                           tblptrl	equ	0xFF6
  1483                           tablat	equ	0xFF5
  1484                           prodh	equ	0xFF4
  1485                           prodl	equ	0xFF3
  1486                           indf0	equ	0xFEF
  1487                           postinc0	equ	0xFEE
  1488                           postdec0	equ	0xFED
  1489                           preinc0	equ	0xFEC
  1490                           plusw0	equ	0xFEB
  1491                           fsr0h	equ	0xFEA
  1492                           fsr0l	equ	0xFE9
  1493                           wreg	equ	0xFE8
  1494                           indf1	equ	0xFE7
  1495                           postinc1	equ	0xFE6
  1496                           postdec1	equ	0xFE5
  1497                           preinc1	equ	0xFE4
  1498                           plusw1	equ	0xFE3
  1499                           fsr1h	equ	0xFE2
  1500                           fsr1l	equ	0xFE1
  1501                           bsr	equ	0xFE0
  1502                           indf2	equ	0xFDF
  1503                           postinc2	equ	0xFDE
  1504                           postdec2	equ	0xFDD
  1505                           preinc2	equ	0xFDC
  1506                           plusw2	equ	0xFDB
  1507                           fsr2h	equ	0xFDA
  1508                           fsr2l	equ	0xFD9
  1509                           status	equ	0xFD8

Data Sizes:
    Strings     0
    Constant    0
    Data        42
    BSS         7
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM          127     18      67
    BANK0           128      0       0
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14          256      0       0
    BANK15          128      0       0

Pointer List with Targets:

    seven_segment_write_number@seg	PTR const struct . size(2) Largest target is 5
		 -> seg1(COMRAM[5]), 

    seven_segment_initialize@seg	PTR const struct . size(2) Largest target is 5
		 -> seg1(COMRAM[5]), 

    gpio_pin_write_logic@_pin_config	PTR const struct . size(2) Largest target is 5
		 -> seg_2_enable(COMRAM[1]), seg_1_enable(COMRAM[1]), seg1.segment_pins(COMRAM[4]), seg1(COMRAM[5]), 
		 -> relay_off@pin_0bj(COMRAM[1]), relay_on@pin_0bj(COMRAM[1]), relay_initialize@pin_0bj(COMRAM[1]), led_turn_off@pin_0bj(COMRAM[1]), 
		 -> led_turn_on@pin_0bj(COMRAM[1]), led_initialize@pin_0bj(COMRAM[1]), 

    gpio_pin_direction_initialize@_pin_config	PTR const struct . size(2) Largest target is 5
		 -> seg_2_enable(COMRAM[1]), seg_1_enable(COMRAM[1]), seg1.segment_pins(COMRAM[4]), seg1(COMRAM[5]), 
		 -> dc_motor_1.dc_motor_pin(COMRAM[2]), dc_motor_1(COMRAM[2]), relay_initialize@pin_0bj(COMRAM[1]), led_initialize@pin_0bj(COMRAM[1]), 

    gpio_pin_initialize@_pin_config	PTR const struct . size(2) Largest target is 5
		 -> seg_2_enable(COMRAM[1]), seg_1_enable(COMRAM[1]), seg1.segment_pins(COMRAM[4]), seg1(COMRAM[5]), 
		 -> relay_initialize@pin_0bj(COMRAM[1]), led_initialize@pin_0bj(COMRAM[1]), 

    port_registers	PTR volatile unsigned char [5] size(2) Largest target is 1
		 -> PORTE(BITBIGSFRll[1]), PORTD(BITBIGSFRll[1]), PORTC(BITBIGSFRll[1]), PORTB(BITBIGSFRll[1]), 
		 -> PORTA(BITBIGSFRll[1]), 

    lat_registers	PTR volatile unsigned char [5] size(2) Largest target is 1
		 -> LATE(BITBIGSFRlh[1]), LATD(BITBIGSFRlh[1]), LATC(BITBIGSFRlh[1]), LATB(BITBIGSFRlh[1]), 
		 -> LATA(BITBIGSFRll[1]), 

    tris_registers	PTR volatile unsigned char [5] size(2) Largest target is 1
		 -> TRISE(BITBIGSFRh[1]), TRISD(BITBIGSFRh[1]), TRISC(BITBIGSFRh[1]), TRISB(BITBIGSFRh[1]), 
		 -> TRISA(BITBIGSFRll[1]), 

    dc_motor_initialize@_dc_motor	PTR const struct . size(2) Largest target is 2
		 -> dc_motor_1(COMRAM[2]), 


Critical Paths under _main in COMRAM

    _seven_segment_write_number->_gpio_pin_write_logic
    _application_intialize->_seven_segment_initialize
    _seven_segment_initialize->_gpio_pin_initialize
    _gpio_pin_initialize->_gpio_pin_write_logic
    _dc_motor_initialize->_gpio_pin_direction_initialize

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _main in BANK15

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 2     2      0   16149
                                             17 COMRAM     1     1      0
              _application_intialize
               _gpio_pin_write_logic
         _seven_segment_write_number
 ---------------------------------------------------------------------------------
 (1) _seven_segment_write_number                           4     1      3    3619
                                             10 COMRAM     4     1      3
               _gpio_pin_write_logic
 ---------------------------------------------------------------------------------
 (1) _application_intialize                                1     1      0    9456
                _dc_motor_initialize
                _gpio_pin_initialize
           _seven_segment_initialize
 ---------------------------------------------------------------------------------
 (2) _seven_segment_initialize                             3     1      2    4508
                                             14 COMRAM     3     1      2
                _gpio_pin_initialize
 ---------------------------------------------------------------------------------
 (3) _gpio_pin_initialize                                  4     2      2    4294
                                             10 COMRAM     4     2      2
      _gpio_pin_direction_initialize
               _gpio_pin_write_logic
 ---------------------------------------------------------------------------------
 (2) _gpio_pin_write_logic                                10     7      3    3067
                                              0 COMRAM    10     7      3
 ---------------------------------------------------------------------------------
 (2) _dc_motor_initialize                                  3     1      2     649
                                              9 COMRAM     3     1      2
      _gpio_pin_direction_initialize
 ---------------------------------------------------------------------------------
 (4) _gpio_pin_direction_initialize                        9     7      2     483
                                              0 COMRAM     9     7      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _application_intialize
     _dc_motor_initialize
       _gpio_pin_direction_initialize
     _gpio_pin_initialize
       _gpio_pin_direction_initialize
       _gpio_pin_write_logic
     _seven_segment_initialize
       _gpio_pin_initialize
   _gpio_pin_write_logic
   _seven_segment_write_number
     _gpio_pin_write_logic

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             F7F      0       0      40        0.0%
EEDATA             400      0       0       0        0.0%
BITBANK14          100      0       0      32        0.0%
BANK14             100      0       0      33        0.0%
BITBANK13          100      0       0      30        0.0%
BANK13             100      0       0      31        0.0%
BITBANK12          100      0       0      28        0.0%
BANK12             100      0       0      29        0.0%
BITBANK11          100      0       0      26        0.0%
BANK11             100      0       0      27        0.0%
BITBANK10          100      0       0      24        0.0%
BANK10             100      0       0      25        0.0%
BITBANK9           100      0       0      22        0.0%
BANK9              100      0       0      23        0.0%
BITBANK8           100      0       0      20        0.0%
BANK8              100      0       0      21        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK15           80      0       0      34        0.0%
BANK15              80      0       0      35        0.0%
BITBANK0            80      0       0       4        0.0%
BANK0               80      0       0       5        0.0%
BITCOMRAM           7F      0       0       0        0.0%
COMRAM              7F     12      43       1       52.8%
BITBIGSFRh          69      0       0      36        0.0%
BITBIGSFRlh          4      0       0      37        0.0%
BITBIGSFRll          4      0       0      38        0.0%
BIGSFR               0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      43      39        0.0%
DATA                 0      0      43       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.40 build 20220703182018 
Symbol Table                                                                                   Tue Mar 12 19:15:23 2024

                                      l33 FBA4                                       l154 FC72  
                                     l253 FB30                                       l166 FFFE  
                                     l272 FC06                                       l185 FEBA  
                                     l277 FD8E                                       u710 FFD2  
                                     u711 FFCC                                       u720 FFD4  
                                     u704 FF7E                                       u800 FBB8  
                                     u705 FF7A                                       u801 FBB4  
                                     u730 FDA6                                       u810 FD0E  
                                     u731 FDA2                                       u811 FD0A  
                                     u740 FDC8                                       u820 FD1E  
                                     u741 FDC4                                       u821 FD1A  
                                     u670 FED2                                       u671 FECE  
                                     u680 FEF4                                       u681 FEF0  
                                     u754 FDF0                                       u770 FC1A  
                                     u755 FDEC                                       u771 FC16  
                                     u764 FE52                                       u780 FC3C  
                                     u765 FE4E                                       u781 FC38  
                                     u694 FF1C                                       u790 FB7E  
                                     u695 FF18                                       u791 FB7A  
                                     u997 FC9E                                       prod 000FF3  
                     led_initialize@F2878 0043                                       wreg 000FE8  
                   relay_initialize@F2872 003F               ?_seven_segment_write_number 0035  
                                    l1501 FC3C                                      l1511 FB6C  
                                    l1503 FC44                                      l1513 FB7E  
                                    l1505 FC70                                      l1521 FBA6  
                                    l1451 FED2                                      l1515 FB86  
                                    l1523 FBA6                                      l1461 FFBA  
                                    l1453 FEF4                                      l1517 FBA2  
                                    l1509 FB68                                      l1525 FBB8  
                                    l1541 FB24                                      l1533 FB00  
                                    l1701 FC74                                      l1455 FEFC  
                                    l1463 FFFC                                      l1447 FEBC  
                                    l1471 FD90                                      l1527 FBC0  
                                    l1535 FB00                                      l1551 FD1E  
                                    l1711 FCB6                                      l1703 FC78  
                                    l1457 FF5E                                      l1449 FEC0  
                                    l1481 FE32                                      l1473 FD94  
                                    l1529 FC04                                      l1537 FB0C  
                                    l1553 FD26                                      l1545 FCFC  
                                    l1713 FCC6                                      l1705 FC88  
                                    l1475 FDA6                                      l1539 FB18  
                                    l1555 FD8C                                      l1547 FCFC  
                                    l1715 FCD6                                      l1707 FC98  
                                    l1485 FE8E                                      l1477 FDC8  
                                    l1549 FD0E                                      l1717 FCE4  
                                    l1709 FCA6                                      l1727 FEA2  
                                    l1479 FDD0                                      l1487 FEB8  
                                    l1495 FC08                                      l1729 FFE6  
                                    l1497 FC08                                      l1499 FC1A  
                                    l1699 FC74                                      u1007 FCDC  
                                    _LATA 000F89                                      _LATB 000F8A  
                                    _LATC 000F8B                                      _LATD 000F8C  
                                    _LATE 000F8D                   ??_application_intialize 003C  
                                    _seg1 0022                                      _main FC74  
                                    fsr2h 000FDA                                      indf2 000FDF  
                                    fsr1l 000FE1                                      fsr2l 000FD9  
                                    prodl 000FF3                                      start 0000  
                            ___param_bank 000000                    dc_motor_initialize@ret 0036  
                    _gpio_pin_write_logic FD90                                     ?_main 002B  
                                   _PORTA 000F80                                     _PORTB 000F81  
                                   _PORTC 000F82                                     _PORTD 000F83  
                                   _PORTE 000F84                                     _TRISA 000F92  
                                   _TRISB 000F93                                     _TRISC 000F94  
                                   _TRISD 000F95                                     _TRISE 000F96  
                                   tablat 000FF5                                     status 000FD8  
          ?_gpio_pin_direction_initialize 002B                           __initialization FB32  
                            __end_of_main FCFC                     ?_gpio_pin_write_logic 002B  
                           _lat_registers 000B               __end_of_dc_motor_initialize FBA6  
                                  ??_main 003C                             __activetblptr 000002  
                        led_turn_on@F2883 0042                                    clear_0 FB58  
                                  isa$std 000001                                    _number 0021  
                            __pdataCOMRAM 0001                                    tblptrh 000FF7  
                                  tblptrl 000FF6                                    tblptru 000FF8  
                              __accesstop 0080                   __end_of__initialization FB5E  
                           ___rparam_used 000001                    ??_gpio_pin_write_logic 002E  
                          __pcstackCOMRAM 002B  gpio_pin_direction_initialize@_pin_config 002B  
                              _dc_motor_1 0027                                _dc_motor_2 001F  
           __end_of_application_intialize FB32                         led_turn_off@F2888 0041  
                _seven_segment_initialize FBA6                      led_turn_toggle@F2893 0040  
             seven_segment_initialize@seg 0039               seven_segment_initialize@ret 003B  
                          _tris_registers 0015                                   __Hparam 0000  
                                 __Lparam 0000                       _gpio_pin_initialize FC08  
                                 __pcinit FB32                                   __ramtop 1000  
                                 __ptext0 FC74                                   __ptext1 FCFC  
                                 __ptext2 FB00                                   __ptext3 FBA6  
                                 __ptext4 FC08                                   __ptext5 FD90  
                                 __ptext6 FB68                                   __ptext7 FEBC  
                           relay_on@F2877 003E           ??_gpio_pin_direction_initialize 002D  
                    ?_gpio_pin_initialize 0035                      end_of_initialization FB5E  
                           __Lmediumconst 0000                                   postdec1 000FE5  
                                 postdec2 000FDD                                   postinc0 000FEE  
                                 postinc2 000FDE                     ??_gpio_pin_initialize 0037  
                           __pidataCOMRAM FAD6                       start_initialization FB32  
            ??_seven_segment_write_number 0038     __end_of_gpio_pin_direction_initialize 0000  
           _gpio_pin_direction_initialize FEBC                ??_seven_segment_initialize 003B  
                            _seg_1_enable 002A                              _seg_2_enable 0029  
                             __pbssCOMRAM 003D                     _application_intialize FB00  
         gpio_pin_write_logic@_pin_config 002B                 gpio_pin_write_logic@logic 002D  
                     _dc_motor_initialize FB68              dc_motor_initialize@_dc_motor 0034  
        gpio_pin_direction_initialize@ret 0033        __end_of_seven_segment_write_number FD90  
              _seven_segment_write_number FCFC                    gpio_pin_initialize@ret 0038  
                    ?_dc_motor_initialize 0034                   gpio_pin_write_logic@ret 0034  
                               copy_data0 FB46                    ?_application_intialize 002B  
                                __Hrparam 0000                                  __Lrparam 0000  
        __end_of_seven_segment_initialize FC08             seven_segment_write_number@seg 0035  
           seven_segment_write_number@ret 0038               __end_of_gpio_pin_initialize FC74  
          gpio_pin_initialize@_pin_config 0035                     ??_dc_motor_initialize 0036  
                          relay_off@F2882 003D                                  isa$xinst 000000  
        seven_segment_write_number@number 0037              __end_of_gpio_pin_write_logic FEBC  
                          _port_registers 0001                 ?_seven_segment_initialize 0039  
