

Microchip MPLAB XC8 Assembler V2.40 build 20220703182018 
                                                                                               Mon Mar 04 20:05:01 2024

Microchip MPLAB XC8 C Compiler v2.40 (Free license) build 20220703182018 Og1 
     1                           	processor	18F4620
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1,noexec
     6                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     7                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     8                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     9                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    10                           	psect	text0,global,reloc=2,class=CODE,delta=1
    11                           	psect	text1,global,reloc=2,class=CODE,delta=1
    12                           	psect	text2,global,reloc=2,class=CODE,delta=1
    13                           	psect	text3,global,reloc=2,class=CODE,delta=1
    14                           	psect	text4,global,reloc=2,class=CODE,delta=1
    15                           	psect	text5,global,reloc=2,class=CODE,delta=1
    16                           	psect	text6,global,reloc=2,class=CODE,delta=1
    17                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    18                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    19                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=1,noexec
    20                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    21   000000                     
    22                           ; Version 2.40
    23                           ; Generated 17/11/2021 GMT
    24                           ; 
    25                           ; Copyright Â© 2021, Microchip Technology Inc. and its subsidiaries ("Microchip")
    26                           ; All rights reserved.
    27                           ; 
    28                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    29                           ; 
    30                           ; Redistribution and use in source and binary forms, with or without modification, are
    31                           ; permitted provided that the following conditions are met:
    32                           ; 
    33                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    34                           ;        conditions and the following disclaimer.
    35                           ; 
    36                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    37                           ;        of conditions and the following disclaimer in the documentation and/or other
    38                           ;        materials provided with the distribution. Publication is not required when
    39                           ;        this file is used in an embedded application.
    40                           ; 
    41                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    42                           ;        software without specific prior written permission.
    43                           ; 
    44                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    45                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    46                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    47                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    48                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    49                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    50                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    51                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    52                           ; 
    53                           ; 
    54                           ; Code-generator required, PIC18F4620 Definitions
    55                           ; 
    56                           ; SFR Addresses
    57   000000                     
    58                           	psect	idataCOMRAM
    59   00FC1C                     __pidataCOMRAM:
    60                           	callstack 0
    61                           
    62                           ;initializer for _port_registers
    63   00FC1C  80                 	db	128
    64   00FC1D  0F                 	db	15
    65   00FC1E  81                 	db	129
    66   00FC1F  0F                 	db	15
    67   00FC20  82                 	db	130
    68   00FC21  0F                 	db	15
    69   00FC22  83                 	db	131
    70   00FC23  0F                 	db	15
    71   00FC24  84                 	db	132
    72   00FC25  0F                 	db	15
    73                           
    74                           ;initializer for _lat_registers
    75   00FC26  89                 	db	137
    76   00FC27  0F                 	db	15
    77   00FC28  8A                 	db	138
    78   00FC29  0F                 	db	15
    79   00FC2A  8B                 	db	139
    80   00FC2B  0F                 	db	15
    81   00FC2C  8C                 	db	140
    82   00FC2D  0F                 	db	15
    83   00FC2E  8D                 	db	141
    84   00FC2F  0F                 	db	15
    85                           
    86                           ;initializer for _tris_registers
    87   00FC30  92                 	db	146
    88   00FC31  0F                 	db	15
    89   00FC32  93                 	db	147
    90   00FC33  0F                 	db	15
    91   00FC34  94                 	db	148
    92   00FC35  0F                 	db	15
    93   00FC36  95                 	db	149
    94   00FC37  0F                 	db	15
    95   00FC38  96                 	db	150
    96   00FC39  0F                 	db	15
    97                           
    98                           ;initializer for _dc_motor_2
    99   00FC3A  12                 	db	18
   100   00FC3B  1A                 	db	26
   101                           
   102                           ;initializer for _dc_motor_1
   103   00FC3C  02                 	db	2
   104   00FC3D  0A                 	db	10
   105   000000                     _PORTE	set	3972
   106   000000                     _PORTD	set	3971
   107   000000                     _PORTC	set	3970
   108   000000                     _PORTB	set	3969
   109   000000                     _PORTA	set	3968
   110   000000                     _LATA	set	3977
   111   000000                     _TRISA	set	3986
   112   000000                     _TRISE	set	3990
   113   000000                     _TRISD	set	3989
   114   000000                     _TRISC	set	3988
   115   000000                     _TRISB	set	3987
   116   000000                     _LATE	set	3981
   117   000000                     _LATD	set	3980
   118   000000                     _LATC	set	3979
   119   000000                     _LATB	set	3978
   120                           
   121                           ; #config settings
   122                           
   123                           	psect	cinit
   124   00FC3E                     __pcinit:
   125                           	callstack 0
   126   00FC3E                     start_initialization:
   127                           	callstack 0
   128   00FC3E                     __initialization:
   129                           	callstack 0
   130                           
   131                           ; Initialize objects allocated to COMRAM (34 bytes)
   132                           ; load TBLPTR registers with __pidataCOMRAM
   133   00FC3E  0E1C               	movlw	low __pidataCOMRAM
   134   00FC40  6EF6               	movwf	tblptrl,c
   135   00FC42  0EFC               	movlw	high __pidataCOMRAM
   136   00FC44  6EF7               	movwf	tblptrh,c
   137   00FC46  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
   138   00FC48  6EF8               	movwf	tblptru,c
   139   00FC4A  EE00  F001         	lfsr	0,__pdataCOMRAM
   140   00FC4E  EE10 F022          	lfsr	1,34
   141   00FC52                     copy_data0:
   142   00FC52  0009               	tblrd		*+
   143   00FC54  CFF5 FFEE          	movff	tablat,postinc0
   144   00FC58  50E5               	movf	postdec1,w,c
   145   00FC5A  50E1               	movf	fsr1l,w,c
   146   00FC5C  E1FA               	bnz	copy_data0
   147                           
   148                           ; Clear objects allocated to COMRAM (7 bytes)
   149   00FC5E  EE00  F032         	lfsr	0,__pbssCOMRAM
   150   00FC62  0E07               	movlw	7
   151   00FC64                     clear_0:
   152   00FC64  6AEE               	clrf	postinc0,c
   153   00FC66  06E8               	decf	wreg,f,c
   154   00FC68  E1FD               	bnz	clear_0
   155   00FC6A                     end_of_initialization:
   156                           	callstack 0
   157   00FC6A                     __end_of__initialization:
   158                           	callstack 0
   159   00FC6A  0E00               	movlw	low (__Lmediumconst shr (0+16))
   160   00FC6C  6EF8               	movwf	tblptru,c
   161   00FC6E  0100               	movlb	0
   162   00FC70  EF9F  F07E         	goto	_main	;jump to C main() function
   163                           
   164                           	psect	bssCOMRAM
   165   000032                     __pbssCOMRAM:
   166                           	callstack 0
   167   000032                     relay_off@F2882:
   168                           	callstack 0
   169   000032                     	ds	1
   170   000033                     relay_on@F2877:
   171                           	callstack 0
   172   000033                     	ds	1
   173   000034                     relay_initialize@F2872:
   174                           	callstack 0
   175   000034                     	ds	1
   176   000035                     led_turn_toggle@F2893:
   177                           	callstack 0
   178   000035                     	ds	1
   179   000036                     led_turn_off@F2888:
   180                           	callstack 0
   181   000036                     	ds	1
   182   000037                     led_turn_on@F2883:
   183                           	callstack 0
   184   000037                     	ds	1
   185   000038                     led_initialize@F2878:
   186                           	callstack 0
   187   000038                     	ds	1
   188                           
   189                           	psect	dataCOMRAM
   190   000001                     __pdataCOMRAM:
   191                           	callstack 0
   192   000001                     _port_registers:
   193                           	callstack 0
   194   000001                     	ds	10
   195   00000B                     _lat_registers:
   196                           	callstack 0
   197   00000B                     	ds	10
   198   000015                     _tris_registers:
   199                           	callstack 0
   200   000015                     	ds	10
   201   00001F                     _dc_motor_2:
   202                           	callstack 0
   203   00001F                     	ds	2
   204   000021                     _dc_motor_1:
   205                           	callstack 0
   206   000021                     	ds	2
   207                           
   208                           	psect	cstackCOMRAM
   209   000023                     __pcstackCOMRAM:
   210                           	callstack 0
   211   000023                     gpio_pin_direction_initialize@_pin_config:
   212                           	callstack 0
   213   000023                     gpio_pin_write_logic@_pin_config:
   214                           	callstack 0
   215                           
   216                           ; 2 bytes @ 0x0
   217   000023                     	ds	2
   218   000025                     ??_gpio_pin_direction_initialize:
   219   000025                     gpio_pin_write_logic@logic:
   220                           	callstack 0
   221                           
   222                           ; 1 bytes @ 0x2
   223   000025                     	ds	1
   224   000026                     ??_gpio_pin_write_logic:
   225                           
   226                           ; 1 bytes @ 0x3
   227   000026                     	ds	5
   228   00002B                     gpio_pin_direction_initialize@ret:
   229                           	callstack 0
   230                           
   231                           ; 1 bytes @ 0x8
   232   00002B                     	ds	1
   233   00002C                     gpio_pin_write_logic@ret:
   234                           	callstack 0
   235   00002C                     dc_motor_initialize@_dc_motor:
   236                           	callstack 0
   237                           
   238                           ; 2 bytes @ 0x9
   239   00002C                     	ds	1
   240   00002D                     dc_motor_move_right@_dc_motor:
   241                           	callstack 0
   242   00002D                     dc_motor_move_left@_dc_motor:
   243                           	callstack 0
   244                           
   245                           ; 2 bytes @ 0xA
   246   00002D                     	ds	1
   247   00002E                     dc_motor_initialize@ret:
   248                           	callstack 0
   249                           
   250                           ; 1 bytes @ 0xB
   251   00002E                     	ds	1
   252   00002F                     dc_motor_move_right@ret:
   253                           	callstack 0
   254   00002F                     dc_motor_move_left@ret:
   255                           	callstack 0
   256                           
   257                           ; 1 bytes @ 0xC
   258   00002F                     	ds	1
   259   000030                     ??_main:
   260                           
   261                           ; 1 bytes @ 0xD
   262   000030                     	ds	2
   263                           
   264 ;;
   265 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
   266 ;;
   267 ;; *************** function _main *****************
   268 ;; Defined at:
   269 ;;		line 41 in file "application.c"
   270 ;; Parameters:    Size  Location     Type
   271 ;;		None
   272 ;; Auto vars:     Size  Location     Type
   273 ;;  ret             1    0        unsigned char 
   274 ;; Return value:  Size  Location     Type
   275 ;;                  2  198[None  ] int 
   276 ;; Registers used:
   277 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
   278 ;; Tracked objects:
   279 ;;		On entry : 0/0
   280 ;;		On exit  : 0/0
   281 ;;		Unchanged: 0/0
   282 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   283 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   284 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   285 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   286 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   287 ;;Total ram usage:        2 bytes
   288 ;; Hardware stack levels required when called: 3
   289 ;; This function calls:
   290 ;;		_application_intialize
   291 ;;		_dc_motor_move_left
   292 ;;		_dc_motor_move_right
   293 ;; This function is called by:
   294 ;;		Startup code after reset
   295 ;; This function uses a non-reentrant model
   296 ;;
   297                           
   298                           	psect	text0
   299   00FD3E                     __ptext0:
   300                           	callstack 0
   301   00FD3E                     _main:
   302                           	callstack 28
   303   00FD3E                     
   304                           ;application.c: 43:      application_intialize();
   305   00FD3E  EC01  F07E         	call	_application_intialize	;wreg free
   306   00FD42                     l1477:
   307   00FD42  0E21               	movlw	low _dc_motor_1
   308   00FD44  6E2D               	movwf	dc_motor_move_right@_dc_motor^0,c
   309   00FD46  0E00               	movlw	high _dc_motor_1
   310   00FD48  6E2E               	movwf	(dc_motor_move_right@_dc_motor+1)^0,c
   311   00FD4A  EC7C  F07E         	call	_dc_motor_move_right	;wreg free
   312   00FD4E  0E1F               	movlw	low _dc_motor_2
   313   00FD50  6E2D               	movwf	dc_motor_move_right@_dc_motor^0,c
   314   00FD52  0E00               	movlw	high _dc_motor_2
   315   00FD54  6E2E               	movwf	(dc_motor_move_right@_dc_motor+1)^0,c
   316   00FD56  EC7C  F07E         	call	_dc_motor_move_right	;wreg free
   317   00FD5A                     
   318                           ;application.c: 47:         _delay((unsigned long)((5000)*(8000000/4000.0)));
   319   00FD5A  0E33               	movlw	51
   320   00FD5C  6E31               	movwf	(??_main+1)^0,c
   321   00FD5E  0EBB               	movlw	187
   322   00FD60  6E30               	movwf	??_main^0,c
   323   00FD62  0EE0               	movlw	224
   324   00FD64                     u817:
   325   00FD64  2EE8               	decfsz	wreg,f,c
   326   00FD66  D7FE               	bra	u817
   327   00FD68  2E30               	decfsz	??_main^0,f,c
   328   00FD6A  D7FC               	bra	u817
   329   00FD6C  2E31               	decfsz	(??_main+1)^0,f,c
   330   00FD6E  D7FA               	bra	u817
   331   00FD70  0E21               	movlw	low _dc_motor_1
   332   00FD72  6E2D               	movwf	dc_motor_move_left@_dc_motor^0,c
   333   00FD74  0E00               	movlw	high _dc_motor_1
   334   00FD76  6E2E               	movwf	(dc_motor_move_left@_dc_motor+1)^0,c
   335   00FD78  EC59  F07E         	call	_dc_motor_move_left	;wreg free
   336   00FD7C  0E1F               	movlw	low _dc_motor_2
   337   00FD7E  6E2D               	movwf	dc_motor_move_left@_dc_motor^0,c
   338   00FD80  0E00               	movlw	high _dc_motor_2
   339   00FD82  6E2E               	movwf	(dc_motor_move_left@_dc_motor+1)^0,c
   340   00FD84  EC59  F07E         	call	_dc_motor_move_left	;wreg free
   341   00FD88  EFA1  F07E         	goto	l1477
   342   00FD8C  EF00  F000         	goto	start
   343   00FD90                     __end_of_main:
   344                           	callstack 0
   345                           
   346 ;; *************** function _dc_motor_move_right *****************
   347 ;; Defined at:
   348 ;;		line 36 in file "ECU_layer/DC_Motor/ecu_dc_motor.c"
   349 ;; Parameters:    Size  Location     Type
   350 ;;  _dc_motor       2   10[COMRAM] PTR const struct .
   351 ;;		 -> dc_motor_2(2), dc_motor_1(2), 
   352 ;; Auto vars:     Size  Location     Type
   353 ;;  ret             1   12[COMRAM] unsigned char 
   354 ;; Return value:  Size  Location     Type
   355 ;;                  1    wreg      unsigned char 
   356 ;; Registers used:
   357 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
   358 ;; Tracked objects:
   359 ;;		On entry : 0/0
   360 ;;		On exit  : 0/0
   361 ;;		Unchanged: 0/0
   362 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   363 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   364 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   365 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   366 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   367 ;;Total ram usage:        3 bytes
   368 ;; Hardware stack levels used: 1
   369 ;; Hardware stack levels required when called: 1
   370 ;; This function calls:
   371 ;;		_gpio_pin_write_logic
   372 ;; This function is called by:
   373 ;;		_main
   374 ;; This function uses a non-reentrant model
   375 ;;
   376                           
   377                           	psect	text1
   378   00FCF8                     __ptext1:
   379                           	callstack 0
   380   00FCF8                     _dc_motor_move_right:
   381                           	callstack 29
   382   00FCF8                     
   383                           ;ECU_layer/DC_Motor/ecu_dc_motor.c: 37:     Std_ReturnType ret = (Std_ReturnType)0x01;
   384   00FCF8  0E01               	movlw	1
   385   00FCFA  6E2F               	movwf	dc_motor_move_right@ret^0,c
   386   00FCFC                     
   387                           ;ECU_layer/DC_Motor/ecu_dc_motor.c: 38:     if(((void*)0) == _dc_motor){
   388   00FCFC  502D               	movf	dc_motor_move_right@_dc_motor^0,w,c
   389   00FCFE  102E               	iorwf	(dc_motor_move_right@_dc_motor+1)^0,w,c
   390   00FD00  A4D8               	btfss	status,2,c
   391   00FD02  EF85  F07E         	goto	u651
   392   00FD06  EF87  F07E         	goto	u650
   393   00FD0A                     u651:
   394   00FD0A  EF8B  F07E         	goto	l1393
   395   00FD0E                     u650:
   396   00FD0E                     
   397                           ;ECU_layer/DC_Motor/ecu_dc_motor.c: 39:         ret = (Std_ReturnType)0x00;
   398   00FD0E  0E00               	movlw	0
   399   00FD10  6E2F               	movwf	dc_motor_move_right@ret^0,c
   400                           
   401                           ;ECU_layer/DC_Motor/ecu_dc_motor.c: 40:     }
   402   00FD12  EF9D  F07E         	goto	l1395
   403   00FD16                     l1393:
   404                           
   405                           ;ECU_layer/DC_Motor/ecu_dc_motor.c: 42:         gpio_pin_write_logic(&(_dc_motor->dc_mot
      +                          or_pin[0x00U]), GPIO_HIGH);
   406   00FD16  C02D  F023         	movff	dc_motor_move_right@_dc_motor,gpio_pin_write_logic@_pin_config
   407   00FD1A  C02E  F024         	movff	dc_motor_move_right@_dc_motor+1,gpio_pin_write_logic@_pin_config+1
   408   00FD1E  0E01               	movlw	1
   409   00FD20  6E25               	movwf	gpio_pin_write_logic@logic^0,c
   410   00FD22  ECC8  F07E         	call	_gpio_pin_write_logic	;wreg free
   411                           
   412                           ;ECU_layer/DC_Motor/ecu_dc_motor.c: 43:         gpio_pin_write_logic(&(_dc_motor->dc_mot
      +                          or_pin[0x01U]), GPIO_LOW);
   413   00FD26  0E01               	movlw	1
   414   00FD28  242D               	addwf	dc_motor_move_right@_dc_motor^0,w,c
   415   00FD2A  6E23               	movwf	gpio_pin_write_logic@_pin_config^0,c
   416   00FD2C  0E00               	movlw	0
   417   00FD2E  202E               	addwfc	(dc_motor_move_right@_dc_motor+1)^0,w,c
   418   00FD30  6E24               	movwf	(gpio_pin_write_logic@_pin_config+1)^0,c
   419   00FD32  0E00               	movlw	0
   420   00FD34  6E25               	movwf	gpio_pin_write_logic@logic^0,c
   421   00FD36  ECC8  F07E         	call	_gpio_pin_write_logic	;wreg free
   422   00FD3A                     l1395:
   423                           
   424                           ;ECU_layer/DC_Motor/ecu_dc_motor.c: 45:     return ret;
   425   00FD3A  502F               	movf	dc_motor_move_right@ret^0,w,c
   426   00FD3C  0012               	return		;funcret
   427   00FD3E                     __end_of_dc_motor_move_right:
   428                           	callstack 0
   429                           
   430 ;; *************** function _dc_motor_move_left *****************
   431 ;; Defined at:
   432 ;;		line 55 in file "ECU_layer/DC_Motor/ecu_dc_motor.c"
   433 ;; Parameters:    Size  Location     Type
   434 ;;  _dc_motor       2   10[COMRAM] PTR const struct .
   435 ;;		 -> dc_motor_2(2), dc_motor_1(2), 
   436 ;; Auto vars:     Size  Location     Type
   437 ;;  ret             1   12[COMRAM] unsigned char 
   438 ;; Return value:  Size  Location     Type
   439 ;;                  1    wreg      unsigned char 
   440 ;; Registers used:
   441 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
   442 ;; Tracked objects:
   443 ;;		On entry : 0/0
   444 ;;		On exit  : 0/0
   445 ;;		Unchanged: 0/0
   446 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   447 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   448 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   449 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   450 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   451 ;;Total ram usage:        3 bytes
   452 ;; Hardware stack levels used: 1
   453 ;; Hardware stack levels required when called: 1
   454 ;; This function calls:
   455 ;;		_gpio_pin_write_logic
   456 ;; This function is called by:
   457 ;;		_main
   458 ;; This function uses a non-reentrant model
   459 ;;
   460                           
   461                           	psect	text2
   462   00FCB2                     __ptext2:
   463                           	callstack 0
   464   00FCB2                     _dc_motor_move_left:
   465                           	callstack 29
   466   00FCB2                     
   467                           ;ECU_layer/DC_Motor/ecu_dc_motor.c: 56:     Std_ReturnType ret = (Std_ReturnType)0x01;
   468   00FCB2  0E01               	movlw	1
   469   00FCB4  6E2F               	movwf	dc_motor_move_left@ret^0,c
   470   00FCB6                     
   471                           ;ECU_layer/DC_Motor/ecu_dc_motor.c: 57:     if(((void*)0) == _dc_motor){
   472   00FCB6  502D               	movf	dc_motor_move_left@_dc_motor^0,w,c
   473   00FCB8  102E               	iorwf	(dc_motor_move_left@_dc_motor+1)^0,w,c
   474   00FCBA  A4D8               	btfss	status,2,c
   475   00FCBC  EF62  F07E         	goto	u661
   476   00FCC0  EF64  F07E         	goto	u660
   477   00FCC4                     u661:
   478   00FCC4  EF68  F07E         	goto	l1405
   479   00FCC8                     u660:
   480   00FCC8                     
   481                           ;ECU_layer/DC_Motor/ecu_dc_motor.c: 58:         ret = (Std_ReturnType)0x00;
   482   00FCC8  0E00               	movlw	0
   483   00FCCA  6E2F               	movwf	dc_motor_move_left@ret^0,c
   484                           
   485                           ;ECU_layer/DC_Motor/ecu_dc_motor.c: 59:     }
   486   00FCCC  EF7A  F07E         	goto	l1407
   487   00FCD0                     l1405:
   488                           
   489                           ;ECU_layer/DC_Motor/ecu_dc_motor.c: 61:         gpio_pin_write_logic(&(_dc_motor->dc_mot
      +                          or_pin[0x00U]), GPIO_LOW);
   490   00FCD0  C02D  F023         	movff	dc_motor_move_left@_dc_motor,gpio_pin_write_logic@_pin_config
   491   00FCD4  C02E  F024         	movff	dc_motor_move_left@_dc_motor+1,gpio_pin_write_logic@_pin_config+1
   492   00FCD8  0E00               	movlw	0
   493   00FCDA  6E25               	movwf	gpio_pin_write_logic@logic^0,c
   494   00FCDC  ECC8  F07E         	call	_gpio_pin_write_logic	;wreg free
   495                           
   496                           ;ECU_layer/DC_Motor/ecu_dc_motor.c: 62:         gpio_pin_write_logic(&(_dc_motor->dc_mot
      +                          or_pin[0x01U]), GPIO_HIGH);
   497   00FCE0  0E01               	movlw	1
   498   00FCE2  242D               	addwf	dc_motor_move_left@_dc_motor^0,w,c
   499   00FCE4  6E23               	movwf	gpio_pin_write_logic@_pin_config^0,c
   500   00FCE6  0E00               	movlw	0
   501   00FCE8  202E               	addwfc	(dc_motor_move_left@_dc_motor+1)^0,w,c
   502   00FCEA  6E24               	movwf	(gpio_pin_write_logic@_pin_config+1)^0,c
   503   00FCEC  0E01               	movlw	1
   504   00FCEE  6E25               	movwf	gpio_pin_write_logic@logic^0,c
   505   00FCF0  ECC8  F07E         	call	_gpio_pin_write_logic	;wreg free
   506   00FCF4                     l1407:
   507                           
   508                           ;ECU_layer/DC_Motor/ecu_dc_motor.c: 64:     return ret;
   509   00FCF4  502F               	movf	dc_motor_move_left@ret^0,w,c
   510   00FCF6  0012               	return		;funcret
   511   00FCF8                     __end_of_dc_motor_move_left:
   512                           	callstack 0
   513                           
   514 ;; *************** function _gpio_pin_write_logic *****************
   515 ;; Defined at:
   516 ;;		line 92 in file "MCAL_layer/GPIO/hal_gpio.c"
   517 ;; Parameters:    Size  Location     Type
   518 ;;  _pin_config     2    0[COMRAM] PTR const struct .
   519 ;;		 -> relay_off@pin_0bj(1), relay_on@pin_0bj(1), relay_initialize@pin_0bj(1), dc_motor_2.dc_motor_pin(2), 
   520 ;;		 -> dc_motor_2(2), dc_motor_1.dc_motor_pin(2), dc_motor_1(2), led_turn_off@pin_0bj(1), 
   521 ;;		 -> led_turn_on@pin_0bj(1), led_initialize@pin_0bj(1), 
   522 ;;  logic           1    2[COMRAM] enum E2798
   523 ;; Auto vars:     Size  Location     Type
   524 ;;  ret             1    9[COMRAM] unsigned char 
   525 ;; Return value:  Size  Location     Type
   526 ;;                  1    wreg      unsigned char 
   527 ;; Registers used:
   528 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
   529 ;; Tracked objects:
   530 ;;		On entry : 0/0
   531 ;;		On exit  : 0/0
   532 ;;		Unchanged: 0/0
   533 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   534 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   535 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   536 ;;      Temps:          6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   537 ;;      Totals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   538 ;;Total ram usage:       10 bytes
   539 ;; Hardware stack levels used: 1
   540 ;; This function calls:
   541 ;;		Nothing
   542 ;; This function is called by:
   543 ;;		_dc_motor_move_right
   544 ;;		_dc_motor_move_left
   545 ;;		_led_turn_on
   546 ;;		_led_turn_off
   547 ;;		_gpio_pin_initialize
   548 ;;		_relay_on
   549 ;;		_relay_off
   550 ;;		_dc_motor_stop
   551 ;; This function uses a non-reentrant model
   552 ;;
   553                           
   554                           	psect	text3
   555   00FD90                     __ptext3:
   556                           	callstack 0
   557   00FD90                     _gpio_pin_write_logic:
   558                           	callstack 29
   559   00FD90                     
   560                           ;MCAL_layer/GPIO/hal_gpio.c: 93:         Std_ReturnType ret= (Std_ReturnType)0x01 ;
   561   00FD90  0E01               	movlw	1
   562   00FD92  6E2C               	movwf	gpio_pin_write_logic@ret^0,c
   563   00FD94                     
   564                           ;MCAL_layer/GPIO/hal_gpio.c: 94: if(((void*)0) ==_pin_config || _pin_config ->pin > (8 -
      +                          1)) {
   565   00FD94  5023               	movf	gpio_pin_write_logic@_pin_config^0,w,c
   566   00FD96  1024               	iorwf	(gpio_pin_write_logic@_pin_config+1)^0,w,c
   567   00FD98  B4D8               	btfsc	status,2,c
   568   00FD9A  EFD1  F07E         	goto	u581
   569   00FD9E  EFD3  F07E         	goto	u580
   570   00FDA2                     u581:
   571   00FDA2  EFE4  F07E         	goto	l1337
   572   00FDA6                     u580:
   573   00FDA6  C023  FFD9         	movff	gpio_pin_write_logic@_pin_config,fsr2l
   574   00FDAA  C024  FFDA         	movff	gpio_pin_write_logic@_pin_config+1,fsr2h
   575   00FDAE  30DF               	rrcf	223,w,c
   576   00FDB0  32E8               	rrcf	wreg,f,c
   577   00FDB2  32E8               	rrcf	wreg,f,c
   578   00FDB4  0B07               	andlw	7
   579   00FDB6  6E26               	movwf	??_gpio_pin_write_logic^0,c
   580   00FDB8  0E07               	movlw	7
   581   00FDBA  6426               	cpfsgt	??_gpio_pin_write_logic^0,c
   582   00FDBC  EFE2  F07E         	goto	u591
   583   00FDC0  EFE4  F07E         	goto	u590
   584   00FDC4                     u591:
   585   00FDC4  EF47  F07F         	goto	l1345
   586   00FDC8                     u590:
   587   00FDC8                     l1337:
   588                           
   589                           ;MCAL_layer/GPIO/hal_gpio.c: 95:         ret= (Std_ReturnType)0x00 ;
   590   00FDC8  0E00               	movlw	0
   591   00FDCA  6E2C               	movwf	gpio_pin_write_logic@ret^0,c
   592                           
   593                           ;MCAL_layer/GPIO/hal_gpio.c: 96:     }
   594   00FDCC  EF5C  F07F         	goto	l1347
   595   00FDD0                     l1339:
   596                           
   597                           ;MCAL_layer/GPIO/hal_gpio.c: 100:             ( *lat_registers[_pin_config->port] &= ~((
      +                          uint8)1<<_pin_config->pin) );
   598   00FDD0  C023  FFD9         	movff	gpio_pin_write_logic@_pin_config,fsr2l
   599   00FDD4  C024  FFDA         	movff	gpio_pin_write_logic@_pin_config+1,fsr2h
   600   00FDD8  30DF               	rrcf	223,w,c
   601   00FDDA  32E8               	rrcf	wreg,f,c
   602   00FDDC  32E8               	rrcf	wreg,f,c
   603   00FDDE  0B07               	andlw	7
   604   00FDE0  6E26               	movwf	??_gpio_pin_write_logic^0,c
   605   00FDE2  0E01               	movlw	1
   606   00FDE4  6E27               	movwf	(??_gpio_pin_write_logic+1)^0,c
   607   00FDE6  2A26               	incf	??_gpio_pin_write_logic^0,f,c
   608   00FDE8  EFF8  F07E         	goto	u604
   609   00FDEC                     u605:
   610   00FDEC  90D8               	bcf	status,0,c
   611   00FDEE  3627               	rlcf	(??_gpio_pin_write_logic+1)^0,f,c
   612   00FDF0                     u604:
   613   00FDF0  2E26               	decfsz	??_gpio_pin_write_logic^0,f,c
   614   00FDF2  EFF6  F07E         	goto	u605
   615   00FDF6  5027               	movf	(??_gpio_pin_write_logic+1)^0,w,c
   616   00FDF8  0AFF               	xorlw	255
   617   00FDFA  6E28               	movwf	(??_gpio_pin_write_logic+2)^0,c
   618   00FDFC  C023  FFD9         	movff	gpio_pin_write_logic@_pin_config,fsr2l
   619   00FE00  C024  FFDA         	movff	gpio_pin_write_logic@_pin_config+1,fsr2h
   620   00FE04  50DF               	movf	223,w,c
   621   00FE06  0B07               	andlw	7
   622   00FE08  6E29               	movwf	(??_gpio_pin_write_logic+3)^0,c
   623   00FE0A  5029               	movf	(??_gpio_pin_write_logic+3)^0,w,c
   624   00FE0C  0D02               	mullw	2
   625   00FE0E  0E0B               	movlw	low _lat_registers
   626   00FE10  24F3               	addwf	243,w,c
   627   00FE12  6ED9               	movwf	fsr2l,c
   628   00FE14  0E00               	movlw	high _lat_registers
   629   00FE16  20F4               	addwfc	prodh,w,c
   630   00FE18  6EDA               	movwf	fsr2h,c
   631   00FE1A  CFDE F02A          	movff	postinc2,??_gpio_pin_write_logic+4
   632   00FE1E  CFDD F02B          	movff	postdec2,??_gpio_pin_write_logic+5
   633   00FE22  C02A  FFD9         	movff	??_gpio_pin_write_logic+4,fsr2l
   634   00FE26  C02B  FFDA         	movff	??_gpio_pin_write_logic+5,fsr2h
   635   00FE2A  5028               	movf	(??_gpio_pin_write_logic+2)^0,w,c
   636   00FE2C  16DF               	andwf	indf2,f,c
   637                           
   638                           ;MCAL_layer/GPIO/hal_gpio.c: 101:             break;
   639   00FE2E  EF5C  F07F         	goto	l1347
   640   00FE32                     l1341:
   641                           
   642                           ;MCAL_layer/GPIO/hal_gpio.c: 103:             ( *lat_registers[_pin_config->port] |= ((u
      +                          int8)1<<_pin_config->pin) );
   643   00FE32  C023  FFD9         	movff	gpio_pin_write_logic@_pin_config,fsr2l
   644   00FE36  C024  FFDA         	movff	gpio_pin_write_logic@_pin_config+1,fsr2h
   645   00FE3A  30DF               	rrcf	223,w,c
   646   00FE3C  32E8               	rrcf	wreg,f,c
   647   00FE3E  32E8               	rrcf	wreg,f,c
   648   00FE40  0B07               	andlw	7
   649   00FE42  6E26               	movwf	??_gpio_pin_write_logic^0,c
   650   00FE44  0E01               	movlw	1
   651   00FE46  6E27               	movwf	(??_gpio_pin_write_logic+1)^0,c
   652   00FE48  2A26               	incf	??_gpio_pin_write_logic^0,f,c
   653   00FE4A  EF29  F07F         	goto	u614
   654   00FE4E                     u615:
   655   00FE4E  90D8               	bcf	status,0,c
   656   00FE50  3627               	rlcf	(??_gpio_pin_write_logic+1)^0,f,c
   657   00FE52                     u614:
   658   00FE52  2E26               	decfsz	??_gpio_pin_write_logic^0,f,c
   659   00FE54  EF27  F07F         	goto	u615
   660   00FE58  C023  FFD9         	movff	gpio_pin_write_logic@_pin_config,fsr2l
   661   00FE5C  C024  FFDA         	movff	gpio_pin_write_logic@_pin_config+1,fsr2h
   662   00FE60  50DF               	movf	223,w,c
   663   00FE62  0B07               	andlw	7
   664   00FE64  6E28               	movwf	(??_gpio_pin_write_logic+2)^0,c
   665   00FE66  5028               	movf	(??_gpio_pin_write_logic+2)^0,w,c
   666   00FE68  0D02               	mullw	2
   667   00FE6A  0E0B               	movlw	low _lat_registers
   668   00FE6C  24F3               	addwf	243,w,c
   669   00FE6E  6ED9               	movwf	fsr2l,c
   670   00FE70  0E00               	movlw	high _lat_registers
   671   00FE72  20F4               	addwfc	prodh,w,c
   672   00FE74  6EDA               	movwf	fsr2h,c
   673   00FE76  CFDE F029          	movff	postinc2,??_gpio_pin_write_logic+3
   674   00FE7A  CFDD F02A          	movff	postdec2,??_gpio_pin_write_logic+4
   675   00FE7E  C029  FFD9         	movff	??_gpio_pin_write_logic+3,fsr2l
   676   00FE82  C02A  FFDA         	movff	??_gpio_pin_write_logic+4,fsr2h
   677   00FE86  5027               	movf	(??_gpio_pin_write_logic+1)^0,w,c
   678   00FE88  12DF               	iorwf	indf2,f,c
   679                           
   680                           ;MCAL_layer/GPIO/hal_gpio.c: 104:             break;
   681   00FE8A  EF5C  F07F         	goto	l1347
   682   00FE8E                     l1345:
   683   00FE8E  5025               	movf	gpio_pin_write_logic@logic^0,w,c
   684   00FE90  6E26               	movwf	??_gpio_pin_write_logic^0,c
   685   00FE92  6A27               	clrf	(??_gpio_pin_write_logic+1)^0,c
   686                           
   687                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
   688                           ; Switch size 1, requested type "simple"
   689                           ; Number of cases is 1, Range of values is 0 to 0
   690                           ; switch strategies available:
   691                           ; Name         Instructions Cycles
   692                           ; simple_byte            4     3 (average)
   693                           ;	Chosen strategy is simple_byte
   694   00FE94  5027               	movf	(??_gpio_pin_write_logic+1)^0,w,c
   695   00FE96  0A00               	xorlw	0	; case 0
   696   00FE98  B4D8               	btfsc	status,2,c
   697   00FE9A  EF51  F07F         	goto	l1553
   698   00FE9E  EFE4  F07E         	goto	l1337
   699   00FEA2                     l1553:
   700                           
   701                           ; Switch size 1, requested type "simple"
   702                           ; Number of cases is 2, Range of values is 0 to 1
   703                           ; switch strategies available:
   704                           ; Name         Instructions Cycles
   705                           ; simple_byte            7     4 (average)
   706                           ;	Chosen strategy is simple_byte
   707   00FEA2  5026               	movf	??_gpio_pin_write_logic^0,w,c
   708   00FEA4  0A00               	xorlw	0	; case 0
   709   00FEA6  B4D8               	btfsc	status,2,c
   710   00FEA8  EFE8  F07E         	goto	l1339
   711   00FEAC  0A01               	xorlw	1	; case 1
   712   00FEAE  B4D8               	btfsc	status,2,c
   713   00FEB0  EF19  F07F         	goto	l1341
   714   00FEB4  EFE4  F07E         	goto	l1337
   715   00FEB8                     l1347:
   716                           
   717                           ;MCAL_layer/GPIO/hal_gpio.c: 109:  return ret ;
   718   00FEB8  502C               	movf	gpio_pin_write_logic@ret^0,w,c
   719   00FEBA  0012               	return		;funcret
   720   00FEBC                     __end_of_gpio_pin_write_logic:
   721                           	callstack 0
   722                           
   723 ;; *************** function _application_intialize *****************
   724 ;; Defined at:
   725 ;;		line 33 in file "application.c"
   726 ;; Parameters:    Size  Location     Type
   727 ;;		None
   728 ;; Auto vars:     Size  Location     Type
   729 ;;  ret             1    0        unsigned char 
   730 ;; Return value:  Size  Location     Type
   731 ;;                  1    wreg      void 
   732 ;; Registers used:
   733 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
   734 ;; Tracked objects:
   735 ;;		On entry : 0/0
   736 ;;		On exit  : 0/0
   737 ;;		Unchanged: 0/0
   738 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   739 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   740 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   741 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   742 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   743 ;;Total ram usage:        0 bytes
   744 ;; Hardware stack levels used: 1
   745 ;; Hardware stack levels required when called: 2
   746 ;; This function calls:
   747 ;;		_dc_motor_initialize
   748 ;; This function is called by:
   749 ;;		_main
   750 ;; This function uses a non-reentrant model
   751 ;;
   752                           
   753                           	psect	text4
   754   00FC02                     __ptext4:
   755                           	callstack 0
   756   00FC02                     _application_intialize:
   757                           	callstack 28
   758   00FC02  0E21               	movlw	low _dc_motor_1
   759   00FC04  6E2C               	movwf	dc_motor_initialize@_dc_motor^0,c
   760   00FC06  0E00               	movlw	high _dc_motor_1
   761   00FC08  6E2D               	movwf	(dc_motor_initialize@_dc_motor+1)^0,c
   762   00FC0A  EC3A  F07E         	call	_dc_motor_initialize	;wreg free
   763   00FC0E  0E1F               	movlw	low _dc_motor_2
   764   00FC10  6E2C               	movwf	dc_motor_initialize@_dc_motor^0,c
   765   00FC12  0E00               	movlw	high _dc_motor_2
   766   00FC14  6E2D               	movwf	(dc_motor_initialize@_dc_motor+1)^0,c
   767   00FC16  EC3A  F07E         	call	_dc_motor_initialize	;wreg free
   768   00FC1A  0012               	return		;funcret
   769   00FC1C                     __end_of_application_intialize:
   770                           	callstack 0
   771                           
   772 ;; *************** function _dc_motor_initialize *****************
   773 ;; Defined at:
   774 ;;		line 17 in file "ECU_layer/DC_Motor/ecu_dc_motor.c"
   775 ;; Parameters:    Size  Location     Type
   776 ;;  _dc_motor       2    9[COMRAM] PTR const struct .
   777 ;;		 -> dc_motor_2(2), dc_motor_1(2), 
   778 ;; Auto vars:     Size  Location     Type
   779 ;;  ret             1   11[COMRAM] unsigned char 
   780 ;; Return value:  Size  Location     Type
   781 ;;                  1    wreg      unsigned char 
   782 ;; Registers used:
   783 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
   784 ;; Tracked objects:
   785 ;;		On entry : 0/0
   786 ;;		On exit  : 0/0
   787 ;;		Unchanged: 0/0
   788 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   789 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   790 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   791 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   792 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   793 ;;Total ram usage:        3 bytes
   794 ;; Hardware stack levels used: 1
   795 ;; Hardware stack levels required when called: 1
   796 ;; This function calls:
   797 ;;		_gpio_pin_direction_initialize
   798 ;; This function is called by:
   799 ;;		_application_intialize
   800 ;; This function uses a non-reentrant model
   801 ;;
   802                           
   803                           	psect	text5
   804   00FC74                     __ptext5:
   805                           	callstack 0
   806   00FC74                     _dc_motor_initialize:
   807                           	callstack 28
   808   00FC74                     
   809                           ;ECU_layer/DC_Motor/ecu_dc_motor.c: 18:     Std_ReturnType ret = (Std_ReturnType)0x01;
   810   00FC74  0E01               	movlw	1
   811   00FC76  6E2E               	movwf	dc_motor_initialize@ret^0,c
   812   00FC78                     
   813                           ;ECU_layer/DC_Motor/ecu_dc_motor.c: 19:     if(((void*)0) == _dc_motor){
   814   00FC78  502C               	movf	dc_motor_initialize@_dc_motor^0,w,c
   815   00FC7A  102D               	iorwf	(dc_motor_initialize@_dc_motor+1)^0,w,c
   816   00FC7C  A4D8               	btfss	status,2,c
   817   00FC7E  EF43  F07E         	goto	u621
   818   00FC82  EF45  F07E         	goto	u620
   819   00FC86                     u621:
   820   00FC86  EF49  F07E         	goto	l1361
   821   00FC8A                     u620:
   822   00FC8A                     
   823                           ;ECU_layer/DC_Motor/ecu_dc_motor.c: 20:         ret = (Std_ReturnType)0x00;
   824   00FC8A  0E00               	movlw	0
   825   00FC8C  6E2E               	movwf	dc_motor_initialize@ret^0,c
   826                           
   827                           ;ECU_layer/DC_Motor/ecu_dc_motor.c: 21:     }
   828   00FC8E  EF57  F07E         	goto	l1363
   829   00FC92                     l1361:
   830                           
   831                           ;ECU_layer/DC_Motor/ecu_dc_motor.c: 23:         gpio_pin_direction_initialize(&(_dc_moto
      +                          r->dc_motor_pin[0x00U]));
   832   00FC92  C02C  F023         	movff	dc_motor_initialize@_dc_motor,gpio_pin_direction_initialize@_pin_config
   833   00FC96  C02D  F024         	movff	dc_motor_initialize@_dc_motor+1,gpio_pin_direction_initialize@_pin_config+1
   834   00FC9A  EC5E  F07F         	call	_gpio_pin_direction_initialize	;wreg free
   835                           
   836                           ;ECU_layer/DC_Motor/ecu_dc_motor.c: 24:         gpio_pin_direction_initialize(&(_dc_moto
      +                          r->dc_motor_pin[0x01U]));
   837   00FC9E  0E01               	movlw	1
   838   00FCA0  242C               	addwf	dc_motor_initialize@_dc_motor^0,w,c
   839   00FCA2  6E23               	movwf	gpio_pin_direction_initialize@_pin_config^0,c
   840   00FCA4  0E00               	movlw	0
   841   00FCA6  202D               	addwfc	(dc_motor_initialize@_dc_motor+1)^0,w,c
   842   00FCA8  6E24               	movwf	(gpio_pin_direction_initialize@_pin_config+1)^0,c
   843   00FCAA  EC5E  F07F         	call	_gpio_pin_direction_initialize	;wreg free
   844   00FCAE                     l1363:
   845                           
   846                           ;ECU_layer/DC_Motor/ecu_dc_motor.c: 26:     return ret;
   847   00FCAE  502E               	movf	dc_motor_initialize@ret^0,w,c
   848   00FCB0  0012               	return		;funcret
   849   00FCB2                     __end_of_dc_motor_initialize:
   850                           	callstack 0
   851                           
   852 ;; *************** function _gpio_pin_direction_initialize *****************
   853 ;; Defined at:
   854 ;;		line 47 in file "MCAL_layer/GPIO/hal_gpio.c"
   855 ;; Parameters:    Size  Location     Type
   856 ;;  _pin_config     2    0[COMRAM] PTR const struct .
   857 ;;		 -> relay_initialize@pin_0bj(1), dc_motor_2.dc_motor_pin(2), dc_motor_2(2), dc_motor_1.dc_motor_pin(2), 
   858 ;;		 -> dc_motor_1(2), led_initialize@pin_0bj(1), 
   859 ;; Auto vars:     Size  Location     Type
   860 ;;  ret             1    8[COMRAM] unsigned char 
   861 ;; Return value:  Size  Location     Type
   862 ;;                  1    wreg      unsigned char 
   863 ;; Registers used:
   864 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
   865 ;; Tracked objects:
   866 ;;		On entry : 0/0
   867 ;;		On exit  : 0/0
   868 ;;		Unchanged: 0/0
   869 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   870 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   871 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   872 ;;      Temps:          6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   873 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   874 ;;Total ram usage:        9 bytes
   875 ;; Hardware stack levels used: 1
   876 ;; This function calls:
   877 ;;		Nothing
   878 ;; This function is called by:
   879 ;;		_dc_motor_initialize
   880 ;;		_button_initialize
   881 ;;		_gpio_pin_initialize
   882 ;; This function uses a non-reentrant model
   883 ;;
   884                           
   885                           	psect	text6
   886   00FEBC                     __ptext6:
   887                           	callstack 0
   888   00FEBC                     _gpio_pin_direction_initialize:
   889                           	callstack 28
   890   00FEBC                     
   891                           ;MCAL_layer/GPIO/hal_gpio.c: 48:     Std_ReturnType ret= (Std_ReturnType)0x01 ;
   892   00FEBC  0E01               	movlw	1
   893   00FEBE  6E2B               	movwf	gpio_pin_direction_initialize@ret^0,c
   894   00FEC0                     
   895                           ;MCAL_layer/GPIO/hal_gpio.c: 49:     if(((void*)0) ==_pin_config || _pin_config ->pin > 
      +                          (8 -1) ) {
   896   00FEC0  5023               	movf	gpio_pin_direction_initialize@_pin_config^0,w,c
   897   00FEC2  1024               	iorwf	(gpio_pin_direction_initialize@_pin_config+1)^0,w,c
   898   00FEC4  B4D8               	btfsc	status,2,c
   899   00FEC6  EF67  F07F         	goto	u521
   900   00FECA  EF69  F07F         	goto	u520
   901   00FECE                     u521:
   902   00FECE  EF7A  F07F         	goto	l1313
   903   00FED2                     u520:
   904   00FED2  C023  FFD9         	movff	gpio_pin_direction_initialize@_pin_config,fsr2l
   905   00FED6  C024  FFDA         	movff	gpio_pin_direction_initialize@_pin_config+1,fsr2h
   906   00FEDA  30DF               	rrcf	223,w,c
   907   00FEDC  32E8               	rrcf	wreg,f,c
   908   00FEDE  32E8               	rrcf	wreg,f,c
   909   00FEE0  0B07               	andlw	7
   910   00FEE2  6E25               	movwf	??_gpio_pin_direction_initialize^0,c
   911   00FEE4  0E07               	movlw	7
   912   00FEE6  6425               	cpfsgt	??_gpio_pin_direction_initialize^0,c
   913   00FEE8  EF78  F07F         	goto	u531
   914   00FEEC  EF7A  F07F         	goto	u530
   915   00FEF0                     u531:
   916   00FEF0  EFDD  F07F         	goto	l1321
   917   00FEF4                     u530:
   918   00FEF4                     l1313:
   919                           
   920                           ;MCAL_layer/GPIO/hal_gpio.c: 50:         ret= (Std_ReturnType)0x00 ;
   921   00FEF4  0E00               	movlw	0
   922   00FEF6  6E2B               	movwf	gpio_pin_direction_initialize@ret^0,c
   923                           
   924                           ;MCAL_layer/GPIO/hal_gpio.c: 51:     }
   925   00FEF8  EFFE  F07F         	goto	l1323
   926   00FEFC                     l1315:
   927                           
   928                           ;MCAL_layer/GPIO/hal_gpio.c: 55:             ( *tris_registers[_pin_config->port] &= ~((
      +                          uint8)1<<_pin_config->pin) ) ;
   929   00FEFC  C023  FFD9         	movff	gpio_pin_direction_initialize@_pin_config,fsr2l
   930   00FF00  C024  FFDA         	movff	gpio_pin_direction_initialize@_pin_config+1,fsr2h
   931   00FF04  30DF               	rrcf	223,w,c
   932   00FF06  32E8               	rrcf	wreg,f,c
   933   00FF08  32E8               	rrcf	wreg,f,c
   934   00FF0A  0B07               	andlw	7
   935   00FF0C  6E25               	movwf	??_gpio_pin_direction_initialize^0,c
   936   00FF0E  0E01               	movlw	1
   937   00FF10  6E26               	movwf	(??_gpio_pin_direction_initialize+1)^0,c
   938   00FF12  2A25               	incf	??_gpio_pin_direction_initialize^0,f,c
   939   00FF14  EF8E  F07F         	goto	u544
   940   00FF18                     u545:
   941   00FF18  90D8               	bcf	status,0,c
   942   00FF1A  3626               	rlcf	(??_gpio_pin_direction_initialize+1)^0,f,c
   943   00FF1C                     u544:
   944   00FF1C  2E25               	decfsz	??_gpio_pin_direction_initialize^0,f,c
   945   00FF1E  EF8C  F07F         	goto	u545
   946   00FF22  5026               	movf	(??_gpio_pin_direction_initialize+1)^0,w,c
   947   00FF24  0AFF               	xorlw	255
   948   00FF26  6E27               	movwf	(??_gpio_pin_direction_initialize+2)^0,c
   949   00FF28  C023  FFD9         	movff	gpio_pin_direction_initialize@_pin_config,fsr2l
   950   00FF2C  C024  FFDA         	movff	gpio_pin_direction_initialize@_pin_config+1,fsr2h
   951   00FF30  50DF               	movf	223,w,c
   952   00FF32  0B07               	andlw	7
   953   00FF34  6E28               	movwf	(??_gpio_pin_direction_initialize+3)^0,c
   954   00FF36  5028               	movf	(??_gpio_pin_direction_initialize+3)^0,w,c
   955   00FF38  0D02               	mullw	2
   956   00FF3A  0E15               	movlw	low _tris_registers
   957   00FF3C  24F3               	addwf	243,w,c
   958   00FF3E  6ED9               	movwf	fsr2l,c
   959   00FF40  0E00               	movlw	high _tris_registers
   960   00FF42  20F4               	addwfc	prodh,w,c
   961   00FF44  6EDA               	movwf	fsr2h,c
   962   00FF46  CFDE F029          	movff	postinc2,??_gpio_pin_direction_initialize+4
   963   00FF4A  CFDD F02A          	movff	postdec2,??_gpio_pin_direction_initialize+5
   964   00FF4E  C029  FFD9         	movff	??_gpio_pin_direction_initialize+4,fsr2l
   965   00FF52  C02A  FFDA         	movff	??_gpio_pin_direction_initialize+5,fsr2h
   966   00FF56  5027               	movf	(??_gpio_pin_direction_initialize+2)^0,w,c
   967   00FF58  16DF               	andwf	indf2,f,c
   968                           
   969                           ;MCAL_layer/GPIO/hal_gpio.c: 56:             break;
   970   00FF5A  EFFE  F07F         	goto	l1323
   971   00FF5E                     l1317:
   972                           
   973                           ;MCAL_layer/GPIO/hal_gpio.c: 58:             ( *tris_registers[_pin_config->port] |= ((u
      +                          int8)1<<_pin_config->pin) );
   974   00FF5E  C023  FFD9         	movff	gpio_pin_direction_initialize@_pin_config,fsr2l
   975   00FF62  C024  FFDA         	movff	gpio_pin_direction_initialize@_pin_config+1,fsr2h
   976   00FF66  30DF               	rrcf	223,w,c
   977   00FF68  32E8               	rrcf	wreg,f,c
   978   00FF6A  32E8               	rrcf	wreg,f,c
   979   00FF6C  0B07               	andlw	7
   980   00FF6E  6E25               	movwf	??_gpio_pin_direction_initialize^0,c
   981   00FF70  0E01               	movlw	1
   982   00FF72  6E26               	movwf	(??_gpio_pin_direction_initialize+1)^0,c
   983   00FF74  2A25               	incf	??_gpio_pin_direction_initialize^0,f,c
   984   00FF76  EFBF  F07F         	goto	u554
   985   00FF7A                     u555:
   986   00FF7A  90D8               	bcf	status,0,c
   987   00FF7C  3626               	rlcf	(??_gpio_pin_direction_initialize+1)^0,f,c
   988   00FF7E                     u554:
   989   00FF7E  2E25               	decfsz	??_gpio_pin_direction_initialize^0,f,c
   990   00FF80  EFBD  F07F         	goto	u555
   991   00FF84  C023  FFD9         	movff	gpio_pin_direction_initialize@_pin_config,fsr2l
   992   00FF88  C024  FFDA         	movff	gpio_pin_direction_initialize@_pin_config+1,fsr2h
   993   00FF8C  50DF               	movf	223,w,c
   994   00FF8E  0B07               	andlw	7
   995   00FF90  6E27               	movwf	(??_gpio_pin_direction_initialize+2)^0,c
   996   00FF92  5027               	movf	(??_gpio_pin_direction_initialize+2)^0,w,c
   997   00FF94  0D02               	mullw	2
   998   00FF96  0E15               	movlw	low _tris_registers
   999   00FF98  24F3               	addwf	243,w,c
  1000   00FF9A  6ED9               	movwf	fsr2l,c
  1001   00FF9C  0E00               	movlw	high _tris_registers
  1002   00FF9E  20F4               	addwfc	prodh,w,c
  1003   00FFA0  6EDA               	movwf	fsr2h,c
  1004   00FFA2  CFDE F028          	movff	postinc2,??_gpio_pin_direction_initialize+3
  1005   00FFA6  CFDD F029          	movff	postdec2,??_gpio_pin_direction_initialize+4
  1006   00FFAA  C028  FFD9         	movff	??_gpio_pin_direction_initialize+3,fsr2l
  1007   00FFAE  C029  FFDA         	movff	??_gpio_pin_direction_initialize+4,fsr2h
  1008   00FFB2  5026               	movf	(??_gpio_pin_direction_initialize+1)^0,w,c
  1009   00FFB4  12DF               	iorwf	indf2,f,c
  1010                           
  1011                           ;MCAL_layer/GPIO/hal_gpio.c: 59:             break;
  1012   00FFB6  EFFE  F07F         	goto	l1323
  1013   00FFBA                     l1321:
  1014   00FFBA  C023  FFD9         	movff	gpio_pin_direction_initialize@_pin_config,fsr2l
  1015   00FFBE  C024  FFDA         	movff	gpio_pin_direction_initialize@_pin_config+1,fsr2h
  1016   00FFC2  BCDF               	btfsc	indf2,6,c
  1017   00FFC4  EFE6  F07F         	goto	u561
  1018   00FFC8  EFE9  F07F         	goto	u560
  1019   00FFCC                     u561:
  1020   00FFCC  0E01               	movlw	1
  1021   00FFCE  EFEA  F07F         	goto	u570
  1022   00FFD2                     u560:
  1023   00FFD2  0E00               	movlw	0
  1024   00FFD4                     u570:
  1025   00FFD4  6E25               	movwf	??_gpio_pin_direction_initialize^0,c
  1026   00FFD6  6A26               	clrf	(??_gpio_pin_direction_initialize+1)^0,c
  1027                           
  1028                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1029                           ; Switch size 1, requested type "simple"
  1030                           ; Number of cases is 1, Range of values is 0 to 0
  1031                           ; switch strategies available:
  1032                           ; Name         Instructions Cycles
  1033                           ; simple_byte            4     3 (average)
  1034                           ;	Chosen strategy is simple_byte
  1035   00FFD8  5026               	movf	(??_gpio_pin_direction_initialize+1)^0,w,c
  1036   00FFDA  0A00               	xorlw	0	; case 0
  1037   00FFDC  B4D8               	btfsc	status,2,c
  1038   00FFDE  EFF3  F07F         	goto	l1555
  1039   00FFE2  EF7A  F07F         	goto	l1313
  1040   00FFE6                     l1555:
  1041                           
  1042                           ; Switch size 1, requested type "simple"
  1043                           ; Number of cases is 2, Range of values is 0 to 1
  1044                           ; switch strategies available:
  1045                           ; Name         Instructions Cycles
  1046                           ; simple_byte            7     4 (average)
  1047                           ;	Chosen strategy is simple_byte
  1048   00FFE6  5025               	movf	??_gpio_pin_direction_initialize^0,w,c
  1049   00FFE8  0A00               	xorlw	0	; case 0
  1050   00FFEA  B4D8               	btfsc	status,2,c
  1051   00FFEC  EF7E  F07F         	goto	l1315
  1052   00FFF0  0A01               	xorlw	1	; case 1
  1053   00FFF2  B4D8               	btfsc	status,2,c
  1054   00FFF4  EFAF  F07F         	goto	l1317
  1055   00FFF8  EF7A  F07F         	goto	l1313
  1056   00FFFC                     l1323:
  1057                           
  1058                           ;MCAL_layer/GPIO/hal_gpio.c: 63:    return ret ;
  1059   00FFFC  502B               	movf	gpio_pin_direction_initialize@ret^0,w,c
  1060   00FFFE  0012               	return		;funcret
  1061   010000                     __end_of_gpio_pin_direction_initialize:
  1062                           	callstack 0
  1063   000000                     
  1064                           	psect	rparam
  1065   000000                     
  1066                           	psect	idloc
  1067                           
  1068                           ;Config register IDLOC0 @ 0x200000
  1069                           ;	unspecified, using default values
  1070   200000                     	org	2097152
  1071   200000  FF                 	db	255
  1072                           
  1073                           ;Config register IDLOC1 @ 0x200001
  1074                           ;	unspecified, using default values
  1075   200001                     	org	2097153
  1076   200001  FF                 	db	255
  1077                           
  1078                           ;Config register IDLOC2 @ 0x200002
  1079                           ;	unspecified, using default values
  1080   200002                     	org	2097154
  1081   200002  FF                 	db	255
  1082                           
  1083                           ;Config register IDLOC3 @ 0x200003
  1084                           ;	unspecified, using default values
  1085   200003                     	org	2097155
  1086   200003  FF                 	db	255
  1087                           
  1088                           ;Config register IDLOC4 @ 0x200004
  1089                           ;	unspecified, using default values
  1090   200004                     	org	2097156
  1091   200004  FF                 	db	255
  1092                           
  1093                           ;Config register IDLOC5 @ 0x200005
  1094                           ;	unspecified, using default values
  1095   200005                     	org	2097157
  1096   200005  FF                 	db	255
  1097                           
  1098                           ;Config register IDLOC6 @ 0x200006
  1099                           ;	unspecified, using default values
  1100   200006                     	org	2097158
  1101   200006  FF                 	db	255
  1102                           
  1103                           ;Config register IDLOC7 @ 0x200007
  1104                           ;	unspecified, using default values
  1105   200007                     	org	2097159
  1106   200007  FF                 	db	255
  1107                           
  1108                           	psect	config
  1109                           
  1110                           ; Padding undefined space
  1111   300000                     	org	3145728
  1112   300000  FF                 	db	255
  1113                           
  1114                           ;Config register CONFIG1H @ 0x300001
  1115                           ;	Oscillator Selection bits
  1116                           ;	OSC = HS, HS oscillator
  1117                           ;	Fail-Safe Clock Monitor Enable bit
  1118                           ;	FCMEN = OFF, Fail-Safe Clock Monitor disabled
  1119                           ;	Internal/External Oscillator Switchover bit
  1120                           ;	IESO = OFF, Oscillator Switchover mode disabled
  1121   300001                     	org	3145729
  1122   300001  02                 	db	2
  1123                           
  1124                           ;Config register CONFIG2L @ 0x300002
  1125                           ;	Power-up Timer Enable bit
  1126                           ;	PWRT = OFF, PWRT disabled
  1127                           ;	Brown-out Reset Enable bits
  1128                           ;	BOREN = SBORDIS, Brown-out Reset enabled in hardware only (SBOREN is disabled)
  1129                           ;	Brown Out Reset Voltage bits
  1130                           ;	BORV = 1, 
  1131   300002                     	org	3145730
  1132   300002  0F                 	db	15
  1133                           
  1134                           ;Config register CONFIG2H @ 0x300003
  1135                           ;	Watchdog Timer Enable bit
  1136                           ;	WDT = OFF, WDT disabled (control is placed on the SWDTEN bit)
  1137                           ;	Watchdog Timer Postscale Select bits
  1138                           ;	WDTPS = 32768, 1:32768
  1139   300003                     	org	3145731
  1140   300003  1E                 	db	30
  1141                           
  1142                           ; Padding undefined space
  1143   300004                     	org	3145732
  1144   300004  FF                 	db	255
  1145                           
  1146                           ;Config register CONFIG3H @ 0x300005
  1147                           ;	CCP2 MUX bit
  1148                           ;	CCP2MX = PORTC, CCP2 input/output is multiplexed with RC1
  1149                           ;	PORTB A/D Enable bit
  1150                           ;	PBADEN = OFF, PORTB<4:0> pins are configured as digital I/O on Reset
  1151                           ;	Low-Power Timer1 Oscillator Enable bit
  1152                           ;	LPT1OSC = OFF, Timer1 configured for higher power operation
  1153                           ;	MCLR Pin Enable bit
  1154                           ;	MCLRE = ON, MCLR pin enabled; RE3 input pin disabled
  1155   300005                     	org	3145733
  1156   300005  81                 	db	129
  1157                           
  1158                           ;Config register CONFIG4L @ 0x300006
  1159                           ;	Stack Full/Underflow Reset Enable bit
  1160                           ;	STVREN = ON, Stack full/underflow will cause Reset
  1161                           ;	Single-Supply ICSP Enable bit
  1162                           ;	LVP = OFF, Single-Supply ICSP disabled
  1163                           ;	Extended Instruction Set Enable bit
  1164                           ;	XINST = OFF, Instruction set extension and Indexed Addressing mode disabled (Legacy mo
      +                          de)
  1165                           ;	Background Debugger Enable bit
  1166                           ;	DEBUG = 0x1, unprogrammed default
  1167   300006                     	org	3145734
  1168   300006  81                 	db	129
  1169                           
  1170                           ; Padding undefined space
  1171   300007                     	org	3145735
  1172   300007  FF                 	db	255
  1173                           
  1174                           ;Config register CONFIG5L @ 0x300008
  1175                           ;	Code Protection bit
  1176                           ;	CP0 = OFF, Block 0 (000800-003FFFh) not code-protected
  1177                           ;	Code Protection bit
  1178                           ;	CP1 = OFF, Block 1 (004000-007FFFh) not code-protected
  1179                           ;	Code Protection bit
  1180                           ;	CP2 = OFF, Block 2 (008000-00BFFFh) not code-protected
  1181                           ;	Code Protection bit
  1182                           ;	CP3 = OFF, Block 3 (00C000-00FFFFh) not code-protected
  1183   300008                     	org	3145736
  1184   300008  0F                 	db	15
  1185                           
  1186                           ;Config register CONFIG5H @ 0x300009
  1187                           ;	Boot Block Code Protection bit
  1188                           ;	CPB = OFF, Boot block (000000-0007FFh) not code-protected
  1189                           ;	Data EEPROM Code Protection bit
  1190                           ;	CPD = OFF, Data EEPROM not code-protected
  1191   300009                     	org	3145737
  1192   300009  C0                 	db	192
  1193                           
  1194                           ;Config register CONFIG6L @ 0x30000A
  1195                           ;	Write Protection bit
  1196                           ;	WRT0 = OFF, Block 0 (000800-003FFFh) not write-protected
  1197                           ;	Write Protection bit
  1198                           ;	WRT1 = OFF, Block 1 (004000-007FFFh) not write-protected
  1199                           ;	Write Protection bit
  1200                           ;	WRT2 = OFF, Block 2 (008000-00BFFFh) not write-protected
  1201                           ;	Write Protection bit
  1202                           ;	WRT3 = OFF, Block 3 (00C000-00FFFFh) not write-protected
  1203   30000A                     	org	3145738
  1204   30000A  0F                 	db	15
  1205                           
  1206                           ;Config register CONFIG6H @ 0x30000B
  1207                           ;	Configuration Register Write Protection bit
  1208                           ;	WRTC = OFF, Configuration registers (300000-3000FFh) not write-protected
  1209                           ;	Boot Block Write Protection bit
  1210                           ;	WRTB = OFF, Boot Block (000000-0007FFh) not write-protected
  1211                           ;	Data EEPROM Write Protection bit
  1212                           ;	WRTD = OFF, Data EEPROM not write-protected
  1213   30000B                     	org	3145739
  1214   30000B  E0                 	db	224
  1215                           
  1216                           ;Config register CONFIG7L @ 0x30000C
  1217                           ;	Table Read Protection bit
  1218                           ;	EBTR0 = OFF, Block 0 (000800-003FFFh) not protected from table reads executed in other
      +                           blocks
  1219                           ;	Table Read Protection bit
  1220                           ;	EBTR1 = OFF, Block 1 (004000-007FFFh) not protected from table reads executed in other
      +                           blocks
  1221                           ;	Table Read Protection bit
  1222                           ;	EBTR2 = OFF, Block 2 (008000-00BFFFh) not protected from table reads executed in other
      +                           blocks
  1223                           ;	Table Read Protection bit
  1224                           ;	EBTR3 = OFF, Block 3 (00C000-00FFFFh) not protected from table reads executed in other
      +                           blocks
  1225   30000C                     	org	3145740
  1226   30000C  0F                 	db	15
  1227                           
  1228                           ;Config register CONFIG7H @ 0x30000D
  1229                           ;	Boot Block Table Read Protection bit
  1230                           ;	EBTRB = OFF, Boot Block (000000-0007FFh) not protected from table reads executed in ot
      +                          her blocks
  1231   30000D                     	org	3145741
  1232   30000D  40                 	db	64
  1233                           tosu	equ	0xFFF
  1234                           tosh	equ	0xFFE
  1235                           tosl	equ	0xFFD
  1236                           stkptr	equ	0xFFC
  1237                           pclatu	equ	0xFFB
  1238                           pclath	equ	0xFFA
  1239                           pcl	equ	0xFF9
  1240                           tblptru	equ	0xFF8
  1241                           tblptrh	equ	0xFF7
  1242                           tblptrl	equ	0xFF6
  1243                           tablat	equ	0xFF5
  1244                           prodh	equ	0xFF4
  1245                           prodl	equ	0xFF3
  1246                           indf0	equ	0xFEF
  1247                           postinc0	equ	0xFEE
  1248                           postdec0	equ	0xFED
  1249                           preinc0	equ	0xFEC
  1250                           plusw0	equ	0xFEB
  1251                           fsr0h	equ	0xFEA
  1252                           fsr0l	equ	0xFE9
  1253                           wreg	equ	0xFE8
  1254                           indf1	equ	0xFE7
  1255                           postinc1	equ	0xFE6
  1256                           postdec1	equ	0xFE5
  1257                           preinc1	equ	0xFE4
  1258                           plusw1	equ	0xFE3
  1259                           fsr1h	equ	0xFE2
  1260                           fsr1l	equ	0xFE1
  1261                           bsr	equ	0xFE0
  1262                           indf2	equ	0xFDF
  1263                           postinc2	equ	0xFDE
  1264                           postdec2	equ	0xFDD
  1265                           preinc2	equ	0xFDC
  1266                           plusw2	equ	0xFDB
  1267                           fsr2h	equ	0xFDA
  1268                           fsr2l	equ	0xFD9
  1269                           status	equ	0xFD8

Data Sizes:
    Strings     0
    Constant    0
    Data        34
    BSS         7
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM          127     15      56
    BANK0           128      0       0
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14          256      0       0
    BANK15          128      0       0

Pointer List with Targets:

    dc_motor_move_left@_dc_motor	PTR const struct . size(2) Largest target is 2
		 -> dc_motor_2(COMRAM[2]), dc_motor_1(COMRAM[2]), 

    dc_motor_move_right@_dc_motor	PTR const struct . size(2) Largest target is 2
		 -> dc_motor_2(COMRAM[2]), dc_motor_1(COMRAM[2]), 

    dc_motor_initialize@_dc_motor	PTR const struct . size(2) Largest target is 2
		 -> dc_motor_2(COMRAM[2]), dc_motor_1(COMRAM[2]), 

    gpio_pin_write_logic@_pin_config	PTR const struct . size(2) Largest target is 2
		 -> relay_off@pin_0bj(COMRAM[1]), relay_on@pin_0bj(COMRAM[1]), relay_initialize@pin_0bj(COMRAM[1]), dc_motor_2.dc_motor_pin(COMRAM[2]), 
		 -> dc_motor_2(COMRAM[2]), dc_motor_1.dc_motor_pin(COMRAM[2]), dc_motor_1(COMRAM[2]), led_turn_off@pin_0bj(COMRAM[1]), 
		 -> led_turn_on@pin_0bj(COMRAM[1]), led_initialize@pin_0bj(COMRAM[1]), 

    gpio_pin_direction_initialize@_pin_config	PTR const struct . size(2) Largest target is 2
		 -> relay_initialize@pin_0bj(COMRAM[1]), dc_motor_2.dc_motor_pin(COMRAM[2]), dc_motor_2(COMRAM[2]), dc_motor_1.dc_motor_pin(COMRAM[2]), 
		 -> dc_motor_1(COMRAM[2]), led_initialize@pin_0bj(COMRAM[1]), 

    port_registers	PTR volatile unsigned char [5] size(2) Largest target is 1
		 -> PORTE(BITBIGSFRll[1]), PORTD(BITBIGSFRll[1]), PORTC(BITBIGSFRll[1]), PORTB(BITBIGSFRll[1]), 
		 -> PORTA(BITBIGSFRll[1]), 

    lat_registers	PTR volatile unsigned char [5] size(2) Largest target is 1
		 -> LATE(BITBIGSFRlh[1]), LATD(BITBIGSFRlh[1]), LATC(BITBIGSFRlh[1]), LATB(BITBIGSFRlh[1]), 
		 -> LATA(BITBIGSFRll[1]), 

    tris_registers	PTR volatile unsigned char [5] size(2) Largest target is 1
		 -> TRISE(BITBIGSFRh[1]), TRISD(BITBIGSFRh[1]), TRISC(BITBIGSFRh[1]), TRISB(BITBIGSFRh[1]), 
		 -> TRISA(BITBIGSFRll[1]), 


Critical Paths under _main in COMRAM

    _main->_dc_motor_move_left
    _main->_dc_motor_move_right
    _dc_motor_move_right->_gpio_pin_write_logic
    _dc_motor_move_left->_gpio_pin_write_logic
    _application_intialize->_dc_motor_initialize
    _dc_motor_initialize->_gpio_pin_direction_initialize

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _main in BANK15

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 3     3      0    4919
                                             13 COMRAM     2     2      0
              _application_intialize
                 _dc_motor_move_left
                _dc_motor_move_right
 ---------------------------------------------------------------------------------
 (1) _dc_motor_move_right                                  3     1      2    2093
                                             10 COMRAM     3     1      2
               _gpio_pin_write_logic
 ---------------------------------------------------------------------------------
 (1) _dc_motor_move_left                                   3     1      2    2093
                                             10 COMRAM     3     1      2
               _gpio_pin_write_logic
 ---------------------------------------------------------------------------------
 (2) _gpio_pin_write_logic                                10     7      3    1851
                                              0 COMRAM    10     7      3
 ---------------------------------------------------------------------------------
 (1) _application_intialize                                1     1      0     728
                _dc_motor_initialize
 ---------------------------------------------------------------------------------
 (2) _dc_motor_initialize                                  3     1      2     725
                                              9 COMRAM     3     1      2
      _gpio_pin_direction_initialize
 ---------------------------------------------------------------------------------
 (3) _gpio_pin_direction_initialize                        9     7      2     483
                                              0 COMRAM     9     7      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _application_intialize
     _dc_motor_initialize
       _gpio_pin_direction_initialize
   _dc_motor_move_left
     _gpio_pin_write_logic
   _dc_motor_move_right
     _gpio_pin_write_logic

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             F7F      0       0      40        0.0%
EEDATA             400      0       0       0        0.0%
BITBANK14          100      0       0      32        0.0%
BANK14             100      0       0      33        0.0%
BITBANK13          100      0       0      30        0.0%
BANK13             100      0       0      31        0.0%
BITBANK12          100      0       0      28        0.0%
BANK12             100      0       0      29        0.0%
BITBANK11          100      0       0      26        0.0%
BANK11             100      0       0      27        0.0%
BITBANK10          100      0       0      24        0.0%
BANK10             100      0       0      25        0.0%
BITBANK9           100      0       0      22        0.0%
BANK9              100      0       0      23        0.0%
BITBANK8           100      0       0      20        0.0%
BANK8              100      0       0      21        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK15           80      0       0      34        0.0%
BANK15              80      0       0      35        0.0%
BITBANK0            80      0       0       4        0.0%
BANK0               80      0       0       5        0.0%
BITCOMRAM           7F      0       0       0        0.0%
COMRAM              7F      F      38       1       44.1%
BITBIGSFRh          69      0       0      36        0.0%
BITBIGSFRlh          4      0       0      37        0.0%
BITBIGSFRll          4      0       0      38        0.0%
BIGSFR               0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      38      39        0.0%
DATA                 0      0      38       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.40 build 20220703182018 
Symbol Table                                                                                   Mon Mar 04 20:05:01 2024

                                     l117 FFFE                                       l136 FEBA  
                                     l241 FD3C                                       l236 FCB0  
                                     l246 FCF6                                       l194 FC1A  
                                     u520 FED2                                       u521 FECE  
                                     u530 FEF4                                       u531 FEF0  
                                     u620 FC8A                                       u604 FDF0  
                                     u621 FC86                                       u605 FDEC  
                                     u614 FE52                                       u615 FE4E  
                                     u560 FFD2                                       u544 FF1C  
                                     u561 FFCC                                       u545 FF18  
                                     u570 FFD4                                       u554 FF7E  
                                     u650 FD0E                                       u555 FF7A  
                                     u651 FD0A                                       u580 FDA6  
                                     u660 FCC8                                       u581 FDA2  
                                     u661 FCC4                                       u590 FDC8  
                                     u591 FDC4                                       u817 FD64  
                                     prod 000FF3                       led_initialize@F2878 0038  
                                     wreg 000FE8                     relay_initialize@F2872 0034  
                                    l1311 FED2                                      l1321 FFBA  
                                    l1313 FEF4                                      l1401 FCB6  
                                    l1315 FEFC                                      l1323 FFFC  
                                    l1307 FEBC                                      l1331 FD90  
                                    l1403 FCC8                                      l1317 FF5E  
                                    l1309 FEC0                                      l1341 FE32  
                                    l1333 FD94                                      l1405 FCD0  
                                    l1335 FDA6                                      l1407 FCF4  
                                    l1361 FC92                                      l1345 FE8E  
                                    l1337 FDC8                                      l1363 FCAE  
                                    l1355 FC74                                      l1339 FDD0  
                                    l1347 FEB8                                      l1357 FC78  
                                    l1381 FC02                                      l1359 FC8A  
                                    l1383 FC0E                                      l1391 FD0E  
                                    l1553 FEA2                                      l1393 FD16  
                                    l1481 FD5A                                      l1473 FD3E  
                                    l1555 FFE6                                      l1379 FC02  
                                    l1395 FD3A                                      l1387 FCF8  
                                    l1483 FD70                                      l1475 FD3E  
                                    l1389 FCFC                                      l1485 FD7C  
                                    l1477 FD42                                      l1399 FCB2  
                                    l1479 FD4E                                      _LATA 000F89  
                                    _LATB 000F8A                                      _LATC 000F8B  
                                    _LATD 000F8C                                      _LATE 000F8D  
                 ??_application_intialize 002F                                      _main FD3E  
                                    fsr2h 000FDA                                      indf2 000FDF  
                                    fsr1l 000FE1                                      fsr2l 000FD9  
                                    prodl 000FF3                                      start 0000  
                            ___param_bank 000000                    dc_motor_initialize@ret 002E  
                    _gpio_pin_write_logic FD90                                     ?_main 0023  
                                   _PORTA 000F80                                     _PORTB 000F81  
                                   _PORTC 000F82                                     _PORTD 000F83  
                                   _PORTE 000F84                                     _TRISA 000F92  
                                   _TRISB 000F93                                     _TRISC 000F94  
                                   _TRISD 000F95                                     _TRISE 000F96  
                                   tablat 000FF5                                     status 000FD8  
          ?_gpio_pin_direction_initialize 0023                           __initialization FC3E  
                            __end_of_main FD90                     ?_gpio_pin_write_logic 0023  
                           _lat_registers 000B               __end_of_dc_motor_initialize FCB2  
                                  ??_main 0030                             __activetblptr 000002  
                        led_turn_on@F2883 0037               __end_of_dc_motor_move_right FD3E  
                                  clear_0 FC64                                    isa$std 000001  
                            __pdataCOMRAM 0001                                    tblptrh 000FF7  
                                  tblptrl 000FF6                                    tblptru 000FF8  
                              __accesstop 0080                   __end_of__initialization FC6A  
                           ___rparam_used 000001               dc_motor_move_left@_dc_motor 002D  
                  ??_gpio_pin_write_logic 0026                            __pcstackCOMRAM 0023  
gpio_pin_direction_initialize@_pin_config 0023                                _dc_motor_1 0021  
                              _dc_motor_2 001F             __end_of_application_intialize FC1C  
                       led_turn_off@F2888 0036                      led_turn_toggle@F2893 0035  
                          _tris_registers 0015                                   __Hparam 0000  
                                 __Lparam 0000                     dc_motor_move_left@ret 002F  
                                 __pcinit FC3E                                   __ramtop 1000  
                                 __ptext0 FD3E                                   __ptext1 FCF8  
                                 __ptext2 FCB2                                   __ptext3 FD90  
                                 __ptext4 FC02                                   __ptext5 FC74  
                                 __ptext6 FEBC                             relay_on@F2877 0033  
         ??_gpio_pin_direction_initialize 0025                      end_of_initialization FC6A  
                           __Lmediumconst 0000                                   postdec1 000FE5  
                                 postdec2 000FDD                                   postinc0 000FEE  
                                 postinc2 000FDE                             __pidataCOMRAM FC1C  
                     start_initialization FC3E     __end_of_gpio_pin_direction_initialize 0000  
           _gpio_pin_direction_initialize FEBC                __end_of_dc_motor_move_left FCF8  
                             __pbssCOMRAM 0032                     _application_intialize FC02  
         gpio_pin_write_logic@_pin_config 0023                 gpio_pin_write_logic@logic 0025  
                     _dc_motor_initialize FC74              dc_motor_initialize@_dc_motor 002C  
        gpio_pin_direction_initialize@ret 002B                      ?_dc_motor_initialize 002C  
                 gpio_pin_write_logic@ret 002C                                 copy_data0 FC52  
                     _dc_motor_move_right FCF8                    ?_application_intialize 0023  
                                __Hrparam 0000                                  __Lrparam 0000  
                    ?_dc_motor_move_right 002D                     ??_dc_motor_initialize 002E  
                  dc_motor_move_right@ret 002F                            relay_off@F2882 0032  
                                isa$xinst 000000                     ??_dc_motor_move_right 002F  
                      _dc_motor_move_left FCB2              __end_of_gpio_pin_write_logic FEBC  
                     ?_dc_motor_move_left 002D                      ??_dc_motor_move_left 002F  
            dc_motor_move_right@_dc_motor 002D                            _port_registers 0001  
